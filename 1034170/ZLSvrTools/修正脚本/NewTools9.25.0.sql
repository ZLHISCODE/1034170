------------------------------------------------
--  数据结构
------------------------------------------------
Create Table zlTools.zlRegFunc(
  系统 Number(5),
  序号 Number(18),
  功能 Varchar2(30))
/
Alter Table zlTools.zlRegFunc
  Add Constraint zlRegFunc_UQ Unique(系统, 序号, 功能)
/

Create Global Temporary Table zlTools.zlRegFile(
  项目 VARCHAR2(10),
  系统 Number(5),
  序号 Number(18),
  功能 Varchar2(1000))
  On Commit Preserve Rows
/

Create Global Temporary Table zlTools.zlRegAudit(
  项目 VARCHAR2(10),
  内容 Varchar2(1000))
  On Commit Preserve Rows
/

------------------------------------------------
--  数据类型
------------------------------------------------
Create Or Replace Type zltools.t_Reg_Record  As Object(
  Item Varchar2(10),  --在返回注册信息时表示信息类型；在返回授权功能时表示系统
  Prog number(18),    --在返回注册信息时无意义；在返回授权功能时表示程序号
  Text Varchar2(1000))--在返回注册信息时表示内容；在返回授权功能时表示功能
/
Create Or Replace Type zltools.t_Reg_Rowset As Table Of zltools.t_Reg_Record
/

Create Or Replace Type zltools.t_Menu_Record As Object(
  层次   Number,
  ID     Number(18),
  上级ID Number(18),
  标题   Varchar2(30),
  短标题 Varchar2(30),
  快键   Varchar2(2),
  说明   Varchar2(250),
  模块   Number(18),
  系统   Number(5),
  图标   Number(4),
  部件   Varchar2(50),
  标记   Number(1))
/
Create Or Replace Type zltools.t_Menu_Rowset As Table Of zltools.t_Menu_Record
/

------------------------------------------------------------
-- 创建函数、过程
------------------------------------------------------------
Create Or Replace Procedure zlTools.p_Reg_Apply wrapped 
0
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
3
7
8106000
1
4
0 
52
2 :e:
1P_REG_APPLY:
1TYPE:
1INFO_TYPE:
1VARCHAR2:
11000:
1BINARY_INTEGER:
1T_INFO:
1V_BASIC:
136:
1V_CODON:
1G3J0TR7H594NSYWLAQXC8FEVD6ZKIP2U1BMO:
1V_ORIGINAL:
132767:
1V_BIT_CHAR:
14:
1V_POSTMARK:
1N_LEN_MARK:
1NUMBER:
118:
1I:
1功能:
1||:
1CHR:
110:
1BULK:
1COLLECT:
1ZLREGFILE:
1项目:
1单位名称:
1授权性质:
1使用期限:
1授权站点:
1授权日期:
1产品简名:
1产品标题:
1产品开发商:
1技术支持商:
1支持商简名:
1支持商URL:
1支持商MAIL:
1DECODE:
11:
12:
13:
15:
16:
17:
18:
19:
111:
112:
1100:
1N_COUNT:
1FIRST:
1LAST:
1LOOP:
1LENGTH:
1SUBSTR:
1TO_CHAR:
165536:
1-:
1ASCII:
1XXXX:
1:
10:
125:
1+:
165:
1TRANSLATE:
1TRUNC:
1/:
1ZLREGINFO:
1授权证章:
1授权邮戳:
1授权工具:
1行号:
1内容:
1=:
1序号:
1ZLREGFUNC:
1系统:
1授权功能:
0

0
0
186
2
0 1d 9a a0 b4 55 6a 9d
a0 51 a5 1c a0 40 a8 c
77 a3 a0 1c a0 b4 2e 81
b0 a3 a0 51 a5 1c 4d 81
b0 a3 a0 51 a5 1c 6e 81
b0 a3 a0 51 a5 1c 81 b0
a3 a0 51 a5 1c 81 b0 a3
a0 51 a5 1c 81 b0 a3 a0
51 a5 1c 81 b0 :2 a0 6b 7e
a0 51 a5 b a0 b4 2e ac
:4 a0 b9 b2 ee :2 a0 6b 3e :c 6e
5 48 ac :3 a0 6b 6e 51 6e
51 6e 51 6e 51 6e 51 6e
51 6e 51 6e 51 6e 51 6e
51 6e 51 6e :2 51 a5 b de
ac e5 d0 b2 e9 91 :2 a0 6b
:2 a0 6b a0 63 37 :2 a0 7e :2 a0
a5 b b4 2e d b7 a0 47
91 51 :2 a0 a5 b a0 63 37
:3 a0 51 7e :4 a0 51 a5 b a5
b b4 2e 6e a5 b :2 51 a5
b d :2 a0 7e a0 b4 2e d
b7 a0 47 a0 6e d 91 :2 51
a0 63 37 :2 a0 7e a0 b4 2e
d b7 a0 47 91 :2 51 a0 63
37 :2 a0 7e :2 a0 7e 51 b4 2e
a5 b b4 2e d b7 a0 47
:5 a0 a5 b d :4 a0 a5 b 7e
51 b4 2e a5 b d :4 a0 7e
51 b4 2e a5 b 7e :2 a0 51
a0 a5 b b4 2e d :2 a0 3e
:3 6e 5 48 cd e9 :4 a0 6e 51
a0 5 d7 b2 5 e9 :5 a0 51
a0 ac a0 b2 ee a0 7e 6e
b4 2e ac d0 d7 b2 e9 :7 a0
ac a0 b2 ee a0 7e 6e b4
2e ac d0 d7 b2 e9 a0 cd
e9 :7 a0 ac a0 b2 ee a0 7e
6e b4 2e ac d0 d7 b2 e9
b7 a4 a0 b1 11 68 4f 17
b5 
186
2
0 3 c 8 7 1d 21 41
29 4 2d 2e 36 3a 3b 3c
25 66 4c 50 58 5c 5d 62
4b 83 71 48 75 76 7e 7f
70 a4 8e 6d 92 93 9b a0
8d c0 af 8a b3 b4 bc ae
dc cb ab cf d0 d8 ca f8
e7 c7 eb ec f4 e6 114 103
e3 107 108 110 102 11b 11f ff
123 126 12a 12d 12e 130 134 135
13a 13b 13f 143 147 14b 14d 14e
155 159 15d 1 160 165 16a 16f
174 179 17e 183 188 18d 192 197
19c 1a0 1a3 1a4 1a8 1ac 1b0 1b3
1b8 1bb 1c0 1c3 1c8 1cb 1d0 1d3
1d8 1db 1e0 1e3 1e8 1eb 1f0 1f3
1f8 1fb 200 203 208 20b 210 213
216 217 219 21b 21c 222 226 227
22c 230 234 238 23b 23f 243 246
24a 24d 24f 253 257 25a 25e 262
263 265 266 26b 26f 271 275 27c
280 283 287 28b 28c 28e 292 295
297 29b 29f 2a3 2a6 2a9 2ad 2b1
2b5 2b9 2bc 2bd 2bf 2c0 2c2 2c3
2c8 2cd 2ce 2d0 2d3 2d6 2d7 2d9
2dd 2e1 2e5 2e8 2ec 2ed 2f2 2f6
2f8 2fc 303 307 30c 310 314 317
31a 31e 321 323 327 32b 32e 332
333 338 33c 33e 342 349 34d 350
353 357 35a 35c 360 364 367 36b
36f 372 375 376 37b 37c 37e 37f
384 388 38a 38e 395 399 39d 3a1
3a5 3a9 3aa 3ac 3b0 3b4 3b8 3bc
3c0 3c1 3c3 3c6 3c9 3ca 3cf 3d0
3d2 3d6 3da 3de 3e2 3e6 3e9 3ec
3ed 3f2 3f3 3f5 3f8 3fc 400 403
407 408 40a 40b 410 414 418 1
41c 421 426 42b 42f 432 437 43c
440 444 448 44c 451 454 458 45c
464 465 469 46e 472 476 47a 47e
482 485 489 48a 48e 48f 496 49a
49d 4a2 4a3 4a8 4a9 4ad 4b5 4b6
4bb 4bf 4c3 4c7 4cb 4cf 4d3 4d7
4d8 4dc 4dd 4e4 4e8 4eb 4f0 4f1
4f6 4f7 4fb 503 504 509 50d 512
517 51b 51f 523 527 52b 52f 533
534 538 539 540 544 547 54c 54d
552 553 557 55f 560 565 567 56b
56f 571 57d 581 583 58c 
186
2
0 1 b 3 0 :2 1 8 1e
27 26 1e :4 15 :2 3 :2 a :3 17 a
:2 3 e 17 16 e 1e e :2 3
e 17 16 e 1e e :2 3 e
17 16 :2 e :2 3 e 17 16 :2 e
:2 3 e 17 16 :2 e :2 3 e 15
14 :2 e 3 a :2 c 13 16 1a
:2 16 1e :3 a 23 :2 8 12 8 3
8 9 :2 b 9 16 22 2e 3a
46 52 5e 6a a 18 26 33
:2 9 3 c 13 :2 15 1d 29 2c
38 3b 47 4a 56 59 65 68
74 14 20 23 31 34 42 45
53 57 64 68 76 14 :3 c :5 3
7 12 :2 19 22 :2 29 2e 12 3
5 13 1e 21 28 :2 21 :2 13 5
2e 7 3 7 12 17 1e :2 17
2a 12 3 5 13 1a 22 28
2a 30 37 43 4c :2 30 :2 2a :2 22
51 :2 1a 5a 5d :2 13 :2 5 13 1e
21 :2 13 5 2a 7 :2 3 e 3
7 12 17 19 12 3 5 10
18 1b :2 10 5 19 7 3 7
12 17 1a 12 3 5 10 18
1b 1f 27 29 :2 1f :2 1b :2 10 5
1a 7 :2 3 11 1b 27 30 :2 11
:2 3 11 17 1e :2 17 2a 2c :2 17
:2 11 :2 3 11 18 24 2f 31 :2 24
:2 11 34 37 3e 4a 4d :2 37 :2 11
3 a :2 1a 25 31 3d :2 1a :2 3
f 1a 22 2a 3a 46 49 39
:4 3 f 6 e 16 c 14 17
c 23 1e 23 33 3a 3c :2 3a
1e 5 :3 3 f 6 e 16 c
14 1c c 28 23 28 38 3f
41 :2 3f 23 5 :3 3 a :2 3 f
6 e 16 c 14 1c c 28
23 28 38 3f 41 :2 3f 23 5
:3 3 :2 1 5 :6 1 
186
2
0 :2 1 3 0 :2 1 :a 3 :8 4 :8 6
:8 7 :7 8 :7 9 :7 a :7 b :d e f :5 10
:c 11 :4 12 :2 11 10 :10 13 :c 14 15 :4 13
:4 e :a 16 :a 17 16 18 16 :9 19 :18 1a
:7 1b 19 1c 19 :3 1d :6 1e :7 1f 1e
20 1e :6 21 :e 22 21 23 21 :8 24
:d 25 :14 26 :a 29 :c 2a 2b :3 2c :e 2d :3 2b
2e :3 2f :e 30 :3 2e :3 33 34 :3 35 :e 36
:3 34 :2 c 37 :3 1 37 :2 1 
58e
4
:4 0 5 :3 0 2
:3 0 1 :a 0 182
1 :4 0 4 :2 0
182 2 5 :2 0
7 0 f 180
4 :3 0 3 8
a :6 0 6 :3 0
c 5 e b
:2 0 1 3 f
7 :4 0 9 :2 0
7 3 :3 0 12
:7 0 3 :4 0 14
15 :3 0 18 13
16 180 7 :6 0
9 :2 0 b 4
:3 0 9 1a 1c
:7 0 20 1d 1e
180 8 :6 0 d
:2 0 f 4 :3 0
d 22 24 :6 0
b :4 0 28 25
26 180 a :6 0
f :2 0 13 4
:3 0 11 2a 2c
:6 0 2f 2d 0
180 c :6 0 d
:2 0 17 4 :3 0
15 31 33 :6 0
36 34 0 180
e :6 0 13 :2 0
1b 4 :3 0 19
38 3a :6 0 3d
3b 0 180 10
:6 0 45 46 0
1f 12 :3 0 1d
3f 41 :6 0 44
42 0 180 11
:6 0 14 :3 0 15
:2 0 1 16 :2 0
17 :3 0 18 :2 0
21 49 4b 19
:3 0 23 48 4e
:3 0 26 1a :3 0
7 :3 0 1b :3 0
14 :3 0 53 54
28 56 69 0
6a :3 0 14 :3 0
1c :2 0 1 58
59 0 1d :4 0
1e :4 0 1f :4 0
20 :4 0 21 :4 0
22 :4 0 23 :4 0
24 :4 0 25 :4 0
26 :4 0 27 :4 0
28 :4 0 2a :3 0
5a 5b 68 0
29 :3 0 14 :3 0
1c :2 0 1 6c
6d 0 1d :4 0
2a :2 0 1e :4 0
2b :2 0 1f :4 0
2c :2 0 20 :4 0
f :2 0 21 :4 0
2d :2 0 22 :4 0
2e :2 0 23 :4 0
2f :2 0 24 :4 0
30 :2 0 25 :4 0
31 :2 0 26 :4 0
18 :2 0 27 :4 0
32 :2 0 28 :4 0
33 :2 0 34 :2 0
37 6b 88 1
89 52 8d 8e
8b :2 0 1 0
50 57 0 54
0 8c :2 0 17d
35 :3 0 7 :3 0
36 :3 0 91 92
0 7 :3 0 37
:3 0 94 95 0
38 :3 0 93 96
0 90 98 c
:3 0 c :3 0 16
:2 0 7 :3 0 35
:3 0 56 9d 9f
58 9c a1 :3 0
9a a2 0 a4
5b a6 38 :3 0
99 a4 :4 0 17d
35 :3 0 2a :2 0
39 :3 0 c :3 0
5d a9 ab 38
:3 0 a8 ac 0
a7 ae e :3 0
3a :3 0 3b :3 0
3c :2 0 3d :2 0
3e :3 0 3a :3 0
c :3 0 35 :3 0
2a :2 0 5f b6
ba 63 b5 bc
65 b4 be :3 0
3f :4 0 68 b2
c1 2b :2 0 f
:2 0 6b b1 c5
b0 c6 0 cf
10 :3 0 10 :3 0
16 :2 0 e :3 0
6f ca cc :3 0
c8 cd 0 cf
72 d1 38 :3 0
af cf :4 0 17d
8 :3 0 40 :4 0
d2 d3 0 17d
35 :3 0 41 :2 0
31 :2 0 38 :3 0
d6 d7 0 d5
d9 8 :3 0 8
:3 0 16 :2 0 35
:3 0 75 dd df
:3 0 db e0 0
e2 78 e4 38
:3 0 da e2 :4 0
17d 35 :3 0 41
:2 0 42 :2 0 38
:3 0 e6 e7 0
e5 e9 8 :3 0
8 :3 0 16 :2 0
17 :3 0 35 :3 0
43 :2 0 44 :2 0
7a f0 f2 :3 0
7d ee f4 7f
ed f6 :3 0 eb
f7 0 f9 82
fb 38 :3 0 ea
f9 :4 0 17d 10
:3 0 45 :3 0 10
:3 0 8 :3 0 a
:3 0 84 fd 101
fc 102 0 17d
11 :3 0 46 :3 0
39 :3 0 10 :3 0
88 106 108 47
:2 0 2b :2 0 8a
10a 10c :3 0 8d
105 10e 104 10f
0 17d 10 :3 0
3a :3 0 10 :3 0
11 :3 0 43 :2 0
2a :2 0 8f 115
117 :3 0 92 112
119 16 :2 0 3a
:3 0 10 :3 0 2a
:2 0 11 :3 0 95
11c 120 99 11b
122 :3 0 111 123
0 17d 48 :3 0
1c :2 0 1 49
:4 0 4a :4 0 4b
:4 0 9c :3 0 126
127 12b 125 12c
0 12e :2 0 12d
:2 0 17d 48 :3 0
1c :2 0 1 4c
:2 0 1 4d :2 0
1 4a :4 0 2a
:2 0 10 :3 0 a0
:3 0 12f 138 139
13a :4 0 a4 a8
:4 0 137 :2 0 17d
48 :3 0 1c :2 0
1 4c :2 0 1
4d :2 0 1 1c
:2 0 1 2a :2 0
15 :2 0 1 aa
1b :3 0 ae 144
14a 0 14b :3 0
1c :2 0 1 4e
:2 0 49 :4 0 b2
147 149 :5 0 142
145 0 13b 14e
14c 14f :4 0 b5
0 14d :2 0 17d
48 :3 0 1c :2 0
1 4c :2 0 1
4d :2 0 1 1c
:2 0 1 4f :2 0
1 15 :2 0 1
b9 1b :3 0 bd
159 15f 0 160
:3 0 1c :2 0 1
4e :2 0 4b :4 0
c1 15c 15e :5 0
157 15a 0 150
163 161 164 :4 0
c4 0 162 :2 0
17d 50 :3 0 165
:2 0 167 :2 0 166
:2 0 17d 50 :3 0
51 :2 0 1 4f
:2 0 1 15 :2 0
1 51 :2 0 1
4f :2 0 1 15
:2 0 1 c8 1b
:3 0 cc 171 177
0 178 :3 0 1c
:2 0 1 4e :2 0
52 :4 0 d0 174
176 :5 0 16f 172
0 168 17b 179
17c :4 0 d3 0
17a :2 0 17d f0
181 :3 0 181 1
:3 0 e7 181 180
17d 17e :6 0 182
:2 0 2 5 181
184 :2 0 1 182
185 :8 0 
101
4
:2 0 d7 1 9
1 d 1 11
1 1b 1 19
1 23 1 21
1 2b 1 29
1 32 1 30
1 39 1 37
1 40 1 3e
1 4a 2 47
4c 1 4f 1
55 c 5c 5d
5e 5f 60 61
62 63 64 65
66 67 1a 6e
6f 70 71 72
73 74 75 76
77 78 79 7a
7b 7c 7d 7e
7f 80 81 82
83 84 85 86
87 1 8a 1
52 1 9e 2
9b a0 1 a3
1 aa 3 b7
b8 b9 1 bb
2 b3 bd 2
bf c0 3 c2
c3 c4 2 c9
cb 2 c7 ce
2 dc de 1
e1 2 ef f1
1 f3 2 ec
f5 1 f8 3
fe ff 100 1
107 2 109 10b
1 10d 2 114
116 2 113 118
3 11d 11e 11f
2 11a 121 3
128 129 12a 3
133 134 135 3
130 131 132 1
136 3 13f 140
141 1 143 1
148 2 146 148
3 13c 13d 13e
3 154 155 156
1 158 1 15d
2 15b 15d 3
151 152 153 3
16c 16d 16e 1
170 1 175 2
173 175 3 169
16a 16b 10 :2 0
d1 d4 e4 fb
103 110 124 12e
13a 14f 164 167
17c 8 10 17
1f 27 2e 35
3c 43 10 8f
a6 d1 d4 e4
fb 103 110 124
12e 13a 14f 164
167 17c 183 
1
4
0 
184
0
1
14
5
d
0 1 1 1 1 0 0 0
0 0 0 0 0 0 0 0
0 0 0 0 
2 0 1
e5 5 0
d5 4 0
a7 3 0
90 2 0
30 1 0
11 1 0
3e 1 0
21 1 0
7 1 0
37 1 0
19 1 0
29 1 0
0

/
Create Or Replace Function zlTools.f_Reg_Audit wrapped 
0
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
3
8
8106000
1
4
0 
a8
2 :e:
1FUNCTION:
1F_REG_AUDIT:
1FROM_TEMP_IN:
1NUMBER:
10:
1RETURN:
1VARCHAR2:
1PRAGMA:
1AUTONOMOUS_TRANSACTION:
1V_BASIC:
136:
1V_CODON:
1G3J0TR7H594NSYWLAQXC8FEVD6ZKIP2U1BMO:
1V_GRANT:
132767:
1V_TIP_PUT:
1128:
1V_TIP_OUT:
1V_BADGE:
1V_ORIGINAL:
1V_BIT_CHAR:
14:
1V_POSTMARK:
1N_LEN_MARK:
118:
1TYPE:
1INFO_TYPE:
11000:
1BINARY_INTEGER:
1T_INFO:
1N_RECORD:
1N_GRANT_KIND:
11:
1N_TIME_LIMIT:
15:
1D_START_DATE:
1DATE:
1D_LOGON_TIME:
1N_LOGON_TIME:
1N_IS_RIGHT:
1GET_TIP:
1V_SOURCE:
1RAW_SOURCE:
1RAW:
1UTL_RAW:
1CAST_TO_RAW:
1RAW_CIPHER:
12048:
1ERROR_IN_INPUT_BUFFER_LENGTH:
1SYS:
1DBMS_OBFUSCATION_TOOLKIT:
1MD5:
1INPUT:
1CHECKSUM:
1RAWTOHEX:
1GET_ZIP:
1V_ZIP:
1V_INPUT:
1V_FCHAR:
1CHAR:
1N_CHARS:
1LOOP:
1SUBSTR:
1LENGTH:
1REPLACE:
1<:
1A:
1CHR:
1ASCII:
1+:
123:
1IS NULL:
1||:
1TRIM:
1TO_CHAR:
1XXXXX:
1EXIT:
1-:
1OTHERS:
1NVL:
1COUNT:
1MIN:
1LOGON_TIME:
1MOD:
1TO_NUMBER:
1hh24miss:
131:
1V$SESSION:
1STATUS:
1=:
1ACTIVE:
1USERNAME:
1USER:
1INSTR:
1UPPER:
1PROGRAM:
1VB6:
1>:
1ZL:
1ERROR-20101, Unallowed Enviroment!:
1USER_SOURCE:
1NAME:
1F_REG_INFO:
1F_REG_TOOL:
1F_REG_FUNC:
1TEXT:
1ZLREGAUDIT:
1ERROR-20102, Artificial Interfere!:
1N_COUNT:
19:
125:
165:
1!=:
1I:
1内容:
1ZLREGINFO:
1项目:
1授权邮戳:
1CEIL:
1/:
12:
1TRANSLATE:
1*:
165536:
1XXXX:
110:
1单位名称:
1授权性质:
13:
1使用期限:
1授权站点:
1授权日期:
16:
1产品简名:
17:
1产品标题:
18:
1产品开发商:
1技术支持商:
1支持商简名:
111:
1支持商URL:
112:
1支持商MAIL:
1BULK:
1COLLECT:
1DECODE:
1功能:
1ZLREGFILE:
1FIRST:
1LAST:
1ELSIF:
1TO_DATE:
1yyyy-mm-dd:
1授权工具:
1行号:
1序号:
1系统:
1ZLREGFUNC:
1授权功能:
1WHILE:
1IS NOT NULL:
1SUBSTRB:
1授权证章:
1COMMIT:
1ERROR-20103, Overpassed Certificate!:
1ERROR-20104, Inoperative Badge!:
1ERROR-20109, Other Unknown Error!:
0

0
0
874
2
0 a0 1d 8d 8f a0 51 b0
3d b4 :3 a0 2c 6a a0 b4 5d
a3 a0 51 a5 1c 4d 81 b0
a3 a0 51 a5 1c 6e 81 b0
a3 a0 51 a5 1c 4d 81 b0
a3 a0 51 a5 1c 4d 81 b0
a3 a0 51 a5 1c 4d 81 b0
a3 a0 51 a5 1c 4d 81 b0
a3 a0 51 a5 1c 81 b0 a3
a0 51 a5 1c 81 b0 a3 a0
51 a5 1c 81 b0 a3 a0 51
a5 1c 81 b0 a0 9d a0 51
a5 1c a0 40 a8 c 77 a3
a0 1c a0 b4 2e 81 b0 a3
a0 51 a5 1c 51 81 b0 a3
a0 51 a5 1c 51 81 b0 a3
a0 51 a5 1c 51 81 b0 a3
a0 1c 81 b0 a3 a0 1c 81
b0 a3 a0 51 a5 1c 51 81
b0 a3 a0 51 a5 1c 51 81
b0 a0 8d 8f a0 b0 3d b4
:2 a0 a3 2c 6a a0 51 a5 1c
:2 a0 6b a0 a5 b 81 b0 a3
a0 51 a5 1c 81 b0 8b b0
2a :2 a0 6b a0 6b :2 a0 e :2 a0
e a5 57 :3 a0 a5 b 65 b7
a4 a0 b1 11 68 4f a0 8d
8f a0 b0 3d b4 :2 a0 a3 2c
6a a0 51 a5 1c 81 b0 a3
a0 51 a5 1c 81 b0 a3 a0
51 a5 1c 81 b0 a3 a0 51
a5 1c 81 b0 :2 a0 d :4 a0 :2 51
a5 b d :3 a0 a5 b d :4 a0
a5 b d a0 7e 6e b4 2e
:4 a0 a5 b 7e 51 b4 2e a5
b d b7 19 3c a0 7e b4
2e :2 a0 7e a0 b4 2e 7e :3 a0
6e a5 b a5 b b4 2e d
a0 2b b7 :2 a0 7e a0 b4 2e
7e :3 a0 7e :2 a0 a5 b b4 2e
6e a5 b a5 b b4 2e d
b7 :2 19 3c b7 a0 47 :2 a0 65
b7 a0 53 a0 4d 65 b7 a6
9 a4 a0 b1 11 68 4f :2 a0
d2 9f 51 a5 b a0 9f a0
d2 :4 a0 9f a0 d2 6e a5 b
a5 b 51 7e a5 2e 7e 51
b4 2e ac :4 a0 b2 ee a0 7e
6e b4 2e :2 a0 7e b4 2e a
10 :3 a0 a5 b 6e a5 b 7e
51 b4 2e :3 a0 a5 b 6e a5
b 7e 51 b4 2e 52 10 5a
a 10 ac e5 d0 b2 e9 a0
7e 51 b4 2e a0 6e 65 b7
19 3c :2 a0 d2 9f 51 a5 b
ac :2 a0 b2 ee a0 3e :4 6e 5
48 :2 a0 6e a5 b 7e 51 b4
2e a 10 ac e5 d0 b2 e9
a0 7e 51 b4 2e a0 6e 65
b7 19 3c 91 :2 51 a0 63 37
:2 a0 7e a0 b4 2e d b7 a0
47 91 :2 51 a0 63 37 :2 a0 7e
:2 a0 7e 51 b4 2e a5 b b4
2e d b7 a0 47 a0 7e 51
b4 2e :2 a0 6b ac :3 a0 b9 b2
ee :2 a0 6b 7e 6e b4 2e ac
e5 d0 b2 e9 :4 a0 a5 b 7e
51 b4 2e a5 b d :4 a0 7e
51 b4 2e a5 b 7e :2 a0 51
a0 a5 b b4 2e d :5 a0 a5
b d 91 51 :2 a0 a5 b 7e
51 a0 b4 2e 63 37 :3 a0 51
7e a0 7e 51 b4 2e 5a 7e
51 b4 2e b4 2e 51 a5 b
d :2 a0 7e a0 51 7e :2 a0 6e
a5 b b4 2e a5 b b4 2e
d b7 a0 47 a0 cd e9 :3 a0
51 :3 a0 51 a5 b a5 b 7e
51 b4 2e a5 b d :3 a0 6e
a0 5 d7 b2 5 e9 :6 a0 51
a5 b :2 51 a5 b 7e 51 b4
2e :3 a0 51 a5 b :2 51 a5 b
7e :3 a0 51 a5 b :2 51 a5 b
b4 2e 7e 51 b4 2e a5 b
d :3 a0 6e a0 5 d7 b2 5
e9 :6 a0 51 a5 b :2 51 a5 b
7e 51 b4 2e :3 a0 51 a5 b
:2 51 a5 b 7e :3 a0 51 a5 b
:2 51 a5 b b4 2e 7e 51 b4
2e a5 b d :3 a0 6e a0 5
d7 b2 5 e9 :6 a0 51 a5 b
:2 51 a5 b 7e 51 b4 2e :3 a0
51 a5 b :2 51 a5 b 7e :3 a0
51 a5 b :2 51 a5 b b4 2e
7e 51 b4 2e a5 b d :3 a0
6e a0 5 d7 b2 5 e9 :6 a0
51 a5 b :2 51 a5 b 7e 51
b4 2e :3 a0 51 a5 b :2 51 a5
b 7e :3 a0 51 a5 b :2 51 a5
b b4 2e 7e 51 b4 2e a5
b d :3 a0 6e a0 5 d7 b2
5 e9 :6 a0 51 a5 b :2 51 a5
b 7e 51 b4 2e :3 a0 51 a5
b :2 51 a5 b 7e :3 a0 51 a5
b :2 51 a5 b b4 2e 7e 51
b4 2e a5 b d :3 a0 6e a0
5 d7 b2 5 e9 :6 a0 51 a5
b :2 51 a5 b 7e 51 b4 2e
:3 a0 51 a5 b :2 51 a5 b 7e
:3 a0 51 a5 b :2 51 a5 b b4
2e 7e 51 b4 2e a5 b d
:3 a0 6e a0 5 d7 b2 5 e9
:6 a0 51 a5 b :2 51 a5 b 7e
51 b4 2e :3 a0 51 a5 b :2 51
a5 b 7e :3 a0 51 a5 b :2 51
a5 b b4 2e 7e 51 b4 2e
a5 b d :3 a0 6e a0 5 d7
b2 5 e9 :6 a0 51 a5 b :2 51
a5 b 7e 51 b4 2e :3 a0 51
a5 b :2 51 a5 b 7e :3 a0 51
a5 b :2 51 a5 b b4 2e 7e
51 b4 2e a5 b d :3 a0 6e
a0 5 d7 b2 5 e9 :6 a0 51
a5 b :2 51 a5 b 7e 51 b4
2e :3 a0 51 a5 b :2 51 a5 b
7e :3 a0 51 a5 b :2 51 a5 b
b4 2e 7e 51 b4 2e a5 b
d :3 a0 6e a0 5 d7 b2 5
e9 :6 a0 51 a5 b :2 51 a5 b
7e 51 b4 2e :3 a0 51 a5 b
:2 51 a5 b 7e :3 a0 51 a5 b
:2 51 a5 b b4 2e 7e 51 b4
2e a5 b d :3 a0 6e a0 5
d7 b2 5 e9 :6 a0 51 a5 b
:2 51 a5 b 7e 51 b4 2e :3 a0
51 a5 b :2 51 a5 b 7e :3 a0
51 a5 b :2 51 a5 b b4 2e
7e 51 b4 2e a5 b d :3 a0
6e a0 5 d7 b2 5 e9 :2 a0
6b 7e :2 a0 6b a0 b4 2e ac
:4 a0 b9 b2 ee :2 a0 6b 3e :c 6e
5 48 ac :3 a0 6b 6e 51 6e
51 6e 51 6e 51 6e 51 6e
51 6e 51 6e 51 6e 51 6e
51 6e 51 6e 51 a5 b de
ac e5 d0 b2 e9 b7 :2 a0 6b
7e :2 a0 6b a0 b4 2e ac :4 a0
b9 b2 ee :2 a0 6b 3e :c 6e 5
48 ac :3 a0 6b 6e 51 6e 51
6e 51 6e 51 6e 51 6e 51
6e 51 6e 51 6e 51 6e 51
6e 51 6e 51 a5 b de ac
e5 d0 b2 e9 b7 :2 19 3c 91
:2 a0 6b :2 a0 6b a0 63 37 :2 a0
7e :2 a0 a5 b b4 2e d :3 a0
a5 b :2 51 a5 b 7e 6e b4
2e :5 a0 a5 b 51 a5 b a5
b d a0 b7 :3 a0 a5 b :2 51
a5 b 7e 6e b4 2e :5 a0 a5
b 51 a5 b a5 b d a0
b7 19 :3 a0 a5 b :2 51 a5 b
7e 6e b4 2e :5 a0 a5 b 51
a5 b 6e a5 b d b7 :2 19
3c b7 a0 47 a0 7e 51 b4
2e :2 a0 6b a0 ac :4 a0 b9 b2
ee :2 a0 6b 7e 6e b4 2e ac
a0 de ac e5 d0 b2 e9 b7
:2 a0 6b a0 ac :4 a0 b9 b2 ee
:2 a0 6b 7e 6e b4 2e ac a0
de ac e5 d0 b2 e9 b7 :2 19
3c :2 a0 7e 6e b4 2e d 91
:2 a0 6b :2 a0 6b a0 63 37 :2 a0
7e :2 a0 a5 b b4 2e d b7
a0 47 a0 7e 51 b4 2e :2 a0
7e :2 a0 51 a5 b b4 2e 51
7e a5 2e 7e :3 a0 7e :2 a0 a5
b b4 2e 51 7e a5 2e 51
:2 a0 51 :3 a0 a5 b 7e 51 b4
2e a5 b a5 b :5 a0 a5 b
7e 51 b4 2e a5 b 7e 51
b4 2e a5 b a5 b a0 b4
2e ac :3 a0 b2 ee ac a0 de
a0 de a0 de ac e5 d0 b2
e9 b7 :2 a0 7e :2 a0 51 a5 b
b4 2e 51 7e a5 2e 7e :3 a0
7e :2 a0 a5 b b4 2e 51 7e
a5 2e 51 :2 a0 51 :3 a0 a5 b
7e 51 b4 2e a5 b a5 b
:5 a0 a5 b 7e 51 b4 2e a5
b 7e 51 b4 2e a5 b a5
b a0 b4 2e ac :3 a0 b2 ee
a0 7e 6e b4 2e ac a0 de
a0 de a0 de ac e5 d0 b2
e9 b7 :2 19 3c 91 :2 a0 6b :2 a0
6b a0 63 37 :2 a0 7e :2 a0 a5
b b4 2e d b7 a0 47 :2 a0
7e b4 2e a0 82 :3 a0 :2 51 a5
b d :3 a0 51 a5 b d :2 a0
7e :2 a0 a5 b b4 2e d b7
a0 47 :3 a0 a5 b d :5 a0 a5
b d a0 7e 51 b4 2e :2 a0
d2 9f 51 a5 b ac :2 a0 b2
ee a0 7e 6e b4 2e :2 a0 7e
b4 2e a 10 ac e5 d0 b2
e9 b7 :2 a0 d2 9f 51 a5 b
ac :2 a0 b2 ee a0 7e 6e b4
2e :2 a0 7e b4 2e a 10 ac
e5 d0 b2 e9 b7 :2 19 3c a0
7e 51 b4 2e :4 a0 7e 51 b4
2e a5 b 7e :2 a0 51 a0 a5
b b4 2e d :5 a0 a5 b d
a0 7e 51 b4 2e a0 7e 51
b4 2e a0 7e a0 b4 2e a0
7e b4 2e a0 cd e9 a0 57
a0 b4 e9 a0 6e 65 b7 19
3c b7 19 3c :3 a0 6e a0 5
d7 b2 5 e9 a0 57 a0 b4
e9 b7 19 3c :2 a0 65 b7 a0
7e 51 b4 2e a0 cd e9 a0
57 a0 b4 e9 b7 19 3c a0
6e 65 b7 :2 19 3c b7 a0 53
a0 6e 65 b7 a6 9 a4 a0
b1 11 68 4f 17 b5 
874
2
0 3 7 8 24 1d 21 1c
2c 19 31 35 39 3d 41 45
49 4a 66 51 55 58 59 61
62 50 87 71 4d 75 76 7e
83 70 a4 92 6d 96 97 9f
a0 91 c1 af 8e b3 b4 bc
bd ae de cc ab d0 d1 d9
da cb fb e9 c8 ed ee f6
f7 e8 117 106 e5 10a 10b 113
105 133 122 102 126 127 12f 121
14f 13e 11e 142 143 14b 13d 16b
15a 13a 15e 15f 167 159 172 192
17a 156 17e 17f 187 18b 18c 18d
176 1b7 19d 1a1 1a9 1ad 1ae 1b3
19c 1d6 1c2 199 1c6 1c7 1cf 1d2
1c1 1f5 1e1 1be 1e5 1e6 1ee 1f1
1e0 214 200 1dd 204 205 20d 210
1ff 22f 21f 223 22b 1fc 246 236
23a 242 21e 265 251 21b 255 256
25e 261 250 284 270 24d 274 275
27d 280 26f 28b 28f 2a8 2a4 26c
2b0 2a3 2b5 2b9 2ec 2c1 2c5 2c9
2a0 2cd 2ce 2d6 2da 2de 2e1 2e5
2e6 2e8 2c0 308 2f7 2bd 2fb 2fc
304 2f6 30f 2f3 316 319 31d 321
324 328 32b 32f 333 335 339 33d
33f 340 345 349 34d 351 352 354
358 35a 35e 362 364 370 374 376
37a 393 38f 38e 39b 38b 3a0 3a4
3c8 3ac 3b0 3b4 3b8 3bb 3bc 3c4
3ab 3e4 3d3 3a8 3d7 3d8 3e0 3d2
400 3ef 3cf 3f3 3f4 3fc 3ee 41c
40b 3eb 40f 410 418 40a 423 427
42b 42f 433 437 43b 407 43f 442
443 445 449 44d 451 455 456 458
45c 460 464 468 46c 46d 46f 473
477 47a 47f 480 485 489 48d 491
495 496 498 49b 49e 49f 4a4 4a5
4a7 4ab 4ad 4b1 4b4 4b8 4bb 4bc
4c1 4c5 4c9 4cc 4d0 4d1 4d6 4d9
4dd 4e1 4e5 4ea 4eb 4ed 4ee 4f0
4f1 4f6 4fa 4fe 504 506 50a 50e
511 515 516 51b 51e 522 526 52a
52d 531 535 536 538 539 53e 543
544 546 547 549 54a 54f 553 555
559 55d 560 562 566 56d 571 575
579 57b 1 57f 583 584 588 58a
58b 590 594 598 59a 5a6 5aa 5ac
5b0 5b4 5b8 5bb 5be 5bf 5c1 5c5
5c8 5cc 5d0 5d4 5d8 5dc 5e0 5e3
5e7 5eb 5f0 5f1 5f3 5f4 5f6 5f9
5fc 5fd 602 605 608 609 60e 60f
613 617 61b 61f 620 627 62b 62e
633 634 639 63d 641 644 645 1
64a 64f 653 657 65b 65c 65e 663
664 666 669 66c 66d 672 676 67a
67e 67f 681 686 687 689 68c 68f
690 1 695 69a 1 69d 6a2 6a3
6a9 6ad 6ae 6b3 6b7 6ba 6bd 6be
6c3 6c7 6cc 6d0 6d2 6d6 6d9 6dd
6e1 6e5 6e8 6eb 6ec 6ee 6ef 6f3
6f7 6f8 6ff 1 703 708 70d 712
717 71b 71e 722 726 72b 72c 72e
731 734 735 1 73a 73f 740 746
74a 74b 750 754 757 75a 75b 760
764 769 76d 76f 773 776 77a 77d
780 784 787 789 78d 791 794 798
799 79e 7a2 7a4 7a8 7af 7b3 7b6
7b9 7bd 7c0 7c2 7c6 7ca 7cd 7d1
7d5 7d8 7db 7dc 7e1 7e2 7e4 7e5
7ea 7ee 7f0 7f4 7fb 7ff 802 805
806 80b 80f 813 816 817 81b 81f
823 825 826 82d 831 835 838 83b
840 841 846 847 84d 851 852 857
85b 85f 863 867 868 86a 86d 870
871 876 877 879 87d 881 885 889
88d 890 893 894 899 89a 89c 89f
8a3 8a7 8aa 8ae 8af 8b1 8b2 8b7
8bb 8bf 8c3 8c7 8cb 8cf 8d0 8d2
8d6 8da 8dd 8e1 8e5 8e6 8e8 8eb
8ee 8f2 8f3 8f8 8fb 8fd 901 905
909 90c 90f 913 916 919 91a 91f
922 925 928 929 92e 92f 934 937
938 93a 93e 942 946 949 94d 950
953 957 95b 960 961 963 964 969
96a 96c 96d 972 976 978 97c 983
987 98c 991 995 999 99d 9a0 9a4
9a8 9ac 9af 9b0 9b2 9b3 9b5 9b8
9bb 9bc 9c1 9c2 9c4 9c8 9cc 9d0
9d4 9d9 9dd 9e1 9e9 9ea 9ee 9f3
9f7 9fb 9ff a03 a07 a0b a0e a0f
a11 a14 a17 a18 a1a a1d a20 a21
a26 a2a a2e a32 a35 a36 a38 a3b
a3e a3f a41 a44 a48 a4c a50 a53
a54 a56 a59 a5c a5d a5f a60 a65
a68 a6b a6c a71 a72 a74 a78 a7c
a80 a84 a89 a8d a91 a99 a9a a9e
aa3 aa7 aab aaf ab3 ab7 abb abe
abf ac1 ac4 ac7 ac8 aca acd ad0
ad1 ad6 ada ade ae2 ae5 ae6 ae8
aeb aee aef af1 af4 af8 afc b00
b03 b04 b06 b09 b0c b0d b0f b10
b15 b18 b1b b1c b21 b22 b24 b28
b2c b30 b34 b39 b3d b41 b49 b4a
b4e b53 b57 b5b b5f b63 b67 b6b
b6e b6f b71 b74 b77 b78 b7a b7d
b80 b81 b86 b8a b8e b92 b95 b96
b98 b9b b9e b9f ba1 ba4 ba8 bac
bb0 bb3 bb4 bb6 bb9 bbc bbd bbf
bc0 bc5 bc8 bcb bcc bd1 bd2 bd4
bd8 bdc be0 be4 be9 bed bf1 bf9
bfa bfe c03 c07 c0b c0f c13 c17
c1b c1e c1f c21 c24 c27 c28 c2a
c2d c30 c31 c36 c3a c3e c42 c45
c46 c48 c4b c4e c4f c51 c54 c58
c5c c60 c63 c64 c66 c69 c6c c6d
c6f c70 c75 c78 c7b c7c c81 c82
c84 c88 c8c c90 c94 c99 c9d ca1
ca9 caa cae cb3 cb7 cbb cbf cc3
cc7 ccb cce ccf cd1 cd4 cd7 cd8
cda cdd ce0 ce1 ce6 cea cee cf2
cf5 cf6 cf8 cfb cfe cff d01 d04
d08 d0c d10 d13 d14 d16 d19 d1c
d1d d1f d20 d25 d28 d2b d2c d31
d32 d34 d38 d3c d40 d44 d49 d4d
d51 d59 d5a d5e d63 d67 d6b d6f
d73 d77 d7b d7e d7f d81 d84 d87
d88 d8a d8d d90 d91 d96 d9a d9e
da2 da5 da6 da8 dab dae daf db1
db4 db8 dbc dc0 dc3 dc4 dc6 dc9
dcc dcd dcf dd0 dd5 dd8 ddb ddc
de1 de2 de4 de8 dec df0 df4 df9
dfd e01 e09 e0a e0e e13 e17 e1b
e1f e23 e27 e2b e2e e2f e31 e34
e37 e38 e3a e3d e40 e41 e46 e4a
e4e e52 e55 e56 e58 e5b e5e e5f
e61 e64 e68 e6c e70 e73 e74 e76
e79 e7c e7d e7f e80 e85 e88 e8b
e8c e91 e92 e94 e98 e9c ea0 ea4
ea9 ead eb1 eb9 eba ebe ec3 ec7
ecb ecf ed3 ed7 edb ede edf ee1
ee4 ee7 ee8 eea eed ef0 ef1 ef6
efa efe f02 f05 f06 f08 f0b f0e
f0f f11 f14 f18 f1c f20 f23 f24
f26 f29 f2c f2d f2f f30 f35 f38
f3b f3c f41 f42 f44 f48 f4c f50
f54 f59 f5d f61 f69 f6a f6e f73
f77 f7b f7f f83 f87 f8b f8e f8f
f91 f94 f97 f98 f9a f9d fa0 fa1
fa6 faa fae fb2 fb5 fb6 fb8 fbb
fbe fbf fc1 fc4 fc8 fcc fd0 fd3
fd4 fd6 fd9 fdc fdd fdf fe0 fe5
fe8 feb fec ff1 ff2 ff4 ff8 ffc
1000 1004 1009 100d 1011 1019 101a 101e
1023 1027 102b 102f 1033 1037 103b 103e
103f 1041 1044 1047 1048 104a 104d 1050
1051 1056 105a 105e 1062 1065 1066 1068
106b 106e 106f 1071 1074 1078 107c 1080
1083 1084 1086 1089 108c 108d 108f 1090
1095 1098 109b 109c 10a1 10a2 10a4 10a8
10ac 10b0 10b4 10b9 10bd 10c1 10c9 10ca
10ce 10d3 10d7 10db 10df 10e3 10e7 10eb
10ee 10ef 10f1 10f4 10f7 10f8 10fa 10fd
1100 1101 1106 110a 110e 1112 1115 1116
1118 111b 111e 111f 1121 1124 1128 112c
1130 1133 1134 1136 1139 113c 113d 113f
1140 1145 1148 114b 114c 1151 1152 1154
1158 115c 1160 1164 1169 116d 1171 1179
117a 117e 1183 1187 118b 118e 1191 1195
1199 119c 11a0 11a1 11a6 11a7 11ab 11af
11b3 11b7 11b9 11ba 11c1 11c5 11c9 1
11cc 11d1 11d6 11db 11e0 11e5 11ea 11ef
11f4 11f9 11fe 1203 1208 120c 120f 1210
1214 1218 121c 121f 1224 1227 122c 122f
1234 1237 123c 123f 1244 1247 124c 124f
1254 1257 125c 125f 1264 1267 126c 126f
1274 1277 127c 127f 1280 1282 1284 1285
128b 128f 1290 1295 1297 129b 129f 12a2
12a5 12a9 12ad 12b0 12b4 12b5 12ba 12bb
12bf 12c3 12c7 12cb 12cd 12ce 12d5 12d9
12dd 1 12e0 12e5 12ea 12ef 12f4 12f9
12fe 1303 1308 130d 1312 1317 131c 1320
1323 1324 1328 132c 1330 1333 1338 133b
1340 1343 1348 134b 1350 1353 1358 135b
1360 1363 1368 136b 1370 1373 1378 137b
1380 1383 1388 138b 1390 1393 1394 1396
1398 1399 139f 13a3 13a4 13a9 13ab 13af
13b3 13b6 13ba 13be 13c2 13c5 13c9 13cd
13d0 13d4 13d7 13d9 13dd 13e1 13e4 13e8
13ec 13ed 13ef 13f0 13f5 13f9 13fd 1401
1405 1406 1408 140b 140e 140f 1411 1414
1419 141a 141f 1423 1427 142b 142f 1433
1434 1436 1439 143a 143c 143d 143f 1443
1447 1449 144d 1451 1455 1456 1458 145b
145e 145f 1461 1464 1469 146a 146f 1473
1477 147b 147f 1483 1484 1486 1489 148a
148c 148d 148f 1493 1497 1499 149d 14a1
14a5 14a9 14aa 14ac 14af 14b2 14b3 14b5
14b8 14bd 14be 14c3 14c7 14cb 14cf 14d3
14d7 14d8 14da 14dd 14de 14e0 14e5 14e6
14e8 14ec 14ee 14f2 14f6 14f9 14fb 14ff
1506 150a 150d 1510 1511 1516 151a 151e
1521 1525 1526 152a 152e 1532 1536 1538
1539 1540 1544 1548 154b 154e 1553 1554
1559 155a 155e 1560 1561 1567 156b 156c
1571 1573 1577 157b 157e 1582 1583 1587
158b 158f 1593 1595 1596 159d 15a1 15a5
15a8 15ab 15b0 15b1 15b6 15b7 15bb 15bd
15be 15c4 15c8 15c9 15ce 15d0 15d4 15d8
15db 15df 15e3 15e6 15eb 15ec 15f1 15f5
15f9 15fd 1601 1604 1608 160c 160f 1613
1616 1618 161c 1620 1623 1627 162b 162c
162e 162f 1634 1638 163a 163e 1645 1649
164c 164f 1650 1655 1659 165d 1660 1664
1668 166b 166c 166e 166f 1674 1677 167a
167b 1680 1683 1687 168b 168f 1692 1696
169a 169b 169d 169e 16a3 16a6 16a9 16aa
16af 16b2 16b6 16ba 16bd 16c1 16c5 16c9
16ca 16cc 16cf 16d2 16d3 16d8 16d9 16db
16dc 16de 16e2 16e6 16ea 16ee 16f2 16f3
16f5 16f8 16fb 16fc 1701 1702 1704 1707
170a 170b 1710 1711 1713 1714 1716 171a
171b 1720 1721 1725 1729 172d 172e 1735
1736 173a 173c 1740 1742 1746 1748 1749
174f 1753 1754 1759 175b 175f 1763 1766
176a 176e 1771 1772 1774 1775 177a 177d
1780 1781 1786 1789 178d 1791 1795 1798
179c 17a0 17a1 17a3 17a4 17a9 17ac 17af
17b0 17b5 17b8 17bc 17c0 17c3 17c7 17cb
17cf 17d0 17d2 17d5 17d8 17d9 17de 17df
17e1 17e2 17e4 17e8 17ec 17f0 17f4 17f8
17f9 17fb 17fe 1801 1802 1807 1808 180a
180d 1810 1811 1816 1817 1819 181a 181c
1820 1821 1826 1827 182b 182f 1833 1834
183b 183f 1842 1847 1848 184d 184e 1852
1854 1858 185a 185e 1860 1861 1867 186b
186c 1871 1873 1877 187b 187e 1882 1886
188a 188d 1891 1895 1898 189c 189f 18a1
18a5 18a9 18ac 18b0 18b4 18b5 18b7 18b8
18bd 18c1 18c3 18c7 18ce 18d2 18d6 18d9
18da 18df 18e3 18e5 18e9 18ed 18f1 18f4
18f7 18f8 18fa 18fe 1902 1906 190a 190d
190e 1910 1914 1918 191c 191f 1923 1927
1928 192a 192b 1930 1934 1936 193a 1941
1945 1949 194d 194e 1950 1954 1958 195c
1960 1964 1968 1969 196b 196f 1973 1976
1979 197a 197f 1983 1987 198b 198e 1991
1992 1994 1995 1999 199d 199e 19a5 19a9
19ac 19b1 19b2 19b7 19bb 19bf 19c2 19c3
1 19c8 19cd 19ce 19d4 19d8 19d9 19de
19e0 19e4 19e8 19ec 19ef 19f2 19f3 19f5
19f6 19fa 19fe 19ff 1a06 1a0a 1a0d 1a12
1a13 1a18 1a1c 1a20 1a23 1a24 1 1a29
1a2e 1a2f 1a35 1a39 1a3a 1a3f 1a41 1a45
1a49 1a4c 1a50 1a53 1a56 1a57 1a5c 1a60
1a64 1a68 1a6c 1a6f 1a72 1a73 1a78 1a79
1a7b 1a7e 1a82 1a86 1a89 1a8d 1a8e 1a90
1a91 1a96 1a9a 1a9e 1aa2 1aa6 1aaa 1aae
1aaf 1ab1 1ab5 1ab9 1abc 1abf 1ac0 1ac5
1ac9 1acc 1acf 1ad0 1ad5 1ad9 1adc 1ae0
1ae1 1ae6 1aea 1aed 1aee 1af3 1af7 1afc
1b01 1b05 1b0a 1b0e 1b0f 1b14 1b18 1b1d
1b21 1b23 1b27 1b2a 1b2c 1b30 1b33 1b37
1b3b 1b3f 1b44 1b48 1b4c 1b54 1b55 1b59
1b5e 1b62 1b67 1b6b 1b6c 1b71 1b73 1b77
1b7a 1b7e 1b82 1b86 1b88 1b8c 1b8f 1b92
1b93 1b98 1b9c 1ba1 1ba6 1baa 1baf 1bb3
1bb4 1bb9 1bbb 1bbf 1bc2 1bc6 1bcb 1bcf
1bd1 1bd5 1bd9 1bdc 1bde 1 1be2 1be6
1beb 1bef 1bf1 1bf2 1bf7 1bfb 1bff 1c01
1c0d 1c11 1c13 1c1c 
874
2
0 :2 1 a 16 26 30 :2 16 15
33 3a 3 :2 1 a :3 3 d 16
15 d 1d d :2 3 d 16 15
d 1d d :2 3 d 16 15 d
20 d :2 3 d 16 15 d 1e
d :2 3 d 16 15 d 20 d
:2 3 d 16 15 d 20 d :2 3
e 17 16 :2 e :2 3 e 17 16
:2 e :2 3 e 17 16 :2 e :2 3 e
15 14 :2 e :2 3 8 1e 27 26
1e :4 15 :2 3 :2 a :3 17 a :2 3 10
17 16 10 1e 10 :2 3 10 17
16 10 1d 10 :2 3 10 17 16
10 1d 10 :2 3 :3 10 :2 3 :3 10 :2 3
10 17 16 10 1e 10 :2 3 10
17 16 10 1e 10 :2 3 c 14
1d :2 14 13 27 2e 5 :2 3 10
14 13 10 1c :2 24 30 :2 1c 10
:2 5 10 14 13 :2 10 :5 5 :2 9 :2 22
26 2f 26 3b 47 3b :3 5 c
15 :2 c 5 :2 3 7 :5 3 c 14
20 :2 14 13 2a 31 5 :2 3 d
16 15 :2 d :2 5 d 16 15 :2 d
:2 5 d 12 11 :2 d :2 5 d 14
13 :2 d :2 5 10 :2 5 7 12 19
22 25 :2 12 :2 7 12 19 :2 12 :2 7
12 1a 23 :2 12 7 a 12 14
:2 12 9 14 18 1e :2 18 27 29
:2 18 :2 14 9 18 :2 7 :4 a 9 12
18 1b :2 12 23 26 2b 33 3c
:2 2b :2 26 :2 12 :3 9 1a 9 12 18
1b :2 12 23 26 2b 33 3b 3d
44 :2 3d :2 33 4e :2 2b :2 26 :2 12 9
:4 7 5 9 3 5 c 5 3
:2 a 7 e 7 11 :2 5 3 7
:4 3 a :3 e 18 :2 a :2 1c 20 1c
2d 31 3b :2 43 47 43 54 :2 3b
:2 31 62 :3 2d 66 68 :2 2d a 8
12 20 8 3 8 9 10 12
:2 10 1f 2a :3 28 :2 9 34 3a 40
:2 3a 4a :2 34 51 53 :2 51 58 5e
64 :2 5e 6e :2 58 74 76 :2 74 :2 34
33 :2 9 :5 3 6 f 11 :2 f 5
c 5 13 :2 3 a :3 e 18 :3 a
:2 8 3 8 :2 9 12 21 2f 3d
:2 9 4f 55 5b :2 4f 69 6b :2 69
:2 9 :5 3 6 f 11 :2 f 5 c
5 13 :2 3 7 12 17 19 12
3 5 10 18 1b :2 10 5 19
7 3 7 12 17 1a 12 3
5 10 18 1b 1f 27 29 :2 1f
:2 1b :2 10 5 1a 7 3 6 13
16 :2 13 c :2 e c 1a 2a 34
2a 25 2a 3c :2 3e 45 47 :2 45
25 :5 5 13 18 1f :2 18 2b 2d
:2 18 :2 13 :2 5 13 1a 26 31 33
:2 26 :2 13 36 39 40 4c 4f :2 39
:2 13 :2 5 13 1d 29 32 :2 13 5
9 14 19 20 :2 19 2c 2e 30
:2 19 14 5 7 15 1c 28 2a
2d 35 37 :2 2d 2c 3a 3c :2 2c
:2 28 3f :2 15 :2 7 15 20 23 27
2d 2f 39 45 :2 2f :2 27 :2 23 :2 15
7 30 9 5 c :3 5 13 1a
26 29 2f 3b 3f :2 3b :2 29 44
46 :2 29 :2 13 5 11 1d 25 35
41 34 :5 5 13 1a 26 2c 38
3c :2 38 41 44 :2 26 47 49 :2 26
1a 20 2c 30 :2 2c 35 38 :2 1a
3b 3d 43 4f 53 :2 4f 58 5b
:2 3d :2 1a 5e 60 :2 1a :2 13 5 11
1d 25 35 41 34 :5 5 13 1a
26 2c 38 3c :2 38 41 44 :2 26
47 49 :2 26 1a 20 2c 30 :2 2c
35 38 :2 1a 3b 3d 43 4f 53
:2 4f 58 5b :2 3d :2 1a 5e 60 :2 1a
:2 13 5 11 1d 25 35 41 34
:5 5 13 1a 26 2c 38 3c :2 38
41 44 :2 26 47 49 :2 26 1a 20
2c 30 :2 2c 35 38 :2 1a 3b 3d
43 4f 53 :2 4f 58 5b :2 3d :2 1a
5e 60 :2 1a :2 13 5 11 1d 25
35 41 34 :5 5 13 1a 26 2c
38 3c :2 38 41 44 :2 26 47 49
:2 26 1a 20 2c 30 :2 2c 35 38
:2 1a 3b 3d 43 4f 53 :2 4f 58
5b :2 3d :2 1a 5e 60 :2 1a :2 13 5
11 1d 25 35 41 34 :5 5 13
1a 26 2c 38 3c :2 38 41 44
:2 26 47 49 :2 26 1a 20 2c 30
:2 2c 35 38 :2 1a 3b 3d 43 4f
53 :2 4f 58 5b :2 3d :2 1a 5e 60
:2 1a :2 13 5 11 1d 25 35 41
34 :5 5 13 1a 26 2c 38 3c
:2 38 41 44 :2 26 47 49 :2 26 1a
20 2c 30 :2 2c 35 38 :2 1a 3b
3d 43 4f 53 :2 4f 58 5b :2 3d
:2 1a 5e 60 :2 1a :2 13 5 11 1d
25 35 41 34 :5 5 13 1a 26
2c 38 3c :2 38 41 44 :2 26 47
49 :2 26 1a 20 2c 30 :2 2c 35
38 :2 1a 3b 3d 43 4f 53 :2 4f
58 5b :2 3d :2 1a 5e 60 :2 1a :2 13
5 11 1d 25 35 43 34 :5 5
13 1a 26 2c 38 3c :2 38 41
44 :2 26 47 49 :2 26 1a 20 2c
30 :2 2c 35 38 :2 1a 3b 3d 43
4f 53 :2 4f 58 5b :2 3d :2 1a 5e
60 :2 1a :2 13 5 11 1d 25 35
43 34 :5 5 13 1a 26 2c 38
3c :2 38 41 44 :2 26 47 49 :2 26
1a 20 2c 30 :2 2c 35 38 :2 1a
3c 3e 44 50 54 :2 50 59 5c
:2 3e :2 1a 5f 61 :2 1a :2 13 5 11
1d 25 35 43 34 :5 5 13 1a
26 2c 38 3c :2 38 41 44 :2 26
48 4a :2 26 1a 20 2c 30 :2 2c
35 38 :2 1a 3c 3e 44 50 54
:2 50 59 5c :2 3e :2 1a 60 62 :2 1a
:2 13 5 11 1d 25 35 42 34
:5 5 13 1a 26 2c 38 3c :2 38
41 44 :2 26 48 4a :2 26 1a 20
2c 30 :2 2c 35 38 :2 1a 3c 3e
44 50 54 :2 50 59 5c :2 3e :2 1a
60 62 :2 1a :2 13 5 11 1d 25
35 43 34 :4 5 c :2 e 15 18
:2 1a 21 :3 c 26 :2 a 15 a 5
a b :2 d b 18 24 30 3c
48 54 60 6c c 1a 28 35
:2 b 5 e 15 :2 17 1f 2b 2e
3a 3d 49 4c 58 5b 67 6a
76 16 22 25 33 36 44 47
55 59 66 6a 78 :3 e :5 5 18
c :2 e 15 18 :2 1a 21 :3 c 26
:2 a 14 a 5 a b :2 d b
18 24 30 3c 48 54 60 6c
c 1a 28 35 :2 b 5 e 15
:2 17 1f 2b 2e 3a 3d 49 4c
58 5b 67 6a 76 16 22 25
33 36 44 47 55 59 66 6a
78 :3 e :5 5 :4 3 7 12 :2 19 22
:2 29 2e 12 3 5 10 18 1b
22 :2 1b :2 10 5 8 f 16 :2 f
20 23 :2 8 26 28 :2 26 7 17
21 28 2f :2 28 39 :2 21 :2 17 7
5 33 b 12 19 :2 12 23 26
:2 b 29 2b :2 29 7 17 21 28
2f :2 28 39 :2 21 :2 17 7 5 36
33 b 12 19 :2 12 23 26 :2 b
29 2b :2 29 7 17 1f 26 2d
:2 26 37 :2 1f 3b :2 17 7 36 33
:2 5 2e 7 3 6 13 16 :2 13
c :2 e 15 c 1a 27 33 3d
33 2e 33 45 :2 47 4e 50 :2 4e
2e :2 64 5b :4 5 18 c :2 e 15
c 1a 27 33 3d 33 2e 33
45 :2 47 4e 50 :2 4e 2e :2 64 5b
:4 5 :5 3 e 16 19 :2 e 3 7
12 :2 19 22 :2 29 2e 12 3 5
10 18 1b 22 :2 1b :2 10 5 2e
7 3 6 13 16 :2 13 c 10
17 19 1d 25 :2 19 :2 10 29 :3 c
2c d 14 18 1f 21 28 :2 21
:2 18 31 :3 14 35 38 3f 47 4a
4f 56 :2 4f 5e 60 :2 4f :2 4a :2 38
14 1b 23 28 2f :2 28 37 39
:2 28 :2 23 3c 3e :2 23 :2 14 :2 d 42
:3 c 47 :2 a 5 a 5 :2 e :2 16
:2 1e :5 5 18 c 10 17 19 1d
25 :2 19 :2 10 29 :3 c 2c d 14
18 1f 21 28 :2 21 :2 18 31 :3 14
35 38 3f 47 4a 4f 56 :2 4f
5e 60 :2 4f :2 4a :2 38 14 1b 23
28 2f :2 28 37 39 :2 28 :2 23 3c
3e :2 23 :2 14 :2 d 42 :3 c 47 :2 a
5 a b 12 14 :2 12 5 :2 e
:2 16 :2 1e :5 5 :4 3 7 12 :2 19 22
:2 29 2e 12 3 5 10 18 1b
22 :2 1b :2 10 5 2e 7 :2 3 :4 9
1d 3 5 12 1a 23 26 :2 12
:2 5 12 1a 23 :2 12 :2 5 12 1c
1f 27 :2 1f :2 12 5 1d 7 :2 3
e 16 :2 e :2 3 e 18 21 2a
:2 e 3 6 13 16 :2 13 c :3 10
1a :3 c 22 32 2d 32 42 49
4b :2 49 5a 63 :3 61 :2 42 2d :4 5
18 c :3 10 1a :3 c 22 32 2d
32 42 49 4b :2 49 5a 63 :3 61
:2 42 2d :4 5 :4 3 6 11 13 :2 11
5 10 17 20 2d 2f :2 20 :2 10
32 35 3c 45 48 :2 35 :2 10 :2 5
10 1a 23 2c :2 10 5 8 15
18 :2 15 a 17 1a :2 17 c 19
1b :2 c 2a :3 28 12 :8 b 12 b
37 :2 9 1c :2 7 13 1f 27 37
43 36 :9 7 1a :3 5 c 5 15
8 15 18 :2 15 e :7 7 1a :3 5
c 5 :4 3 1 :2 8 5 c 5
f :2 3 1 5 :6 1 
874
2
0 :b 1 5 :2 1 :3 5 :8 7 :8 8 :8 9
:8 a :8 b :8 c :7 e :7 f :7 10 :7 11 :b 13
:8 14 :8 16 :8 17 :8 18 :5 19 :5 1a :8 1b :8 1c
:9 20 21 :2 20 :c 21 :7 22 :3 23 :d 25 :6 26
:2 24 27 :3 20 27 :9 2b 2c :2 2b :6 2c
:7 2d :7 2e :7 2f :3 31 32 :8 33 :6 34 :7 35
:5 36 :d 37 :3 36 :4 39 :12 3a :2 3b 39 :19 3d
:2 3c :2 39 32 3f 30 :3 40 30 :2 42
:3 43 :3 42 41 44 :3 2b 44 :20 4a :3 4b
:3 4c :29 4d 4c :4 4a :5 4e :3 4f :3 4e :8 53
54 :3 55 :13 56 55 :4 53 :5 57 :3 58 :3 57
:6 5c :7 5d 5c 5e 5c :6 5f :e 60 5f
61 5f :5 63 :16 65 :d 66 :14 67 :8 68 :d 69
:15 6a :12 6b 69 6c 69 :3 6e :13 6f :a 70
:11 71 :1b 72 :3 71 :a 73 :11 74 :1b 75 :3 74 :a 76
:11 77 :1b 78 :3 77 :a 79 :11 7a :1b 7b :3 7a :a 7c
:11 7d :1b 7e :3 7d :a 7f :11 80 :1b 81 :3 80 :a 82
:11 83 :1b 84 :3 83 :a 85 :11 86 :1b 87 :3 86 :a 88
:11 89 :1b 8a :3 89 :a 8b :11 8c :1b 8d :3 8c :a 8e
:11 8f :1b 90 :3 8f :a 91 :c 93 94 :5 95 :c 96
:4 97 :2 96 95 :10 98 :c 99 :4 98 :4 93 63
:c 9b 9c :5 9d :c 9e :4 9f :2 9e 9d :10 a0
:c a1 :4 a0 :4 9b :2 9a :2 63 :a a3 :a a4 :d a5
:d a6 a7 a5 :d a7 :d a8 a9 a7 a5
:d a9 :e aa a9 :3 a5 a3 ac a3 :5 af
:1b b0 af :1b b2 :2 b1 :2 af :7 b4 :a b5 :a b6
b5 b7 b5 :5 ba :f bb :1f bc :13 bd :2 bc
bd :3 bb bd be :4 bf :7 c0 :4 bb ba
:f c2 :1f c3 :13 c4 :2 c3 c4 :3 c2 c4 c5
:3 c6 :5 c7 c6 :7 c8 :4 c2 :2 c1 :2 ba :a ca
:a cb ca cc ca :7 cf :8 d0 :7 d1 :a d2
cf d3 cf :6 d5 :8 d7 :5 da :1d db da
:1d dd :2 dc :2 da :5 df :14 e0 :8 e1 :5 e2 :5 e3
:9 e5 :3 e6 :5 e7 :3 e8 :3 e5 :3 e3 :a eb :5 ec
:3 e2 :3 ee df :5 f0 :3 f1 :5 f2 :3 f0 :3 f4
:2 ef :2 df 48 :2 f8 :3 f9 :3 f8 f7 fa
:3 1 fa :2 1 
1c1e
4
:3 0 1 :4 0 2
:a 0 870 1 :4 0
5 :2 0 3 4
:3 0 5 :2 0 3
:7 0 7 5 6
:2 0 6 :3 0 7
:3 0 8 :3 0 9
b 0 870 3
d :2 0 9 :4 0
f 10 86e b
:2 0 9 7 :3 0
b :2 0 7 13
15 :7 0 19 16
17 86e a :6 0
f :2 0 d 7
:3 0 b 1b 1d
:6 0 d :4 0 21
1e 1f 86e c
:6 0 11 :2 0 11
7 :3 0 f 23
25 :7 0 29 26
27 86e e :6 0
f :2 0 15 7
:3 0 13 2b 2d
:7 0 31 2e 2f
86e 10 :6 0 f
:2 0 19 7 :3 0
17 33 35 :7 0
39 36 37 86e
12 :6 0 f :2 0
1d 7 :3 0 1b
3b 3d :7 0 41
3e 3f 86e 13
:6 0 16 :2 0 21
7 :3 0 1f 43
45 :6 0 48 46
0 86e 14 :6 0
f :2 0 25 7
:3 0 23 4a 4c
:6 0 4f 4d 0
86e 15 :6 0 19
:2 0 29 7 :3 0
27 51 53 :6 0
56 54 0 86e
17 :6 0 1c :2 0
2d 4 :3 0 2b
58 5a :6 0 5d
5b 0 86e 18
:6 0 1a :3 0 5f
0 67 86e 7
:3 0 2f 60 62
:6 0 1d :3 0 64
31 66 63 :2 0
1 1b 67 5f
:4 0 19 :2 0 33
1b :3 0 6a :7 0
1b :4 0 6c 6d
:3 0 70 6b 6e
86e 1e :6 0 21
:2 0 37 4 :3 0
35 72 74 :6 0
5 :2 0 78 75
76 86e 1f :6 0
23 :2 0 3b 4
:3 0 39 7a 7c
:6 0 21 :2 0 80
7d 7e 86e 20
:6 0 41 21b 0
3f 4 :3 0 3d
82 84 :6 0 5
:2 0 88 85 86
86e 22 :6 0 19
:2 0 43 25 :3 0
8a :7 0 8d 8b
0 86e 24 :6 0
25 :3 0 8f :7 0
92 90 0 86e
26 :6 0 19 :2 0
47 4 :3 0 45
94 96 :6 0 5
:2 0 9a 97 98
86e 27 :6 0 4d
2a0 0 4b 4
:3 0 49 9c 9e
:6 0 5 :2 0 a2
9f a0 86e 28
:6 0 1 :3 0 29
:a 0 dd 2 :4 0
11 :2 0 4f 7
:3 0 2a :7 0 a7
a6 :3 0 6 :3 0
7 :3 0 30 :2 0
55 a9 ab 0
dd a4 ad :2 0
2c :3 0 51 af
b1 :6 0 2d :3 0
2e :3 0 b3 b4
0 2a :3 0 53
b5 b7 ba b2
b8 db 2b :6 0
5b :2 0 59 2c
:3 0 57 bc be
:6 0 c1 bf 0
db 2f :6 0 31
:6 0 c3 0 db
32 :3 0 33 :3 0
c5 c6 0 34
:3 0 c7 c8 0
35 :3 0 2b :3 0
ca cb 36 :3 0
2f :3 0 cd ce
5d c9 d0 :2 0
d8 6 :3 0 37
:3 0 2f :3 0 60
d3 d5 d6 :2 0
d8 69 dc :3 0
dc 29 :3 0 65
dc db d8 d9
:6 0 dd 1 0
a4 ad dc 86e
:2 0 1 :3 0 38
:a 0 17d 3 :4 0
6d :2 0 62 7
:3 0 2a :7 0 e3
e2 :3 0 6 :3 0
7 :3 0 f :2 0
71 e5 e7 0
17d e0 e9 :2 0
7 :3 0 f :2 0
6f eb ed :6 0
f0 ee 0 17b
39 :6 0 21 :2 0
75 7 :3 0 73
f2 f4 :6 0 f7
f5 0 17b 3a
:6 0 19 :2 0 79
3c :3 0 77 f9
fb :6 0 fe fc
0 17b 3b :6 0
21 :2 0 7d 4
:3 0 7b 100 102
:6 0 105 103 0
17b 3d :6 0 3a
:3 0 2a :3 0 106
107 0 170 3e
:3 0 3b :3 0 3f
:3 0 3a :3 0 21
:2 0 7f 10b 10f
10a 110 0 16a
3d :3 0 40 :3 0
3a :3 0 83 113
115 112 116 0
16a 3a :3 0 41
:3 0 3a :3 0 3b
:3 0 85 119 11c
118 11d 0 16a
3b :3 0 42 :2 0
43 :4 0 8a 120
122 :3 0 3b :3 0
44 :3 0 45 :3 0
3b :3 0 8d 126
128 46 :2 0 47
:2 0 8f 12a 12c
:3 0 92 125 12e
124 12f 0 131
94 132 123 131
0 133 96 0
16a 3a :3 0 48
:2 0 98 135 136
:3 0 39 :3 0 39
:3 0 49 :2 0 3b
:3 0 9a 13a 13c
:3 0 49 :2 0 4a
:3 0 4b :3 0 3d
:3 0 4c :4 0 9d
140 143 a0 13f
145 a2 13e 147
:3 0 138 148 0
14c 4d :8 0 14c
a5 168 39 :3 0
39 :3 0 49 :2 0
3b :3 0 a8 14f
151 :3 0 49 :2 0
4a :3 0 4b :3 0
3d :3 0 4e :2 0
40 :3 0 3a :3 0
ab 158 15a ad
157 15c :3 0 4c
:4 0 b0 155 15f
b3 154 161 b5
153 163 :3 0 14d
164 0 166 b8
167 0 166 0
169 137 14c 0
169 ba 0 16a
bd 16c 3e :4 0
16a :4 0 170 6
:3 0 39 :3 0 16e
:2 0 170 c3 17c
4f :3 0 6 :4 0
174 :2 0 176 d2
178 c9 177 176
:2 0 179 cb :2 0
17c 38 :3 0 cd
17c 17b 170 179
:6 0 17d 1 0
e0 e9 17c 86e
:2 0 50 :3 0 51
:3 0 182 :3 0 51
:2 0 5 :2 0 d5
17f 184 52 :3 0
52 :2 0 53 :3 0
187 0 188 0
54 :3 0 55 :3 0
4b :3 0 52 :3 0
52 :2 0 53 :3 0
18e 0 18f 0
56 :4 0 d8 18c
192 db 18b 194
57 :2 0 54 :2 0
dd 197 198 :3 0
46 :2 0 21 :2 0
e0 19a 19c :3 0
e3 1f :3 0 26
:3 0 27 :3 0 58
:3 0 e7 1a3 1cd
0 1ce :3 0 59
:3 0 5a :2 0 5b
:4 0 eb 1a6 1a8
:3 0 5c :3 0 5d
:3 0 5a :2 0 f0
1ac 1ad :3 0 1a9
1af 1ae :2 0 5e
:3 0 5f :3 0 60
:3 0 f3 1b2 1b4
61 :4 0 f5 1b1
1b7 62 :2 0 5
:2 0 fa 1b9 1bb
:3 0 5e :3 0 5f
:3 0 60 :3 0 fd
1be 1c0 63 :4 0
ff 1bd 1c3 62
:2 0 5 :2 0 104
1c5 1c7 :3 0 1bc
1c9 1c8 :2 0 1ca
:2 0 1b0 1cc 1cb
:3 0 1d0 1d1 :5 0
19e 1a4 0 107
0 1cf :2 0 863
1f :3 0 5a :2 0
5 :2 0 10d 1d4
1d6 :3 0 6 :3 0
64 :4 0 1d9 :2 0
1db 110 1dc 1d7
1db 0 1dd 112
0 863 50 :3 0
51 :3 0 1e1 :3 0
51 :2 0 5 :2 0
114 1de 1e3 117
1f :3 0 65 :3 0
119 1e8 1fc 0
1fd :3 0 66 :3 0
2 :4 0 67 :4 0
68 :4 0 69 :4 0
11b :3 0 1ea 1eb
1f0 5e :3 0 6a
:3 0 6b :4 0 120
1f2 1f5 62 :2 0
5 :2 0 125 1f7
1f9 :3 0 1f1 1fb
1fa :3 0 1ff 200
:5 0 1e5 1e9 0
128 0 1fe :2 0
863 1f :3 0 42
:2 0 16 :2 0 12c
203 205 :3 0 6
:3 0 6c :4 0 208
:2 0 20a 12f 20b
206 20a 0 20c
131 0 863 6d
:3 0 5 :2 0 6e
:2 0 3e :3 0 20e
20f 0 20d 211
a :3 0 a :3 0
49 :2 0 6d :3 0
133 215 217 :3 0
213 218 0 21a
136 21c 3e :3 0
212 21a :4 0 863
6d :3 0 5 :2 0
6f :2 0 3e :3 0
21e 21f 0 21d
221 a :3 0 a
:3 0 49 :2 0 44
:3 0 6d :3 0 46
:2 0 70 :2 0 138
228 22a :3 0 13b
226 22c 13d 225
22e :3 0 223 22f
0 231 140 233
3e :3 0 222 231
:4 0 863 3 :3 0
71 :2 0 21 :2 0
144 235 237 :3 0
72 :3 0 73 :2 0
1 239 23a 0
147 17 :3 0 74
:3 0 72 :3 0 23e
23f 149 241 249
0 24a :3 0 72
:3 0 75 :2 0 1
243 244 0 5a
:2 0 76 :4 0 14d
246 248 :4 0 24c
24d :5 0 23c 242
0 150 0 24b
:2 0 58b 18 :3 0
77 :3 0 40 :3 0
17 :3 0 152 251
253 78 :2 0 79
:2 0 154 255 257
:3 0 157 250 259
24f 25a 0 58b
17 :3 0 3f :3 0
17 :3 0 18 :3 0
46 :2 0 21 :2 0
159 260 262 :3 0
15c 25d 264 49
:2 0 3f :3 0 17
:3 0 21 :2 0 18
:3 0 15f 267 26b
163 266 26d :3 0
25c 26e 0 58b
17 :3 0 7a :3 0
17 :3 0 c :3 0
a :3 0 166 271
275 270 276 0
58b 6d :3 0 21
:2 0 40 :3 0 17
:3 0 16a 27a 27c
78 :2 0 16 :2 0
3e :3 0 16c 27e
281 :3 0 279 282
0 278 283 15
:3 0 3f :3 0 17
:3 0 21 :2 0 46
:2 0 6d :3 0 4e
:2 0 21 :2 0 16f
28b 28d :3 0 28e
:2 0 7b :2 0 16
:2 0 172 290 292
:3 0 175 289 294
:3 0 16 :2 0 178
286 297 285 298
0 2ac 14 :3 0
14 :3 0 49 :2 0
44 :3 0 7c :2 0
4e :2 0 55 :3 0
15 :3 0 7d :4 0
17c 2a0 2a3 17f
29f 2a5 :3 0 182
29d 2a7 184 29c
2a9 :3 0 29a 2aa
0 2ac 187 2ae
3e :3 0 284 2ac
:4 0 58b 6b :3 0
2af :2 0 2b1 :2 0
2b0 :2 0 58b 17
:3 0 3f :3 0 14
:3 0 21 :2 0 5e
:3 0 14 :3 0 44
:3 0 7e :2 0 18a
2b8 2ba 18c 2b6
2bc 4e :2 0 21
:2 0 18f 2be 2c0
:3 0 192 2b3 2c2
2b2 2c3 0 58b
6b :3 0 75 :2 0
1 73 :2 0 1
7f :4 0 17 :3 0
196 :3 0 2c5 2cc
2cd 2ce :4 0 199
19c :4 0 2cb :2 0
58b 17 :3 0 3f
:3 0 14 :3 0 5e
:3 0 14 :3 0 44
:3 0 7e :2 0 19e
2d4 2d6 21 :2 0
21 :2 0 1a0 2d2
2da 46 :2 0 21
:2 0 1a5 2dc 2de
:3 0 5e :3 0 14
:3 0 44 :3 0 7e
:2 0 1a8 2e2 2e4
21 :2 0 79 :2 0
1aa 2e0 2e8 4e
:2 0 5e :3 0 14
:3 0 44 :3 0 7e
:2 0 1af 2ed 2ef
21 :2 0 21 :2 0
1b1 2eb 2f3 1b6
2ea 2f5 :3 0 4e
:2 0 21 :2 0 1b9
2f7 2f9 :3 0 1bc
2d0 2fb 2cf 2fc
0 58b 6b :3 0
75 :2 0 1 73
:2 0 1 80 :4 0
17 :3 0 1c0 :3 0
2fe 305 306 307
:4 0 1c3 1c6 :4 0
304 :2 0 58b 17
:3 0 3f :3 0 14
:3 0 5e :3 0 14
:3 0 44 :3 0 7e
:2 0 1c8 30d 30f
21 :2 0 79 :2 0
1ca 30b 313 46
:2 0 21 :2 0 1cf
315 317 :3 0 5e
:3 0 14 :3 0 44
:3 0 7e :2 0 1d2
31b 31d 21 :2 0
81 :2 0 1d4 319
321 4e :2 0 5e
:3 0 14 :3 0 44
:3 0 7e :2 0 1d9
326 328 21 :2 0
79 :2 0 1db 324
32c 1e0 323 32e
:3 0 4e :2 0 21
:2 0 1e3 330 332
:3 0 1e6 309 334
308 335 0 58b
6b :3 0 75 :2 0
1 73 :2 0 1
82 :4 0 17 :3 0
1ea :3 0 337 33e
33f 340 :4 0 1ed
1f0 :4 0 33d :2 0
58b 17 :3 0 3f
:3 0 14 :3 0 5e
:3 0 14 :3 0 44
:3 0 7e :2 0 1f2
346 348 21 :2 0
81 :2 0 1f4 344
34c 46 :2 0 21
:2 0 1f9 34e 350
:3 0 5e :3 0 14
:3 0 44 :3 0 7e
:2 0 1fc 354 356
21 :2 0 16 :2 0
1fe 352 35a 4e
:2 0 5e :3 0 14
:3 0 44 :3 0 7e
:2 0 203 35f 361
21 :2 0 81 :2 0
205 35d 365 20a
35c 367 :3 0 4e
:2 0 21 :2 0 20d
369 36b :3 0 210
342 36d 341 36e
0 58b 6b :3 0
75 :2 0 1 73
:2 0 1 83 :4 0
17 :3 0 214 :3 0
370 377 378 379
:4 0 217 21a :4 0
376 :2 0 58b 17
:3 0 3f :3 0 14
:3 0 5e :3 0 14
:3 0 44 :3 0 7e
:2 0 21c 37f 381
21 :2 0 16 :2 0
21e 37d 385 46
:2 0 21 :2 0 223
387 389 :3 0 5e
:3 0 14 :3 0 44
:3 0 7e :2 0 226
38d 38f 21 :2 0
23 :2 0 228 38b
393 4e :2 0 5e
:3 0 14 :3 0 44
:3 0 7e :2 0 22d
398 39a 21 :2 0
16 :2 0 22f 396
39e 234 395 3a0
:3 0 4e :2 0 21
:2 0 237 3a2 3a4
:3 0 23a 37b 3a6
37a 3a7 0 58b
6b :3 0 75 :2 0
1 73 :2 0 1
84 :4 0 17 :3 0
23e :3 0 3a9 3b0
3b1 3b2 :4 0 241
244 :4 0 3af :2 0
58b 17 :3 0 3f
:3 0 14 :3 0 5e
:3 0 14 :3 0 44
:3 0 7e :2 0 246
3b8 3ba 21 :2 0
23 :2 0 248 3b6
3be 46 :2 0 21
:2 0 24d 3c0 3c2
:3 0 5e :3 0 14
:3 0 44 :3 0 7e
:2 0 250 3c6 3c8
21 :2 0 85 :2 0
252 3c4 3cc 4e
:2 0 5e :3 0 14
:3 0 44 :3 0 7e
:2 0 257 3d1 3d3
21 :2 0 23 :2 0
259 3cf 3d7 25e
3ce 3d9 :3 0 4e
:2 0 21 :2 0 261
3db 3dd :3 0 264
3b4 3df 3b3 3e0
0 58b 6b :3 0
75 :2 0 1 73
:2 0 1 86 :4 0
17 :3 0 268 :3 0
3e2 3e9 3ea 3eb
:4 0 26b 26e :4 0
3e8 :2 0 58b 17
:3 0 3f :3 0 14
:3 0 5e :3 0 14
:3 0 44 :3 0 7e
:2 0 270 3f1 3f3
21 :2 0 85 :2 0
272 3ef 3f7 46
:2 0 21 :2 0 277
3f9 3fb :3 0 5e
:3 0 14 :3 0 44
:3 0 7e :2 0 27a
3ff 401 21 :2 0
87 :2 0 27c 3fd
405 4e :2 0 5e
:3 0 14 :3 0 44
:3 0 7e :2 0 281
40a 40c 21 :2 0
85 :2 0 283 408
410 288 407 412
:3 0 4e :2 0 21
:2 0 28b 414 416
:3 0 28e 3ed 418
3ec 419 0 58b
6b :3 0 75 :2 0
1 73 :2 0 1
88 :4 0 17 :3 0
292 :3 0 41b 422
423 424 :4 0 295
298 :4 0 421 :2 0
58b 17 :3 0 3f
:3 0 14 :3 0 5e
:3 0 14 :3 0 44
:3 0 7e :2 0 29a
42a 42c 21 :2 0
87 :2 0 29c 428
430 46 :2 0 21
:2 0 2a1 432 434
:3 0 5e :3 0 14
:3 0 44 :3 0 7e
:2 0 2a4 438 43a
21 :2 0 89 :2 0
2a6 436 43e 4e
:2 0 5e :3 0 14
:3 0 44 :3 0 7e
:2 0 2ab 443 445
21 :2 0 87 :2 0
2ad 441 449 2b2
440 44b :3 0 4e
:2 0 21 :2 0 2b5
44d 44f :3 0 2b8
426 451 425 452
0 58b 6b :3 0
75 :2 0 1 73
:2 0 1 8a :4 0
17 :3 0 2bc :3 0
454 45b 45c 45d
:4 0 2bf 2c2 :4 0
45a :2 0 58b 17
:3 0 3f :3 0 14
:3 0 5e :3 0 14
:3 0 44 :3 0 7e
:2 0 2c4 463 465
21 :2 0 89 :2 0
2c6 461 469 46
:2 0 21 :2 0 2cb
46b 46d :3 0 5e
:3 0 14 :3 0 44
:3 0 7e :2 0 2ce
471 473 21 :2 0
6e :2 0 2d0 46f
477 4e :2 0 5e
:3 0 14 :3 0 44
:3 0 7e :2 0 2d5
47c 47e 21 :2 0
89 :2 0 2d7 47a
482 2dc 479 484
:3 0 4e :2 0 21
:2 0 2df 486 488
:3 0 2e2 45f 48a
45e 48b 0 58b
6b :3 0 75 :2 0
1 73 :2 0 1
8b :4 0 17 :3 0
2e6 :3 0 48d 494
495 496 :4 0 2e9
2ec :4 0 493 :2 0
58b 17 :3 0 3f
:3 0 14 :3 0 5e
:3 0 14 :3 0 44
:3 0 7e :2 0 2ee
49c 49e 21 :2 0
6e :2 0 2f0 49a
4a2 46 :2 0 21
:2 0 2f5 4a4 4a6
:3 0 5e :3 0 14
:3 0 44 :3 0 7e
:2 0 2f8 4aa 4ac
21 :2 0 7e :2 0
2fa 4a8 4b0 4e
:2 0 5e :3 0 14
:3 0 44 :3 0 7e
:2 0 2ff 4b5 4b7
21 :2 0 6e :2 0
301 4b3 4bb 306
4b2 4bd :3 0 4e
:2 0 21 :2 0 309
4bf 4c1 :3 0 30c
498 4c3 497 4c4
0 58b 6b :3 0
75 :2 0 1 73
:2 0 1 8c :4 0
17 :3 0 310 :3 0
4c6 4cd 4ce 4cf
:4 0 313 316 :4 0
4cc :2 0 58b 17
:3 0 3f :3 0 14
:3 0 5e :3 0 14
:3 0 44 :3 0 7e
:2 0 318 4d5 4d7
21 :2 0 7e :2 0
31a 4d3 4db 46
:2 0 21 :2 0 31f
4dd 4df :3 0 5e
:3 0 14 :3 0 44
:3 0 7e :2 0 322
4e3 4e5 21 :2 0
8d :2 0 324 4e1
4e9 4e :2 0 5e
:3 0 14 :3 0 44
:3 0 7e :2 0 329
4ee 4f0 21 :2 0
7e :2 0 32b 4ec
4f4 330 4eb 4f6
:3 0 4e :2 0 21
:2 0 333 4f8 4fa
:3 0 336 4d1 4fc
4d0 4fd 0 58b
6b :3 0 75 :2 0
1 73 :2 0 1
8e :4 0 17 :3 0
33a :3 0 4ff 506
507 508 :4 0 33d
340 :4 0 505 :2 0
58b 17 :3 0 3f
:3 0 14 :3 0 5e
:3 0 14 :3 0 44
:3 0 7e :2 0 342
50e 510 21 :2 0
8d :2 0 344 50c
514 46 :2 0 21
:2 0 349 516 518
:3 0 5e :3 0 14
:3 0 44 :3 0 7e
:2 0 34c 51c 51e
21 :2 0 8f :2 0
34e 51a 522 4e
:2 0 5e :3 0 14
:3 0 44 :3 0 7e
:2 0 353 527 529
21 :2 0 8d :2 0
355 525 52d 35a
524 52f :3 0 4e
:2 0 21 :2 0 35d
531 533 :3 0 360
50a 535 509 536
0 58b 6b :3 0
75 :2 0 1 73
:2 0 1 90 :4 0
17 :3 0 364 :3 0
538 53f 540 541
:4 0 367 36a :4 0
53e :2 0 58b 72
:3 0 75 :2 0 1
542 543 0 49
:2 0 72 :3 0 73
:2 0 1 546 547
0 91 :3 0 36c
545 54a :3 0 36f
92 :3 0 1e :3 0
6b :3 0 72 :3 0
54f 550 371 552
565 0 566 :3 0
72 :3 0 75 :2 0
1 554 555 0
7f :4 0 80 :4 0
82 :4 0 83 :4 0
84 :4 0 86 :4 0
88 :4 0 8a :4 0
8b :4 0 8c :4 0
8e :4 0 90 :4 0
373 :3 0 556 557
564 0 93 :3 0
72 :3 0 75 :2 0
1 568 569 0
7f :4 0 21 :2 0
80 :4 0 79 :2 0
82 :4 0 81 :2 0
83 :4 0 16 :2 0
84 :4 0 23 :2 0
86 :4 0 85 :2 0
88 :4 0 87 :2 0
8a :4 0 89 :2 0
8b :4 0 6e :2 0
8c :4 0 7e :2 0
8e :4 0 8d :2 0
90 :4 0 8f :2 0
380 567 583 1
584 39a 588 589
586 :2 0 1 0
54c 553 0 39c
0 587 :2 0 58b
39e 5d7 72 :3 0
75 :2 0 1 58c
58d 0 49 :2 0
72 :3 0 94 :2 0
1 590 591 0
91 :3 0 3be 58f
594 :3 0 3c1 92
:3 0 1e :3 0 95
:3 0 72 :3 0 599
59a 3c3 59c 5af
0 5b0 :3 0 72
:3 0 75 :2 0 1
59e 59f 0 7f
:4 0 80 :4 0 82
:4 0 83 :4 0 84
:4 0 86 :4 0 88
:4 0 8a :4 0 8b
:4 0 8c :4 0 8e
:4 0 90 :4 0 3c5
:3 0 5a0 5a1 5ae
0 93 :3 0 72
:3 0 75 :2 0 1
5b2 5b3 0 7f
:4 0 21 :2 0 80
:4 0 79 :2 0 82
:4 0 81 :2 0 83
:4 0 16 :2 0 84
:4 0 23 :2 0 86
:4 0 85 :2 0 88
:4 0 87 :2 0 8a
:4 0 89 :2 0 8b
:4 0 6e :2 0 8c
:4 0 7e :2 0 8e
:4 0 8d :2 0 90
:4 0 8f :2 0 3d2
5b1 5cd 1 5ce
3ec 5d2 5d3 5d0
:2 0 1 0 596
59d 0 3ee 0
5d1 :2 0 5d5 3f0
5d6 0 5d5 0
5d8 238 58b 0
5d8 3f2 0 863
6d :3 0 1e :3 0
96 :3 0 5da 5db
0 1e :3 0 97
:3 0 5dd 5de 0
3e :3 0 5dc 5df
0 5d9 5e1 e
:3 0 e :3 0 49
:2 0 1e :3 0 6d
:3 0 3f5 5e6 5e8
3f7 5e5 5ea :3 0
5e3 5eb 0 645
3f :3 0 1e :3 0
6d :3 0 3fa 5ee
5f0 21 :2 0 16
:2 0 3fc 5ed 5f4
5a :2 0 80 :4 0
402 5f6 5f8 :3 0
20 :3 0 55 :3 0
3f :3 0 1e :3 0
6d :3 0 405 5fd
5ff 23 :2 0 407
5fc 602 40a 5fb
604 5fa 605 0
608 98 :3 0 40c
643 3f :3 0 1e
:3 0 6d :3 0 40e
60a 60c 21 :2 0
16 :2 0 410 609
610 5a :2 0 82
:4 0 416 612 614
:3 0 22 :3 0 55
:3 0 3f :3 0 1e
:3 0 6d :3 0 419
619 61b 23 :2 0
41b 618 61e 41e
617 620 616 621
0 624 98 :3 0
420 625 615 624
0 644 3f :3 0
1e :3 0 6d :3 0
422 627 629 21
:2 0 16 :2 0 424
626 62d 5a :2 0
84 :4 0 42a 62f
631 :3 0 24 :3 0
99 :3 0 3f :3 0
1e :3 0 6d :3 0
42d 636 638 23
:2 0 42f 635 63b
9a :4 0 432 634
63e 633 63f 0
641 435 642 632
641 0 644 5f9
608 0 644 437
0 645 43b 647
3e :3 0 5e2 645
:4 0 863 3 :3 0
71 :2 0 21 :2 0
440 649 64b :3 0
72 :3 0 73 :2 0
1 64d 64e 0
91 :3 0 443 92
:3 0 1e :3 0 74
:3 0 72 :3 0 654
655 445 657 65f
0 660 :3 0 72
:3 0 75 :2 0 1
659 65a 0 5a
:2 0 9b :4 0 449
65c 65e :4 0 9c
:2 0 :2 1 661 44c
665 666 663 :2 0
1 0 651 658
0 44e 0 664
:2 0 668 450 686
72 :3 0 94 :2 0
1 669 66a 0
91 :3 0 452 92
:3 0 1e :3 0 95
:3 0 72 :3 0 670
671 454 673 67b
0 67c :3 0 72
:3 0 75 :2 0 1
675 676 0 5a
:2 0 9b :4 0 458
678 67a :4 0 9d
:2 0 :2 1 67d 45b
681 682 67f :2 0
1 0 66d 674
0 45d 0 680
:2 0 684 45f 685
0 684 0 687
64c 668 0 687
461 0 863 e
:3 0 e :3 0 49
:2 0 9b :4 0 464
68a 68c :3 0 688
68d 0 863 6d
:3 0 1e :3 0 96
:3 0 690 691 0
1e :3 0 97 :3 0
693 694 0 3e
:3 0 692 695 0
68f 697 e :3 0
e :3 0 49 :2 0
1e :3 0 6d :3 0
467 69c 69e 469
69b 6a0 :3 0 699
6a1 0 6a3 46c
6a5 3e :3 0 698
6a3 :4 0 863 3
:3 0 71 :2 0 21
:2 0 470 6a7 6a9
:3 0 54 :3 0 9d
:2 0 1 46 :2 0
50 :3 0 9e :2 0
1 5 :2 0 473
6ae 6b1 476 6ad
6b3 :3 0 87 :2 0
54 :2 0 479 6b6
6b7 :3 0 49 :2 0
93 :3 0 54 :3 0
9d :2 0 1 46
:2 0 40 :3 0 94
:2 0 1 47c 6be
6c0 47e 6bd 6c2
:3 0 79 :2 0 54
:2 0 481 6c5 6c6
:3 0 5 :2 0 3f
:3 0 94 :2 0 1
21 :2 0 77 :3 0
40 :3 0 94 :2 0
1 484 6cd 6cf
78 :2 0 79 :2 0
486 6d1 6d3 :3 0
489 6cc 6d5 48b
6c9 6d7 3f :3 0
94 :2 0 1 77
:3 0 40 :3 0 94
:2 0 1 48f 6dc
6de 78 :2 0 79
:2 0 491 6e0 6e2
:3 0 494 6db 6e4
46 :2 0 21 :2 0
496 6e6 6e8 :3 0
499 6d9 6ea 49c
6ba 6ec 91 :3 0
4a1 6b9 6ef :3 0
4a4 92 :3 0 1e
:3 0 9f :3 0 4a6
6f5 :2 0 6f7 :4 0
9e :2 0 :2 1 6f8
9d :2 0 :2 1 6fa
94 :2 0 :2 1 6fc
4a8 700 701 6fe
:2 0 1 0 6f1
6f6 0 4ac 0
6ff :2 0 703 4ae
763 54 :3 0 9d
:2 0 1 46 :2 0
50 :3 0 9e :2 0
1 5 :2 0 4b0
707 70a 4b3 706
70c :3 0 87 :2 0
54 :2 0 4b6 70f
710 :3 0 49 :2 0
93 :3 0 54 :3 0
9d :2 0 1 46
:2 0 40 :3 0 94
:2 0 1 4b9 717
719 4bb 716 71b
:3 0 79 :2 0 54
:2 0 4be 71e 71f
:3 0 5 :2 0 3f
:3 0 94 :2 0 1
21 :2 0 77 :3 0
40 :3 0 94 :2 0
1 4c1 726 728
78 :2 0 79 :2 0
4c3 72a 72c :3 0
4c6 725 72e 4c8
722 730 3f :3 0
94 :2 0 1 77
:3 0 40 :3 0 94
:2 0 1 4cc 735
737 78 :2 0 79
:2 0 4ce 739 73b
:3 0 4d1 734 73d
46 :2 0 21 :2 0
4d3 73f 741 :3 0
4d6 732 743 4d9
713 745 91 :3 0
4de 712 748 :3 0
4e1 92 :3 0 1e
:3 0 95 :3 0 4e3
74e 754 0 755
:3 0 75 :2 0 1
5a :2 0 a0 :4 0
4e7 751 753 :4 0
9e :2 0 :2 1 756
9d :2 0 :2 1 758
94 :2 0 :2 1 75a
4ea 75e 75f 75c
:2 0 1 0 74a
74f 0 4ee 0
75d :2 0 761 4f0
762 0 761 0
764 6aa 703 0
764 4f2 0 863
6d :3 0 1e :3 0
96 :3 0 766 767
0 1e :3 0 97
:3 0 769 76a 0
3e :3 0 768 76b
0 765 76d e
:3 0 e :3 0 49
:2 0 1e :3 0 6d
:3 0 4f5 772 774
4f7 771 776 :3 0
76f 777 0 779
4fa 77b 3e :3 0
76e 779 :4 0 863
a1 :3 0 e :3 0
a2 :2 0 4fc 77e
77f :3 0 3e :3 0
780 79e 10 :3 0
a3 :3 0 e :3 0
21 :2 0 11 :2 0
4fe 784 788 783
789 0 79c e
:3 0 a3 :3 0 e
:3 0 11 :2 0 502
78c 78f 78b 790
0 79c 12 :3 0
12 :3 0 49 :2 0
29 :3 0 10 :3 0
505 795 797 507
794 799 :3 0 792
79a 0 79c 50a
79e 3e :3 0 782
79c :4 0 863 13
:3 0 38 :3 0 12
:3 0 50e 7a0 7a2
79f 7a3 0 863
13 :3 0 7a :3 0
13 :3 0 a :3 0
c :3 0 510 7a6
7aa 7a5 7ab 0
863 3 :3 0 71
:2 0 21 :2 0 516
7ae 7b0 :3 0 50
:3 0 51 :3 0 7b5
:3 0 51 :2 0 5
:2 0 519 7b2 7b7
51c 28 :3 0 74
:3 0 51e 7bc 7c9
0 7ca :3 0 75
:2 0 1 5a :2 0
a4 :4 0 522 7bf
7c1 :3 0 73 :2 0
1 13 :3 0 5a
:2 0 527 7c5 7c6
:3 0 7c2 7c8 7c7
:3 0 7cc 7cd :5 0
7b9 7bd 0 52a
0 7cb :2 0 7cf
52c 7ef 50 :3 0
51 :3 0 7d3 :3 0
51 :2 0 5 :2 0
52e 7d0 7d5 531
28 :3 0 95 :3 0
533 7da 7e7 0
7e8 :3 0 75 :2 0
1 5a :2 0 a4
:4 0 537 7dd 7df
:3 0 94 :2 0 1
13 :3 0 5a :2 0
53c 7e3 7e4 :3 0
7e0 7e6 7e5 :3 0
7ea 7eb :5 0 7d7
7db 0 53f 0
7e9 :2 0 7ed 541
7ee 0 7ed 0
7f0 7b1 7cf 0
7f0 543 0 863
28 :3 0 62 :2 0
5 :2 0 548 7f2
7f4 :3 0 c :3 0
3f :3 0 c :3 0
27 :3 0 46 :2 0
21 :2 0 54b 7fa
7fc :3 0 54e 7f7
7fe 49 :2 0 3f
:3 0 c :3 0 21
:2 0 27 :3 0 551
801 805 555 800
807 :3 0 7f6 808
0 84b 13 :3 0
7a :3 0 13 :3 0
a :3 0 c :3 0
558 80b 80f 80a
810 0 84b 3
:3 0 71 :2 0 21
:2 0 55e 813 815
:3 0 20 :3 0 71
:2 0 21 :2 0 563
818 81a :3 0 26
:3 0 4e :2 0 22
:3 0 566 81d 81f
:3 0 24 :3 0 62
:2 0 56b 822 823
:3 0 6b :3 0 825
:2 0 827 :2 0 826
:2 0 830 a5 :3 0
82a 82b :2 0 82c
a5 :5 0 829 :2 0
830 6 :3 0 a6
:4 0 82e :2 0 830
56e 831 824 830
0 832 572 0
833 574 834 81b
833 0 835 576
0 845 6b :3 0
75 :2 0 1 73
:2 0 1 a4 :4 0
13 :3 0 578 :3 0
836 83d 83e 83f
:4 0 57b 57e :4 0
83c :2 0 845 a5
:3 0 842 843 :2 0
844 a5 :5 0 841
:2 0 845 580 846
816 845 0 847
584 0 84b 6
:3 0 c :3 0 849
:2 0 84b 586 861
3 :3 0 71 :2 0
21 :2 0 58d 84d
84f :3 0 6b :3 0
851 :2 0 853 :2 0
852 :2 0 859 a5
:3 0 856 857 :2 0
858 a5 :5 0 855
:2 0 859 590 85a
850 859 0 85b
593 0 85f 6
:3 0 a7 :4 0 85d
:2 0 85f 595 860
0 85f 0 862
7f5 84b 0 862
598 0 863 59b
86f 4f :3 0 6
:3 0 a8 :4 0 867
:2 0 869 5cb 86b
5b0 86a 869 :2 0
86c 5b2 :2 0 86f
2 :3 0 5b4 86f
86e 863 86c :6 0
870 :2 0 3 d
86f 872 :2 0 2
870 873 :8 0 
5ce
4
:3 0 1 4 1
8 1 14 1
12 1 1c 1
1a 1 24 1
22 1 2c 1
2a 1 34 1
32 1 3c 1
3a 1 44 1
42 1 4b 1
49 1 52 1
50 1 59 1
57 1 61 1
65 1 69 1
73 1 71 1
7b 1 79 1
83 1 81 1
89 1 8e 1
95 1 93 1
9d 1 9b 1
a5 1 a8 1
b0 1 b6 1
ac 1 bd 1
bb 1 c2 2
cc cf 1 d4
1 e1 0 3
b9 c0 c4 3
d1 d7 de 1
e4 1 ec 1
e8 1 f3 1
f1 1 fa 1
f8 1 101 1
ff 3 10c 10d
10e 1 114 2
11a 11b 1 121
2 11f 121 1
127 2 129 12b
1 12d 1 130
1 132 1 134
2 139 13b 2
141 142 1 144
2 13d 146 2
149 14b 2 14e
150 1 159 2
156 15b 2 15d
15e 1 160 2
152 162 1 165
2 168 167 5
111 117 11e 133
169 3 108 16c
16f 1 175 1
172 1 178 4
ef f6 fd 104
2 175 17e 2
181 183 2 190
191 1 193 2
195 196 2 199
19b 3 185 189
19d 1 1a2 1
1a7 2 1a5 1a7
1 1ab 2 1aa
1ab 1 1b3 2
1b5 1b6 1 1ba
2 1b8 1ba 1
1bf 2 1c1 1c2
1 1c6 2 1c4
1c6 3 19f 1a0
1a1 1 1d5 2
1d3 1d5 1 1da
1 1dc 2 1e0
1e2 1 1e4 1
1e7 4 1ec 1ed
1ee 1ef 2 1f3
1f4 1 1f8 2
1f6 1f8 1 1e6
1 204 2 202
204 1 209 1
20b 2 214 216
1 219 2 227
229 1 22b 2
224 22d 1 230
1 236 2 234
236 1 23b 1
240 1 247 2
245 247 1 23d
1 252 2 254
256 1 258 2
25f 261 2 25e
263 3 268 269
26a 2 265 26c
3 272 273 274
1 27b 2 27d
27f 2 28a 28c
2 28f 291 2
288 293 3 287
295 296 2 2a1
2a2 2 29e 2a4
1 2a6 2 29b
2a8 2 299 2ab
1 2b9 2 2b7
2bb 2 2bd 2bf
3 2b4 2b5 2c1
2 2c8 2c9 2
2c6 2c7 1 2ca
1 2d5 4 2d3
2d7 2d8 2d9 2
2db 2dd 1 2e3
4 2e1 2e5 2e6
2e7 1 2ee 4
2ec 2f0 2f1 2f2
2 2e9 2f4 2
2f6 2f8 3 2d1
2df 2fa 2 301
302 2 2ff 300
1 303 1 30e
4 30c 310 311
312 2 314 316
1 31c 4 31a
31e 31f 320 1
327 4 325 329
32a 32b 2 322
32d 2 32f 331
3 30a 318 333
2 33a 33b 2
338 339 1 33c
1 347 4 345
349 34a 34b 2
34d 34f 1 355
4 353 357 358
359 1 360 4
35e 362 363 364
2 35b 366 2
368 36a 3 343
351 36c 2 373
374 2 371 372
1 375 1 380
4 37e 382 383
384 2 386 388
1 38e 4 38c
390 391 392 1
399 4 397 39b
39c 39d 2 394
39f 2 3a1 3a3
3 37c 38a 3a5
2 3ac 3ad 2
3aa 3ab 1 3ae
1 3b9 4 3b7
3bb 3bc 3bd 2
3bf 3c1 1 3c7
4 3c5 3c9 3ca
3cb 1 3d2 4
3d0 3d4 3d5 3d6
2 3cd 3d8 2
3da 3dc 3 3b5
3c3 3de 2 3e5
3e6 2 3e3 3e4
1 3e7 1 3f2
4 3f0 3f4 3f5
3f6 2 3f8 3fa
1 400 4 3fe
402 403 404 1
40b 4 409 40d
40e 40f 2 406
411 2 413 415
3 3ee 3fc 417
2 41e 41f 2
41c 41d 1 420
1 42b 4 429
42d 42e 42f 2
431 433 1 439
4 437 43b 43c
43d 1 444 4
442 446 447 448
2 43f 44a 2
44c 44e 3 427
435 450 2 457
458 2 455 456
1 459 1 464
4 462 466 467
468 2 46a 46c
1 472 4 470
474 475 476 1
47d 4 47b 47f
480 481 2 478
483 2 485 487
3 460 46e 489
2 490 491 2
48e 48f 1 492
1 49d 4 49b
49f 4a0 4a1 2
4a3 4a5 1 4ab
4 4a9 4ad 4ae
4af 1 4b6 4
4b4 4b8 4b9 4ba
2 4b1 4bc 2
4be 4c0 3 499
4a7 4c2 2 4c9
4ca 2 4c7 4c8
1 4cb 1 4d6
4 4d4 4d8 4d9
4da 2 4dc 4de
1 4e4 4 4e2
4e6 4e7 4e8 1
4ef 4 4ed 4f1
4f2 4f3 2 4ea
4f5 2 4f7 4f9
3 4d2 4e0 4fb
2 502 503 2
500 501 1 504
1 50f 4 50d
511 512 513 2
515 517 1 51d
4 51b 51f 520
521 1 528 4
526 52a 52b 52c
2 523 52e 2
530 532 3 50b
519 534 2 53b
53c 2 539 53a
1 53d 2 544
548 1 54b 1
551 c 558 559
55a 55b 55c 55d
55e 55f 560 561
562 563 19 56a
56b 56c 56d 56e
56f 570 571 572
573 574 575 576
577 578 579 57a
57b 57c 57d 57e
57f 580 581 582
1 585 1 54e
1f 24e 25b 26f
277 2ae 2b1 2c4
2ce 2fd 307 336
340 36f 379 3a8
3b2 3e1 3eb 41a
424 453 45d 48c
496 4c5 4cf 4fe
508 537 541 58a
2 58e 592 1
595 1 59b c
5a2 5a3 5a4 5a5
5a6 5a7 5a8 5a9
5aa 5ab 5ac 5ad
19 5b4 5b5 5b6
5b7 5b8 5b9 5ba
5bb 5bc 5bd 5be
5bf 5c0 5c1 5c2
5c3 5c4 5c5 5c6
5c7 5c8 5c9 5ca
5cb 5cc 1 5cf
1 598 1 5d4
2 5d7 5d6 1
5e7 2 5e4 5e9
1 5ef 3 5f1
5f2 5f3 1 5f7
2 5f5 5f7 1
5fe 2 600 601
1 603 1 606
1 60b 3 60d
60e 60f 1 613
2 611 613 1
61a 2 61c 61d
1 61f 1 622
1 628 3 62a
62b 62c 1 630
2 62e 630 1
637 2 639 63a
2 63c 63d 1
640 3 643 625
642 2 5ec 644
1 64a 2 648
64a 1 64f 1
656 1 65d 2
65b 65d 1 662
1 653 1 667
1 66b 1 672
1 679 2 677
679 1 67e 1
66f 1 683 2
686 685 2 689
68b 1 69d 2
69a 69f 1 6a2
1 6a8 2 6a6
6a8 2 6af 6b0
2 6ac 6b2 2
6b4 6b5 1 6bf
2 6bc 6c1 2
6c3 6c4 1 6ce
2 6d0 6d2 1
6d4 3 6ca 6cb
6d6 1 6dd 2
6df 6e1 1 6e3
2 6e5 6e7 2
6da 6e9 4 6c7
6c8 6d8 6eb 2
6b8 6ed 1 6f0
1 6f4 3 6f9
6fb 6fd 1 6f3
1 702 2 708
709 2 705 70b
2 70d 70e 1
718 2 715 71a
2 71c 71d 1
727 2 729 72b
1 72d 3 723
724 72f 1 736
2 738 73a 1
73c 2 73e 740
2 733 742 4
720 721 731 744
2 711 746 1
749 1 74d 1
752 2 750 752
3 757 759 75b
1 74c 1 760
2 763 762 1
773 2 770 775
1 778 1 77d
3 785 786 787
2 78d 78e 1
796 2 793 798
3 78a 791 79b
1 7a1 3 7a7
7a8 7a9 1 7af
2 7ad 7af 2
7b4 7b6 1 7b8
1 7bb 1 7c0
2 7be 7c0 1
7c4 2 7c3 7c4
1 7ba 1 7ce
2 7d2 7d4 1
7d6 1 7d9 1
7de 2 7dc 7de
1 7e2 2 7e1
7e2 1 7d8 1
7ec 2 7ef 7ee
1 7f3 2 7f1
7f3 2 7f9 7fb
2 7f8 7fd 3
802 803 804 2
7ff 806 3 80c
80d 80e 1 814
2 812 814 1
819 2 817 819
2 81c 81e 1
821 2 820 821
3 827 82c 82f
1 831 1 832
1 834 2 839
83a 2 837 838
1 83b 3 835
83f 844 1 846
4 809 811 847
84a 1 84e 2
84c 84e 2 853
858 1 85a 2
85b 85e 2 861
860 12 1d2 1dd
201 20c 21c 233
5d8 647 687 68e
6a5 764 77b 79e
7a4 7ac 7f0 862
1 868 1 865
1 86b 16 11
18 20 28 30
38 40 47 4e
55 5c 68 6f
77 7f 87 8c
91 99 a1 dd
17d 2 868 871

1
4
0 
872
0
1
14
b
26
0 1 1 3 1 1 1 1
1 1 1 0 0 0 0 0
0 0 0 0 
f8 3 0
bb 2 0
2a 1 0
3a 1 0
79 1 0
93 1 0
4 1 0
f1 3 0
765 a 0
68f 9 0
5d9 8 0
278 7 0
21d 6 0
20d 5 0
49 1 0
a4 1 2
e1 3 0
a5 2 0
e8 3 0
69 1 0
8e 1 0
57 1 0
c2 2 0
22 1 0
e0 1 3
3 0 1
1a 1 0
5f 1 0
9b 1 0
89 1 0
50 1 0
12 1 0
81 1 0
ac 2 0
71 1 0
42 1 0
ff 3 0
32 1 0
0

/
Create Or Replace Function zlTools.f_Reg_Info wrapped 
0
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
3
8
8106000
1
4
0 
5a
2 :e:
1FUNCTION:
1F_REG_INFO:
1FROM_TEMP_IN:
1NUMBER:
10:
1RETURN:
1T_REG_ROWSET:
1T_RETURN:
1V_CODON:
1VARCHAR2:
136:
1G3J0TR7H594NSYWLAQXC8FEVD6ZKIP2U1BMO:
1N_LOGON:
118:
1N_RECORD:
1E_ENVIRONMENT:
1E_ARTIFICIAL:
1E_UNCHECKED:
1NVL:
1COUNT:
1MOD:
1TO_NUMBER:
1TO_CHAR:
1MIN:
1LOGON_TIME:
1hh24miss:
131:
1+:
11:
1V$SESSION:
1STATUS:
1=:
1ACTIVE:
1USERNAME:
1USER:
1INSTR:
1UPPER:
1PROGRAM:
1VB6:
1>:
1ZL:
1RAISE:
1USER_SOURCE:
1NAME:
1F_REG_AUDIT:
1F_REG_TOOL:
1F_REG_FUNC:
1TEXT:
1ZLREGAUDIT:
1<:
13:
1!=:
1SUBSTR:
1||:
1A:
1内容:
1项目:
1授权证章:
1R:
1ZLREGINFO:
1TRANSLATE:
10123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ:
1T_REG_RECORD:
1BULK:
1COLLECT:
1单位名称:
1授权性质:
1使用期限:
1授权站点:
1授权日期:
1产品标题:
1产品简名:
1产品开发商:
1技术支持商:
1支持商MAIL:
1支持商URL:
1支持商简名:
1功能:
1ZLREGFILE:
1RAISE_APPLICATION_ERROR:
1-:
120101:
1Unallowed Enviroment!:
120102:
1Artificial Interfere!:
120105:
1Unchecked Certificate!:
1OTHERS:
120109:
1Other Unknown Error!:
0

0
0
1b6
2
0 a0 1d 8d 8f a0 51 b0
3d b4 :2 a0 a3 2c 6a a0 1c
a0 b4 2e 81 b0 a3 a0 51
a5 1c 6e 81 b0 a3 a0 51
a5 1c 51 81 b0 a3 a0 51
a5 1c 51 81 b0 8b b0 2a
8b b0 2a 8b b0 2a :2 a0 d2
9f 51 a5 b :4 a0 9f a0 d2
6e a5 b a5 b 51 7e a5
2e 7e 51 b4 2e ac :3 a0 b2
ee a0 7e 6e b4 2e :2 a0 7e
b4 2e a 10 :3 a0 a5 b 6e
a5 b 7e 51 b4 2e :3 a0 a5
b 6e a5 b 7e 51 b4 2e
52 10 5a a 10 ac e5 d0
b2 e9 a0 7e 51 b4 2e :2 a0
62 b7 19 3c a0 d2 9f ac
:2 a0 b2 ee a0 3e :4 6e 5 48
:2 a0 6e a5 b 7e 51 b4 2e
a 10 ac e5 d0 b2 e9 a0
7e 51 b4 2e :2 a0 62 b7 19
3c a0 7e 51 b4 2e :4 a0 7e
51 b4 2e a5 b 7e :2 a0 51
a0 a5 b b4 2e d :2 a0 d2
9f 51 a5 b ac :3 a0 6b ac
:2 a0 b9 b2 ee :2 a0 6b 7e 6e
b4 2e ac d0 eb a0 b9 :2 a0
6b ac :2 a0 b9 b2 ee :2 a0 6b
7e 6e b4 2e ac d0 eb a0
b9 b2 ee :2 a0 6b a0 7e :2 a0
6b 6e a0 a5 b b4 2e ac
e5 d0 b2 e9 a0 7e 51 b4
2e :2 a0 62 b7 19 3c b7 19
3c a0 7e 51 b4 2e :2 a0 51
a0 a5 b a0 ac :3 a0 b2 ee
a0 3e :c 6e 5 48 ac e5 d0
b2 e9 b7 :2 a0 51 a0 a5 b
a0 ac :3 a0 b2 ee a0 3e :c 6e
5 48 ac e5 d0 b2 e9 b7
:2 19 3c :2 a0 65 b7 :2 a0 7e 51
b4 2e 6e a5 57 b7 a6 9
:2 a0 7e 51 b4 2e 6e a5 57
b7 a6 9 :2 a0 7e 51 b4 2e
6e a5 57 b7 a6 9 a0 53
a0 7e 51 b4 2e 6e a5 57
b7 a6 9 a4 a0 b1 11 68
4f 17 b5 
1b6
2
0 3 7 8 24 1d 21 1c
2c 19 31 35 5f 3d 41 45
49 51 55 56 5b 3c 80 6a
39 6e 6f 77 7c 69 9f 8b
66 8f 90 98 9b 8a be aa
87 ae af b7 ba a9 c5 a6
cc cf d6 d7 da e1 e2 e5
e9 ed f1 f4 f7 f8 fa fe
102 106 10a 10d 111 115 11a 11b
11d 11e 120 123 126 127 12c 12f
132 133 138 139 13d 141 145 146
14d 151 154 159 15a 15f 163 167
16a 16b 1 170 175 179 17d 181
182 184 189 18a 18c 18f 192 193
198 19c 1a0 1a4 1a5 1a7 1ac 1ad
1af 1b2 1b5 1b6 1 1bb 1c0 1
1c3 1c8 1c9 1cf 1d3 1d4 1d9 1dd
1e0 1e3 1e4 1e9 1ed 1f1 1f4 1f6
1fa 1fd 201 205 208 209 20d 211
212 219 1 21d 222 227 22c 231
235 238 23c 240 245 246 248 24b
24e 24f 1 254 259 25a 260 264
265 26a 26e 271 274 275 27a 27e
282 285 287 28b 28e 292 295 298
299 29e 2a2 2a6 2aa 2ae 2b1 2b4
2b5 2ba 2bb 2bd 2c0 2c4 2c8 2cb
2cf 2d0 2d2 2d3 2d8 2dc 2e0 2e4
2e8 2eb 2ee 2ef 2f1 2f2 2f6 2fa
2fe 301 302 306 30a 30c 30d 314
318 31c 31f 322 327 328 32d 32e
332 336 33a 33c 340 344 347 348
34c 350 352 353 35a 35e 362 365
368 36d 36e 373 374 378 37c 380
382 383 38a 38e 392 395 399 39c
3a0 3a4 3a7 3ac 3b0 3b1 3b3 3b4
3b9 3ba 3c0 3c4 3c5 3ca 3ce 3d1
3d4 3d5 3da 3de 3e2 3e5 3e7 3eb
3ee 3f0 3f4 3f7 3fb 3fe 401 402
407 40b 40f 412 416 417 419 41d
41e 422 426 42a 42b 432 1 436
43b 440 445 44a 44f 454 459 45e
463 468 46d 472 476 479 47a 480
484 485 48a 48c 490 494 497 49b
49c 49e 4a2 4a3 4a7 4ab 4af 4b0
4b7 1 4bb 4c0 4c5 4ca 4cf 4d4
4d9 4de 4e3 4e8 4ed 4f2 4f7 4fb
4fe 4ff 505 509 50a 50f 511 515
519 51c 520 524 528 52a 52e 532
535 538 539 53e 543 544 549 54b
54c 551 555 559 55c 55f 560 565
56a 56b 570 572 573 578 57c 580
583 586 587 58c 591 592 597 599
59a 59f 1 5a3 5a7 5aa 5ad 5ae
5b3 5b8 5b9 5be 5c0 5c1 5c6 5ca
5ce 5d0 5dc 5e0 5e2 5eb 
1b6
2
0 :2 1 a 15 25 2f :2 15 14
32 39 3 :2 1 :2 c :3 1c c :2 3
c 15 14 c 1c c :2 3 c
13 12 c 1a c :2 3 c 13
12 c 1a c :a 3 a :3 e 18
:2 a 1c 20 2a :2 32 36 32 43
:2 2a :2 20 51 :3 1c 55 57 :2 1c a
8 12 8 3 8 9 10 12
:2 10 1f 2a :3 28 :2 9 34 3a 40
:2 3a 4a :2 34 51 53 :2 51 58 5e
64 :2 5e 6e :2 58 74 76 :2 74 :2 34
33 :2 9 :5 3 6 f 11 :2 f 5
b 5 13 :2 3 :4 a :2 8 3 8
:2 9 12 21 2f 3d :2 9 4f 55
5b :2 4f 69 6b :2 69 :2 9 :5 3 6
f 11 :2 f 5 b 5 13 :2 3
6 13 16 :2 13 5 10 17 20
28 2a :2 20 :2 10 2d 30 37 40
43 :2 30 :2 10 5 c :3 10 1a :3 c
a 12 :2 14 12 20 2b 20 1b
20 33 :2 35 3c 3e :2 3c 1b b
a 4a a 12 :2 14 12 20 2a
20 1b 20 32 :2 34 3b 3d :2 3b
1b b a 49 a 5 a b
:2 d 16 14 20 :2 22 2a 52 :2 16
:2 14 :5 5 8 11 13 :2 11 7 d
7 15 :2 5 18 :2 3 6 13 16
:2 13 c 19 21 24 :2 c 2c c
31 :2 a 5 a :2 b 16 22 2e
3a 46 52 5e 6a c 1a 28
35 :2 b :5 5 18 c 19 21 24
:2 c 2c c 31 :2 a 5 a :2 b
16 22 2e 3a 46 52 5e 6a
c 1a 28 35 :2 b :5 5 :5 3 a
3 1 8 5 1d 1e :2 1d 25
:2 5 16 :2 3 8 5 1d 1e :2 1d
25 :2 5 15 :2 3 8 5 1d 1e
:2 1d 25 :2 5 14 :2 3 :2 8 5 1d
1e :2 1d 25 :2 5 f :2 3 1 5
:6 1 
1b6
2
0 :b 1 5 :2 1 :7 5 :8 7 :8 8 :8 9
:3 b :3 c :3 d :1c 11 :2 12 :3 13 :29 14 13
:4 11 :5 15 :3 16 :3 15 :4 1a 1b :3 1c :13 1d
1c :4 1a :5 1e :3 1f :3 1e :5 23 :14 24 :8 25
26 :15 27 :15 28 :2 27 :e 29 27 :4 25 :5 2a
:3 2b :3 2a :3 23 :5 30 :9 31 32 :3 33 :a 34
:4 35 :2 34 33 :4 31 30 :9 37 38 :3 39
:a 3a :4 3b :2 3a 39 :4 37 :2 36 :2 30 :3 3d
f 3f :8 40 :3 3f 41 :8 42 :3 41 43
:8 44 :3 43 :2 45 :8 46 :3 45 3e 47 :3 1
47 :2 1 
5ed
4
:3 0 1 :4 0 2
:a 0 1b2 1 :4 0
5 :2 0 3 4
:3 0 5 :2 0 3
:7 0 7 5 6
:2 0 6 :3 0 7
:3 0 b :2 0 7
9 b 0 1b2
3 d :2 0 7
:3 0 f :7 0 7
:4 0 11 12 :3 0
15 10 13 1b0
8 :6 0 e :2 0
b a :3 0 9
17 19 :6 0 c
:4 0 1d 1a 1b
1b0 9 :6 0 e
:2 0 f 4 :3 0
d 1f 21 :6 0
5 :2 0 25 22
23 1b0 d :6 0
15 :2 0 13 4
:3 0 11 27 29
:6 0 5 :2 0 2d
2a 2b 1b0 f
:6 0 10 :6 0 2f
0 1b0 11 :6 0
17 32 0 1b0
12 :6 0 19 35
0 1b0 13 :3 0
14 :3 0 3a :3 0
14 :2 0 5 :2 0
1b 37 3c 15
:3 0 16 :3 0 17
:3 0 18 :3 0 18
:2 0 19 :3 0 42
0 43 0 1a
:4 0 1e 40 46
21 3f 48 1b
:2 0 15 :2 0 23
4b 4c :3 0 1c
:2 0 1d :2 0 26
4e 50 :3 0 29
f :3 0 d :3 0
1e :3 0 2c 56
80 0 81 :3 0
1f :3 0 20 :2 0
21 :4 0 30 59
5b :3 0 22 :3 0
23 :3 0 20 :2 0
35 5f 60 :3 0
5c 62 61 :2 0
24 :3 0 25 :3 0
26 :3 0 38 65
67 27 :4 0 3a
64 6a 28 :2 0
5 :2 0 3f 6c
6e :3 0 24 :3 0
25 :3 0 26 :3 0
42 71 73 29
:4 0 44 70 76
28 :2 0 5 :2 0
49 78 7a :3 0
6f 7c 7b :2 0
7d :2 0 63 7f
7e :3 0 83 84
:5 0 52 57 0
4c 0 82 :2 0
17c f :3 0 20
:2 0 5 :2 0 51
87 89 :3 0 2a
:3 0 10 :3 0 8c
0 8e 54 8f
8a 8e 0 90
56 0 17c 14
:3 0 93 :3 0 14
:2 0 58 f :3 0
2b :3 0 5a 97
ab 0 ac :3 0
2c :3 0 2d :4 0
2 :4 0 2e :4 0
2f :4 0 5c :3 0
99 9a 9f 24
:3 0 30 :3 0 31
:4 0 61 a1 a4
28 :2 0 5 :2 0
66 a6 a8 :3 0
a0 aa a9 :3 0
ae af :5 0 94
98 0 69 0
ad :2 0 17c f
:3 0 32 :2 0 33
:2 0 6d b2 b4
:3 0 2a :3 0 11
:3 0 b7 0 b9
70 ba b5 b9
0 bb 72 0
17c 3 :3 0 34
:2 0 1d :2 0 76
bd bf :3 0 9
:3 0 35 :3 0 9
:3 0 d :3 0 1c
:2 0 1d :2 0 79
c5 c7 :3 0 7c
c2 c9 36 :2 0
35 :3 0 9 :3 0
1d :2 0 d :3 0
7f cc d0 83
cb d2 :3 0 c1
d3 0 128 13
:3 0 14 :3 0 d8
:3 0 14 :2 0 5
:2 0 86 d5 da
89 f :3 0 37
:3 0 38 :2 0 1
de df 0 8b
31 :3 0 37 :3 0
e2 e3 8d e5
ed 0 ee :3 0
37 :3 0 39 :2 0
1 e7 e8 0
20 :2 0 3a :4 0
91 ea ec :5 0
e1 e6 0 ef
:3 0 37 :3 0 f0
f1 3b :3 0 38
:2 0 1 f3 f4
0 94 3c :3 0
3b :3 0 f7 f8
96 fa 102 0
103 :3 0 3b :3 0
39 :2 0 1 fc
fd 0 20 :2 0
3a :4 0 9a ff
101 :5 0 f6 fb
0 104 :3 0 3b
:3 0 105 106 9d
108 117 0 118
:3 0 37 :3 0 38
:2 0 1 10a 10b
0 3d :3 0 20
:2 0 3b :3 0 38
:2 0 1 10f 110
0 3e :4 0 9
:3 0 a0 10d 114
a6 10e 116 :4 0
11a 11b :5 0 dc
109 0 a9 0
119 :2 0 128 f
:3 0 20 :2 0 5
:2 0 ad 11e 120
:3 0 2a :3 0 12
:3 0 123 0 125
b0 126 121 125
0 127 b2 0
128 b4 129 c0
128 0 12a b8
0 17c 3 :3 0
34 :2 0 1d :2 0
bc 12c 12e :3 0
3f :3 0 39 :2 0
1 5 :2 0 38
:2 0 1 bf 130
134 40 :3 0 c3
41 :3 0 8 :3 0
31 :3 0 c5 13b
14c 0 14d :3 0
39 :2 0 1 42
:4 0 43 :4 0 44
:4 0 45 :4 0 46
:4 0 47 :4 0 48
:4 0 49 :4 0 4a
:4 0 4b :4 0 4c
:4 0 4d :4 0 c7
:3 0 13d 13e 14b
0 14f 150 :3 0
1 0 137 13c
0 d4 0 14e
:2 0 152 d6 177
3f :3 0 39 :2 0
1 5 :2 0 4e
:2 0 1 d8 153
157 40 :3 0 dc
41 :3 0 8 :3 0
4f :3 0 de 15e
16f 0 170 :3 0
39 :2 0 1 42
:4 0 43 :4 0 44
:4 0 45 :4 0 46
:4 0 47 :4 0 48
:4 0 49 :4 0 4a
:4 0 4b :4 0 4c
:4 0 4d :4 0 e0
:3 0 160 161 16e
0 172 173 :3 0
1 0 15a 15f
0 ed 0 171
:2 0 175 ef 176
0 175 0 178
12f 152 0 178
f1 0 17c 6
:3 0 8 :3 0 17a
:2 0 17c f4 1b1
10 :3 0 50 :3 0
51 :2 0 52 :2 0
fc 17f 181 :3 0
53 :4 0 fe 17e
184 :2 0 186 101
188 103 187 186
:2 0 1ae 11 :3 0
50 :3 0 51 :2 0
54 :2 0 105 18b
18d :3 0 55 :4 0
107 18a 190 :2 0
192 10a 194 10c
193 192 :2 0 1ae
12 :3 0 50 :3 0
51 :2 0 56 :2 0
10e 197 199 :3 0
57 :4 0 110 196
19c :2 0 19e 113
1a0 115 19f 19e
:2 0 1ae 58 :3 0
50 :3 0 51 :2 0
59 :2 0 117 1a4
1a6 :3 0 5a :4 0
119 1a3 1a9 :2 0
1ab 12d 1ad 11e
1ac 1ab :2 0 1ae
120 :2 0 1b1 2
:3 0 125 1b1 1b0
17c 1ae :6 0 1b2
:2 0 3 d 1b1
1b4 :2 0 2 1b2
1b5 :8 0 
130
4
:3 0 1 4 1
8 1 c 1
18 1 16 1
20 1 1e 1
28 1 26 1
2e 1 31 1
34 2 39 3b
2 44 45 1
47 2 49 4a
2 4d 4f 2
3d 51 1 55
1 5a 2 58
5a 1 5e 2
5d 5e 1 66
2 68 69 1
6d 2 6b 6d
1 72 2 74
75 1 79 2
77 79 2 53
54 1 88 2
86 88 1 8d
1 8f 1 92
1 96 4 9b
9c 9d 9e 2
a2 a3 1 a7
2 a5 a7 1
95 1 b3 2
b1 b3 1 b8
1 ba 1 be
2 bc be 2
c4 c6 2 c3
c8 3 cd ce
cf 2 ca d1
2 d7 d9 1
db 1 e0 1
e4 1 eb 2
e9 eb 1 f5
1 f9 1 100
2 fe 100 2
f2 107 3 111
112 113 1 115
2 10c 115 1
dd 1 11f 2
11d 11f 1 124
1 126 3 d4
11c 127 1 129
1 12d 2 12b
12d 3 131 132
133 1 135 1
13a c 13f 140
141 142 143 144
145 146 147 148
149 14a 1 139
1 151 3 154
155 156 1 158
1 15d c 162
163 164 165 166
167 168 169 16a
16b 16c 16d 1
15c 1 174 2
177 176 7 85
90 b0 bb 12a
178 17b 1 180
2 182 183 1
185 1 17d 1
18c 2 18e 18f
1 191 1 189
1 198 2 19a
19b 1 19d 1
195 1 1a5 2
1a7 1a8 1 1aa
1 1a2 4 188
194 1a0 1ad 7
14 1c 24 2c
30 33 36 2
1aa 1b3 
1
4
0 
1b4
0
1
14
1
9
0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0
0 0 0 0 
1e 1 0
4 1 0
c 1 0
31 1 0
16 1 0
26 1 0
34 1 0
3 0 1
2e 1 0
0

/
Create Or Replace Function zlTools.f_Reg_Tool wrapped 
0
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
3
8
8106000
1
4
0 
55
2 :e:
1FUNCTION:
1F_REG_TOOL:
1FROM_TEMP_IN:
1NUMBER:
10:
1RETURN:
1T_REG_ROWSET:
1T_RETURN:
1V_CODON:
1VARCHAR2:
136:
1G3J0TR7H594NSYWLAQXC8FEVD6ZKIP2U1BMO:
1N_LOGON:
118:
1N_RECORD:
1E_ENVIRONMENT:
1E_ARTIFICIAL:
1E_UNCHECKED:
1NVL:
1COUNT:
1MOD:
1TO_NUMBER:
1TO_CHAR:
1MIN:
1LOGON_TIME:
1hh24miss:
131:
1+:
11:
1V$SESSION:
1STATUS:
1=:
1ACTIVE:
1USERNAME:
1USER:
1INSTR:
1UPPER:
1PROGRAM:
1VB6:
1>:
1ZL:
1RAISE:
1USER_SOURCE:
1NAME:
1F_REG_AUDIT:
1F_REG_INFO:
1F_REG_FUNC:
1TEXT:
1ZLREGAUDIT:
1<:
13:
1!=:
1SUBSTR:
1||:
1A:
1内容:
1项目:
1授权证章:
1R:
1ZLREGINFO:
1TRANSLATE:
10123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ:
1T_REG_RECORD:
1P:
1序号:
1标题:
1BULK:
1COLLECT:
1授权工具:
1ZLPROGRAMS:
1系统:
1IS NULL:
1功能:
1ZLREGFILE:
1RAISE_APPLICATION_ERROR:
1-:
120101:
1Unallowed Enviroment!:
120102:
1Artificial Interfere!:
120105:
1Unchecked Certificate!:
1OTHERS:
120109:
1Other Unknown Error!:
0

0
0
1f0
2
0 a0 1d 8d 8f a0 51 b0
3d b4 :2 a0 a3 2c 6a a0 1c
a0 b4 2e 81 b0 a3 a0 51
a5 1c 6e 81 b0 a3 a0 51
a5 1c 51 81 b0 a3 a0 51
a5 1c 51 81 b0 8b b0 2a
8b b0 2a 8b b0 2a :2 a0 d2
9f 51 a5 b :4 a0 9f a0 d2
6e a5 b a5 b 51 7e a5
2e 7e 51 b4 2e ac :3 a0 b2
ee a0 7e 6e b4 2e :2 a0 7e
b4 2e a 10 :3 a0 a5 b 6e
a5 b 7e 51 b4 2e :3 a0 a5
b 6e a5 b 7e 51 b4 2e
52 10 5a a 10 ac e5 d0
b2 e9 a0 7e 51 b4 2e :2 a0
62 b7 19 3c a0 d2 9f ac
:2 a0 b2 ee a0 3e :4 6e 5 48
:2 a0 6e a5 b 7e 51 b4 2e
a 10 ac e5 d0 b2 e9 a0
7e 51 b4 2e :2 a0 62 b7 19
3c a0 7e 51 b4 2e :4 a0 7e
51 b4 2e a5 b 7e :2 a0 51
a0 a5 b b4 2e d :2 a0 d2
9f 51 a5 b ac :3 a0 6b ac
:2 a0 b9 b2 ee :2 a0 6b 7e 6e
b4 2e ac d0 eb a0 b9 :2 a0
6b ac :2 a0 b9 b2 ee :2 a0 6b
7e 6e b4 2e ac d0 eb a0
b9 b2 ee :2 a0 6b a0 7e :2 a0
6b 6e a0 a5 b b4 2e ac
e5 d0 b2 e9 a0 7e 51 b4
2e :2 a0 62 b7 19 3c b7 19
3c a0 7e 51 b4 2e a0 4d
:2 a0 6b :2 a0 6b a5 b a0 ac
:3 a0 ac a0 b2 ee a0 7e 6e
b4 2e ac d0 eb a0 b9 :2 a0
ac a0 b2 ee a0 7e b4 2e
ac d0 eb a0 b9 b2 ee :3 a0
6b a5 b a0 7e a0 6b b4
2e ac e5 d0 b2 e9 b7 a0
4d :2 a0 6b :2 a0 6b a5 b a0
ac :3 a0 ac a0 b2 ee a0 7e
6e b4 2e ac d0 eb a0 b9
:2 a0 ac a0 b2 ee a0 7e b4
2e ac d0 eb a0 b9 b2 ee
:3 a0 6b a5 b a0 7e a0 6b
b4 2e ac e5 d0 b2 e9 b7
:2 19 3c :2 a0 65 b7 :2 a0 7e 51
b4 2e 6e a5 57 b7 a6 9
:2 a0 7e 51 b4 2e 6e a5 57
b7 a6 9 :2 a0 7e 51 b4 2e
6e a5 57 b7 a6 9 a0 53
a0 7e 51 b4 2e 6e a5 57
b7 a6 9 a4 a0 b1 11 68
4f 17 b5 
1f0
2
0 3 7 8 24 1d 21 1c
2c 19 31 35 5f 3d 41 45
49 51 55 56 5b 3c 80 6a
39 6e 6f 77 7c 69 9f 8b
66 8f 90 98 9b 8a be aa
87 ae af b7 ba a9 c5 a6
cc cf d6 d7 da e1 e2 e5
e9 ed f1 f4 f7 f8 fa fe
102 106 10a 10d 111 115 11a 11b
11d 11e 120 123 126 127 12c 12f
132 133 138 139 13d 141 145 146
14d 151 154 159 15a 15f 163 167
16a 16b 1 170 175 179 17d 181
182 184 189 18a 18c 18f 192 193
198 19c 1a0 1a4 1a5 1a7 1ac 1ad
1af 1b2 1b5 1b6 1 1bb 1c0 1
1c3 1c8 1c9 1cf 1d3 1d4 1d9 1dd
1e0 1e3 1e4 1e9 1ed 1f1 1f4 1f6
1fa 1fd 201 205 208 209 20d 211
212 219 1 21d 222 227 22c 231
235 238 23c 240 245 246 248 24b
24e 24f 1 254 259 25a 260 264
265 26a 26e 271 274 275 27a 27e
282 285 287 28b 28e 292 295 298
299 29e 2a2 2a6 2aa 2ae 2b1 2b4
2b5 2ba 2bb 2bd 2c0 2c4 2c8 2cb
2cf 2d0 2d2 2d3 2d8 2dc 2e0 2e4
2e8 2eb 2ee 2ef 2f1 2f2 2f6 2fa
2fe 301 302 306 30a 30c 30d 314
318 31c 31f 322 327 328 32d 32e
332 336 33a 33c 340 344 347 348
34c 350 352 353 35a 35e 362 365
368 36d 36e 373 374 378 37c 380
382 383 38a 38e 392 395 399 39c
3a0 3a4 3a7 3ac 3b0 3b1 3b3 3b4
3b9 3ba 3c0 3c4 3c5 3ca 3ce 3d1
3d4 3d5 3da 3de 3e2 3e5 3e7 3eb
3ee 3f0 3f4 3f7 3fb 3fe 401 402
407 40b 40c 410 414 417 41b 41f
422 423 425 429 42a 42e 432 436
437 43b 43c 443 447 44a 44f 450
455 456 45a 45e 462 464 468 46c
46d 471 472 479 47d 480 481 486
487 48b 48f 493 495 496 49d 4a1
4a5 4a9 4ac 4ad 4af 4b3 4b6 4ba
4bd 4be 4c3 4c4 4ca 4ce 4cf 4d4
4d6 4da 4db 4df 4e3 4e6 4ea 4ee
4f1 4f2 4f4 4f8 4f9 4fd 501 505
506 50a 50b 512 516 519 51e 51f
524 525 529 52d 531 533 537 53b
53c 540 541 548 54c 54f 550 555
556 55a 55e 562 564 565 56c 570
574 578 57b 57c 57e 582 585 589
58c 58d 592 593 599 59d 59e 5a3
5a5 5a9 5ad 5b0 5b4 5b8 5bc 5be
5c2 5c6 5c9 5cc 5cd 5d2 5d7 5d8
5dd 5df 5e0 5e5 5e9 5ed 5f0 5f3
5f4 5f9 5fe 5ff 604 606 607 60c
610 614 617 61a 61b 620 625 626
62b 62d 62e 633 1 637 63b 63e
641 642 647 64c 64d 652 654 655
65a 65e 662 664 670 674 676 67f 
1f0
2
0 :2 1 a 15 25 2f :2 15 14
32 39 3 :2 1 :2 c :3 1c c :2 3
c 15 14 c 1c c :2 3 c
13 12 c 1a c :2 3 c 13
12 c 1a c :a 3 a :3 e 18
:2 a 1c 20 2a :2 32 36 32 43
:2 2a :2 20 51 :3 1c 55 57 :2 1c a
8 12 8 3 8 9 10 12
:2 10 1f 2a :3 28 :2 9 34 3a 40
:2 3a 4a :2 34 51 53 :2 51 58 5e
64 :2 5e 6e :2 58 74 76 :2 74 :2 34
33 :2 9 :5 3 6 f 11 :2 f 5
b 5 13 :2 3 :4 a :2 8 3 8
:2 9 12 21 2f 3d :2 9 4f 55
5b :2 4f 69 6b :2 69 :2 9 :5 3 6
f 11 :2 f 5 b 5 13 :2 3
6 13 16 :2 13 5 10 17 20
28 2a :2 20 :2 10 2d 30 37 40
43 :2 30 :2 10 5 c :3 10 1a :3 c
a 12 :2 14 12 20 2b 20 1b
20 33 :2 35 3c 3e :2 3c 1b b
a 4a a 12 :2 14 12 20 2a
20 1b 20 32 :2 34 3b 3d :2 3b
1b b a 49 a 5 a b
:2 d 16 14 20 :2 22 2a 52 :2 16
:2 14 :5 5 8 11 13 :2 11 7 d
7 15 :2 5 18 :2 3 6 13 16
:2 13 c 19 1f :2 21 29 :2 2b :2 c
33 c 38 a :2 12 1e 19 1e
2e 35 37 :2 35 19 b a 43
a 12 1a 12 26 21 26 :4 37
21 b a 47 a 5 a b
15 :2 17 :2 b 21 1f :2 23 :2 1f :5 5
18 c 19 1f :2 21 29 :2 2b :2 c
33 c 38 a :2 12 1e 19 1e
2e 35 37 :2 35 19 b a 43
a 12 1a 12 26 21 26 :4 37
21 b a 47 a 5 a b
15 :2 17 :2 b 21 1f :2 23 :2 1f :5 5
:5 3 a 3 1 8 5 1d 1e
:2 1d 25 :2 5 16 :2 3 8 5 1d
1e :2 1d 25 :2 5 15 :2 3 8 5
1d 1e :2 1d 25 :2 5 14 :2 3 :2 8
5 1d 1e :2 1d 25 :2 5 f :2 3
1 5 :6 1 
1f0
2
0 :b 1 5 :2 1 :7 5 :8 7 :8 8 :8 9
:3 b :3 c :3 d :1c 10 :2 11 :3 12 :29 13 12
:4 10 :5 14 :3 15 :3 14 :4 19 1a :3 1b :13 1c
1b :4 19 :5 1d :3 1e :3 1d :5 22 :14 23 :8 24
25 :15 26 :15 27 :2 26 :e 28 26 :4 24 :5 29
:3 2a :3 29 :3 22 :5 2f :d 30 31 :f 32 :f 33
:2 32 :c 34 32 :4 30 2f :d 36 37 :f 38
:f 39 :2 38 :c 3a 38 :4 36 :2 35 :2 2f :3 3c
e 3f :8 40 :3 3f 41 :8 42 :3 41 43
:8 44 :3 43 :2 45 :8 46 :3 45 3e 47 :3 1
47 :2 1 
681
4
:3 0 1 :4 0 2
:a 0 1ec 1 :4 0
5 :2 0 3 4
:3 0 5 :2 0 3
:7 0 7 5 6
:2 0 6 :3 0 7
:3 0 b :2 0 7
9 b 0 1ec
3 d :2 0 7
:3 0 f :7 0 7
:4 0 11 12 :3 0
15 10 13 1ea
8 :6 0 e :2 0
b a :3 0 9
17 19 :6 0 c
:4 0 1d 1a 1b
1ea 9 :6 0 e
:2 0 f 4 :3 0
d 1f 21 :6 0
5 :2 0 25 22
23 1ea d :6 0
15 :2 0 13 4
:3 0 11 27 29
:6 0 5 :2 0 2d
2a 2b 1ea f
:6 0 10 :6 0 2f
0 1ea 11 :6 0
17 32 0 1ea
12 :6 0 19 35
0 1ea 13 :3 0
14 :3 0 3a :3 0
14 :2 0 5 :2 0
1b 37 3c 15
:3 0 16 :3 0 17
:3 0 18 :3 0 18
:2 0 19 :3 0 42
0 43 0 1a
:4 0 1e 40 46
21 3f 48 1b
:2 0 15 :2 0 23
4b 4c :3 0 1c
:2 0 1d :2 0 26
4e 50 :3 0 29
f :3 0 d :3 0
1e :3 0 2c 56
80 0 81 :3 0
1f :3 0 20 :2 0
21 :4 0 30 59
5b :3 0 22 :3 0
23 :3 0 20 :2 0
35 5f 60 :3 0
5c 62 61 :2 0
24 :3 0 25 :3 0
26 :3 0 38 65
67 27 :4 0 3a
64 6a 28 :2 0
5 :2 0 3f 6c
6e :3 0 24 :3 0
25 :3 0 26 :3 0
42 71 73 29
:4 0 44 70 76
28 :2 0 5 :2 0
49 78 7a :3 0
6f 7c 7b :2 0
7d :2 0 63 7f
7e :3 0 83 84
:5 0 52 57 0
4c 0 82 :2 0
1b6 f :3 0 20
:2 0 5 :2 0 51
87 89 :3 0 2a
:3 0 10 :3 0 8c
0 8e 54 8f
8a 8e 0 90
56 0 1b6 14
:3 0 93 :3 0 14
:2 0 58 f :3 0
2b :3 0 5a 97
ab 0 ac :3 0
2c :3 0 2d :4 0
2e :4 0 2 :4 0
2f :4 0 5c :3 0
99 9a 9f 24
:3 0 30 :3 0 31
:4 0 61 a1 a4
28 :2 0 5 :2 0
66 a6 a8 :3 0
a0 aa a9 :3 0
ae af :5 0 94
98 0 69 0
ad :2 0 1b6 f
:3 0 32 :2 0 33
:2 0 6d b2 b4
:3 0 2a :3 0 11
:3 0 b7 0 b9
70 ba b5 b9
0 bb 72 0
1b6 3 :3 0 34
:2 0 1d :2 0 76
bd bf :3 0 9
:3 0 35 :3 0 9
:3 0 d :3 0 1c
:2 0 1d :2 0 79
c5 c7 :3 0 7c
c2 c9 36 :2 0
35 :3 0 9 :3 0
1d :2 0 d :3 0
7f cc d0 83
cb d2 :3 0 c1
d3 0 128 13
:3 0 14 :3 0 d8
:3 0 14 :2 0 5
:2 0 86 d5 da
89 f :3 0 37
:3 0 38 :2 0 1
de df 0 8b
31 :3 0 37 :3 0
e2 e3 8d e5
ed 0 ee :3 0
37 :3 0 39 :2 0
1 e7 e8 0
20 :2 0 3a :4 0
91 ea ec :5 0
e1 e6 0 ef
:3 0 37 :3 0 f0
f1 3b :3 0 38
:2 0 1 f3 f4
0 94 3c :3 0
3b :3 0 f7 f8
96 fa 102 0
103 :3 0 3b :3 0
39 :2 0 1 fc
fd 0 20 :2 0
3a :4 0 9a ff
101 :5 0 f6 fb
0 104 :3 0 3b
:3 0 105 106 9d
108 117 0 118
:3 0 37 :3 0 38
:2 0 1 10a 10b
0 3d :3 0 20
:2 0 3b :3 0 38
:2 0 1 10f 110
0 3e :4 0 9
:3 0 a0 10d 114
a6 10e 116 :4 0
11a 11b :5 0 dc
109 0 a9 0
119 :2 0 128 f
:3 0 20 :2 0 5
:2 0 ad 11e 120
:3 0 2a :3 0 12
:3 0 123 0 125
b0 126 121 125
0 127 b2 0
128 b4 129 c0
128 0 12a b8
0 1b6 3 :3 0
34 :2 0 1d :2 0
bc 12c 12e :3 0
3f :4 0 40 :3 0
41 :2 0 1 132
133 0 40 :3 0
42 :2 0 1 135
136 0 bf 130
138 43 :3 0 c3
44 :3 0 8 :3 0
38 :2 0 1 c5
3c :3 0 c7 141
147 0 148 :3 0
39 :2 0 1 20
:2 0 45 :4 0 cb
144 146 :5 0 13f
142 0 149 :3 0
3b :3 0 14a 14b
41 :2 0 1 42
:2 0 1 ce 46
:3 0 d1 151 156
0 157 :3 0 47
:2 0 1 48 :2 0
d3 154 155 :5 0
14f 152 0 158
:3 0 40 :3 0 159
15a d5 15c 169
0 16a :3 0 16
:3 0 3b :3 0 38
:2 0 1 15f 160
0 d8 15e 162
40 :3 0 20 :2 0
41 :2 0 1 164
166 0 dc 165
168 :4 0 16c 16d
:3 0 1 0 13b
15d 0 df 0
16b :2 0 16f e1
1b1 3f :4 0 40
:3 0 41 :2 0 1
172 173 0 40
:3 0 42 :2 0 1
175 176 0 e3
170 178 43 :3 0
e7 44 :3 0 8
:3 0 49 :2 0 1
e9 4a :3 0 eb
181 187 0 188
:3 0 39 :2 0 1
20 :2 0 45 :4 0
ef 184 186 :5 0
17f 182 0 189
:3 0 3b :3 0 18a
18b 41 :2 0 1
42 :2 0 1 f2
46 :3 0 f5 191
196 0 197 :3 0
47 :2 0 1 48
:2 0 f7 194 195
:5 0 18f 192 0
198 :3 0 40 :3 0
199 19a f9 19c
1a9 0 1aa :3 0
16 :3 0 3b :3 0
49 :2 0 1 19f
1a0 0 fc 19e
1a2 40 :3 0 20
:2 0 41 :2 0 1
1a4 1a6 0 100
1a5 1a8 :4 0 1ac
1ad :3 0 1 0
17b 19d 0 103
0 1ab :2 0 1af
105 1b0 0 1af
0 1b2 12f 16f
0 1b2 107 0
1b6 6 :3 0 8
:3 0 1b4 :2 0 1b6
10a 1eb 10 :3 0
4b :3 0 4c :2 0
4d :2 0 112 1b9
1bb :3 0 4e :4 0
114 1b8 1be :2 0
1c0 117 1c2 119
1c1 1c0 :2 0 1e8
11 :3 0 4b :3 0
4c :2 0 4f :2 0
11b 1c5 1c7 :3 0
50 :4 0 11d 1c4
1ca :2 0 1cc 120
1ce 122 1cd 1cc
:2 0 1e8 12 :3 0
4b :3 0 4c :2 0
51 :2 0 124 1d1
1d3 :3 0 52 :4 0
126 1d0 1d6 :2 0
1d8 129 1da 12b
1d9 1d8 :2 0 1e8
53 :3 0 4b :3 0
4c :2 0 54 :2 0
12d 1de 1e0 :3 0
55 :4 0 12f 1dd
1e3 :2 0 1e5 143
1e7 134 1e6 1e5
:2 0 1e8 136 :2 0
1eb 2 :3 0 13b
1eb 1ea 1b6 1e8
:6 0 1ec :2 0 3
d 1eb 1ee :2 0
2 1ec 1ef :8 0

146
4
:3 0 1 4 1
8 1 c 1
18 1 16 1
20 1 1e 1
28 1 26 1
2e 1 31 1
34 2 39 3b
2 44 45 1
47 2 49 4a
2 4d 4f 2
3d 51 1 55
1 5a 2 58
5a 1 5e 2
5d 5e 1 66
2 68 69 1
6d 2 6b 6d
1 72 2 74
75 1 79 2
77 79 2 53
54 1 88 2
86 88 1 8d
1 8f 1 92
1 96 4 9b
9c 9d 9e 2
a2 a3 1 a7
2 a5 a7 1
95 1 b3 2
b1 b3 1 b8
1 ba 1 be
2 bc be 2
c4 c6 2 c3
c8 3 cd ce
cf 2 ca d1
2 d7 d9 1
db 1 e0 1
e4 1 eb 2
e9 eb 1 f5
1 f9 1 100
2 fe 100 2
f2 107 3 111
112 113 1 115
2 10c 115 1
dd 1 11f 2
11d 11f 1 124
1 126 3 d4
11c 127 1 129
1 12d 2 12b
12d 3 131 134
137 1 139 1
13e 1 140 1
145 2 143 145
2 14d 14e 1
150 1 153 2
14c 15b 1 161
1 167 2 163
167 1 13d 1
16e 3 171 174
177 1 179 1
17e 1 180 1
185 2 183 185
2 18d 18e 1
190 1 193 2
18c 19b 1 1a1
1 1a7 2 1a3
1a7 1 17d 1
1ae 2 1b1 1b0
7 85 90 b0
bb 12a 1b2 1b5
1 1ba 2 1bc
1bd 1 1bf 1
1b7 1 1c6 2
1c8 1c9 1 1cb
1 1c3 1 1d2
2 1d4 1d5 1
1d7 1 1cf 1
1df 2 1e1 1e2
1 1e4 1 1dc
4 1c2 1ce 1da
1e7 7 14 1c
24 2c 30 33
36 2 1e4 1ed

1
4
0 
1ee
0
1
14
1
9
0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0
0 0 0 0 
1e 1 0
4 1 0
c 1 0
31 1 0
16 1 0
26 1 0
34 1 0
3 0 1
2e 1 0
0

/
Create Or Replace Function zlTools.f_Reg_Func wrapped 
0
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
3
8
8106000
1
4
0 
73
2 :e:
1FUNCTION:
1F_REG_FUNC:
1SYS_NO_IN:
1ZLPROGRAMS:
1系统:
1TYPE:
1PROG_NO_IN:
1序号:
1RETURN:
1T_REG_ROWSET:
1T_RETURN:
1V_CODON:
1VARCHAR2:
136:
1G3J0TR7H594NSYWLAQXC8FEVD6ZKIP2U1BMO:
1N_LOGON:
1NUMBER:
118:
10:
1N_RECORD:
1N_DEBUG:
11:
1N_IS_DBA:
1E_ENVIRONMENT:
1E_ARTIFICIAL:
1E_UNCHECKED:
1NVL:
1COUNT:
1MIN:
1SIGN:
1INSTR:
1UPPER:
1PROGRAM:
1VB6:
1MOD:
1TO_NUMBER:
1TO_CHAR:
1LOGON_TIME:
1hh24miss:
131:
1+:
1V$SESSION:
1STATUS:
1=:
1ACTIVE:
1USERNAME:
1USER:
1>:
1ZL:
1RAISE:
1USER_SOURCE:
1NAME:
1F_REG_AUDIT:
1F_REG_INFO:
1F_REG_TOOL:
1TEXT:
1ZLREGAUDIT:
1<:
14:
1SUBSTR:
1||:
1A:
1内容:
1项目:
1授权证章:
1R:
1ZLREGINFO:
1TRANSLATE:
10123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ:
1SYS:
1DBA_ROLE_PRIVS:
1GRANTEE:
1GRANTED_ROLE:
1DBA:
1T_REG_RECORD:
1G:
1功能:
1BULK:
1COLLECT:
1ZLROLEGRANT:
1角色:
1IS NULL:
1F:
1ZLPROGFUNCS:
1S:
1编号:
1ZLSYSTEMS:
1所有者:
1!=:
1R_YES:
1P:
1P_YES:
1ZLREGFUNC:
1TRUNC:
1/:
1100:
1ZLREPORTS:
1B:
1ZLRPTPUTS:
1报表ID:
1ID:
1程序ID:
1(+):
1IS NOT NULL:
1RAISE_APPLICATION_ERROR:
1-:
120101:
1Unallowed Enviroment!:
120102:
1Artificial Interfere!:
120105:
1Unchecked Certificate!:
1OTHERS:
120109:
1Other Unknown Error!:
0

0
0
3fa
2
0 a0 1d 8d 8f :2 a0 6b :2 a0
f 4d b0 3d 8f :2 a0 6b :2 a0
f 4d b0 3d b4 :2 a0 a3 2c
6a a0 1c a0 b4 2e 81 b0
a3 a0 51 a5 1c 6e 81 b0
a3 a0 51 a5 1c 51 81 b0
a3 a0 51 a5 1c 51 81 b0
a3 a0 51 a5 1c 51 81 b0
a3 a0 51 a5 1c 51 81 b0
8b b0 2a 8b b0 2a 8b b0
2a :2 a0 d2 9f 51 a5 b a0
9f :4 a0 a5 b 6e a5 b a5
b d2 :4 a0 9f a0 d2 6e a5
b a5 b 51 7e a5 2e 7e
51 b4 2e ac :4 a0 b2 ee a0
7e 6e b4 2e :2 a0 7e b4 2e
a 10 :3 a0 a5 b 6e a5 b
7e 51 b4 2e :3 a0 a5 b 6e
a5 b 7e 51 b4 2e 52 10
5a a 10 ac e5 d0 b2 e9
a0 7e 51 b4 2e :2 a0 62 b7
19 3c :2 a0 d2 9f 51 a5 b
ac :2 a0 b2 ee a0 3e :4 6e 5
48 :2 a0 6e a5 b 7e 51 b4
2e a 10 ac e5 d0 b2 e9
a0 7e 51 b4 2e :2 a0 62 b7
19 3c :4 a0 7e 51 b4 2e a5
b 7e :2 a0 51 a0 a5 b b4
2e d :2 a0 d2 9f 51 a5 b
ac :3 a0 6b ac :2 a0 b9 b2 ee
:2 a0 6b 7e 6e b4 2e ac d0
eb a0 b9 :2 a0 6b ac :2 a0 b9
b2 ee :2 a0 6b 7e 6e b4 2e
ac d0 eb a0 b9 b2 ee :2 a0
6b a0 7e :2 a0 6b 6e a0 a5
b b4 2e ac e5 d0 b2 e9
a0 7e 51 b4 2e :2 a0 62 b7
19 3c :2 a0 d2 9f 51 a5 b
ac :3 a0 6b b2 ee :2 a0 7e b4
2e a0 7e 6e b4 2e a 10
ac e5 d0 b2 e9 :2 a0 51 a5
b 7e 51 b4 2e :5 a0 6b a5
b a0 ac :4 a0 6b ac :2 a0 b9
:2 a0 6b a0 b9 b2 ee :2 a0 6b
a0 7e b4 2e :2 a0 6b a0 7e
a0 6b b4 2e a 10 :2 a0 6b
7e b4 2e a 10 :2 a0 6b a0
7e b4 2e a 10 ac d0 :2 a0
6b ac :2 a0 b9 :2 a0 6b ac :2 a0
b9 b2 ee :3 a0 6b a5 b a0
7e b4 2e a0 7e 51 b4 2e
52 10 ac d0 eb a0 b9 b2
ee :2 a0 6b 7e b4 2e :2 a0 6b
a0 7e b4 2e a 10 ac d0
bb eb a0 b9 b2 ee ac e5
d0 b2 e9 b7 a0 7e 51 b4
2e :5 a0 6b a5 b a0 ac :4 a0
6b ac :2 a0 b9 :2 a0 6b a0 b9
b2 ee :2 a0 6b a0 7e b4 2e
:2 a0 6b a0 7e a0 6b b4 2e
a 10 :2 a0 6b a0 7e b4 2e
a 10 :2 a0 6b a0 7e b4 2e
a 10 ac d0 :2 a0 6b ac :2 a0
b9 :2 a0 6b ac :2 a0 b9 b2 ee
:3 a0 6b a5 b a0 7e b4 2e
a0 7e 51 b4 2e 52 10 ac
d0 eb a0 b9 b2 ee :2 a0 6b
a0 7e a0 6b b4 2e :2 a0 6b
a0 7e b4 2e a 10 :2 a0 6b
a0 7e b4 2e a 10 ac d0
bb eb a0 b9 b2 ee ac e5
d0 b2 e9 b7 :4 a0 a5 b a0
ac :4 a0 6b :2 a0 6b a0 b9 :2 a0
6b a0 b9 ac :2 a0 6b ac :2 a0
b9 :2 a0 6b a0 b9 b2 ee :2 a0
6b a0 7e b4 2e :2 a0 6b a0
7e a0 6b b4 2e a 10 :2 a0
6b a0 7e b4 2e a 10 :2 a0
6b a0 7e b4 2e a 10 ac
d0 :2 a0 6b ac :2 a0 b9 :2 a0 6b
ac :2 a0 b9 b2 ee :3 a0 6b a5
b a0 7e b4 2e a0 7e 51
b4 2e 52 10 ac d0 eb a0
b9 b2 ee :2 a0 6b a0 7e a0
6b b4 2e :2 a0 6b a0 7e b4
2e a 10 :2 a0 6b a0 7e b4
2e a 10 ac d0 bb eb a0
b9 :2 a0 6b ac :2 a0 b9 b2 ee
:2 a0 6b a0 7e a0 7e 51 b4
2e a5 b b4 2e :2 a0 6b a0
7e b4 2e a 10 ac d0 eb
a0 b9 :2 a0 6b ac :2 a0 b9 :2 a0
b9 b2 ee :2 a0 6b a0 7e a0
6b b4 2e :2 a0 6b 7e b4 2e
a 10 :2 a0 6b a0 7e b4 2e
a 10 :2 a0 6b a0 7e b4 2e
a 10 ac d0 eb a0 b9 b2
ee :2 a0 6b a0 7e a0 6b 7e
b4 2e b4 2e :2 a0 6b a0 7e
a0 6b 7e b4 2e b4 2e a
10 ac d0 eb b2 ee a0 7e
b4 2e a0 7e b4 2e 52 10
ac e5 d0 b2 e9 b7 :2 19 3c
b7 :2 19 3c :2 a0 65 b7 :2 a0 7e
51 b4 2e 6e a5 57 b7 a6
9 :2 a0 7e 51 b4 2e 6e a5
57 b7 a6 9 :2 a0 7e 51 b4
2e 6e a5 57 b7 a6 9 a0
53 a0 7e 51 b4 2e 6e a5
57 b7 a6 9 a4 a0 b1 11
68 4f 17 b5 
3fa
2
0 3 7 8 36 1d 21 25
28 2c 30 35 1c 3e 5d 47
4b 19 4f 53 57 5c 46 65
43 6a 6e 98 76 7a 7e 82
8a 8e 8f 94 75 b9 a3 72
a7 a8 b0 b5 a2 d8 c4 9f
c8 c9 d1 d4 c3 f7 e3 c0
e7 e8 f0 f3 e2 116 102 df
106 107 10f 112 101 135 121 fe
125 126 12e 131 120 13c 11d 143
146 14d 14e 151 158 159 15c 160
164 168 16b 16e 16f 171 175 178
17c 180 184 188 189 18b 190 191
193 194 196 19a 19e 1a2 1a6 1aa
1ad 1b1 1b5 1ba 1bb 1bd 1be 1c0
1c3 1c6 1c7 1cc 1cf 1d2 1d3 1d8
1d9 1dd 1e1 1e5 1e9 1ea 1f1 1f5
1f8 1fd 1fe 203 207 20b 20e 20f
1 214 219 21d 221 225 226 228
22d 22e 230 233 236 237 23c 240
244 248 249 24b 250 251 253 256
259 25a 1 25f 264 1 267 26c
26d 273 277 278 27d 281 284 287
288 28d 291 295 298 29a 29e 2a1
2a5 2a9 2ad 2b0 2b3 2b4 2b6 2b7
2bb 2bf 2c0 2c7 1 2cb 2d0 2d5
2da 2df 2e3 2e6 2ea 2ee 2f3 2f4
2f6 2f9 2fc 2fd 1 302 307 308
30e 312 313 318 31c 31f 322 323
328 32c 330 333 335 339 33c 340
344 348 34c 34f 352 353 358 359
35b 35e 362 366 369 36d 36e 370
371 376 37a 37e 382 386 389 38c
38d 38f 390 394 398 39c 39f 3a0
3a4 3a8 3aa 3ab 3b2 3b6 3ba 3bd
3c0 3c5 3c6 3cb 3cc 3d0 3d4 3d8
3da 3de 3e2 3e5 3e6 3ea 3ee 3f0
3f1 3f8 3fc 400 403 406 40b 40c
411 412 416 41a 41e 420 421 428
42c 430 433 437 43a 43e 442 445
44a 44e 44f 451 452 457 458 45e
462 463 468 46c 46f 472 473 478
47c 480 483 485 489 48c 490 494
498 49b 49e 49f 4a1 4a2 4a6 4aa
4ae 4b1 4b2 4b9 4bd 4c1 4c4 4c5
4ca 4ce 4d1 4d6 4d7 1 4dc 4e1
4e2 4e8 4ec 4ed 4f2 4f6 4fa 4fd
4fe 500 503 506 507 50c 510 514
518 51c 520 523 524 526 52a 52b
52f 533 537 53b 53e 53f 543 547
549 54d 551 554 558 55a 55b 562
566 56a 56d 571 574 575 57a 57e
582 585 589 58c 590 593 594 1
599 59e 5a2 5a6 5a9 5ac 5ad 1
5b2 5b7 5bb 5bf 5c2 5c6 5c9 5ca
1 5cf 5d4 5d5 5d9 5dd 5e1 5e4
5e5 5e9 5ed 5ef 5f3 5f7 5fa 5fb
5ff 603 605 606 60d 611 615 619
61c 61d 61f 623 626 627 62c 630
633 636 637 1 63c 641 642 646
64a 64e 650 651 658 65c 660 663
666 667 66c 670 674 677 67b 67e
67f 1 684 689 68a 68e 691 695
699 69b 69c 6a3 6a4 6aa 6ae 6af
6b4 6b6 6ba 6bd 6c0 6c1 6c6 6ca
6ce 6d2 6d6 6da 6dd 6de 6e0 6e4
6e5 6e9 6ed 6f1 6f5 6f8 6f9 6fd
701 703 707 70b 70e 712 714 715
71c 720 724 727 72b 72e 72f 734
738 73c 73f 743 746 74a 74d 74e
1 753 758 75c 760 763 767 76a
76b 1 770 775 779 77d 780 784
787 788 1 78d 792 793 797 79b
79f 7a2 7a3 7a7 7ab 7ad 7b1 7b5
7b8 7b9 7bd 7c1 7c3 7c4 7cb 7cf
7d3 7d7 7da 7db 7dd 7e1 7e4 7e5
7ea 7ee 7f1 7f4 7f5 1 7fa 7ff
800 804 808 80c 80e 80f 816 81a
81e 821 825 828 82c 82f 830 835
839 83d 840 844 847 848 1 84d
852 856 85a 85d 861 864 865 1
86a 86f 870 874 877 87b 87f 881
882 889 88a 890 894 895 89a 89c
8a0 8a4 8a8 8ac 8ad 8af 8b3 8b4
8b8 8bc 8c0 8c4 8c7 8cb 8cf 8d2
8d6 8d8 8dc 8e0 8e3 8e7 8e9 8ea
8ee 8f2 8f5 8f6 8fa 8fe 900 904
908 90b 90f 911 912 919 91d 921
924 928 92b 92c 931 935 939 93c
940 943 947 94a 94b 1 950 955
959 95d 960 964 967 968 1 96d
972 976 97a 97d 981 984 985 1
98a 98f 990 994 998 99c 99f 9a0
9a4 9a8 9aa 9ae 9b2 9b5 9b6 9ba
9be 9c0 9c1 9c8 9cc 9d0 9d4 9d7
9d8 9da 9de 9e1 9e2 9e7 9eb 9ee
9f1 9f2 1 9f7 9fc 9fd a01 a05
a09 a0b a0c a13 a17 a1b a1e a22
a25 a29 a2c a2d a32 a36 a3a a3d
a41 a44 a45 1 a4a a4f a53 a57
a5a a5e a61 a62 1 a67 a6c a6d
a71 a74 a78 a7c a7e a82 a86 a89
a8a a8e a92 a94 a95 a9c aa0 aa4
aa7 aab aae ab2 ab5 ab8 ab9 abe
abf ac1 ac2 ac7 acb acf ad2 ad6
ad9 ada 1 adf ae4 ae5 ae9 aed
af1 af3 af7 afb afe aff b03 b07
b09 b0d b11 b13 b14 b1b b1f b23
b26 b2a b2d b31 b34 b35 b3a b3e
b42 b45 b48 b49 1 b4e b53 b57
b5b b5e b62 b65 b66 1 b6b b70
b74 b78 b7b b7f b82 b83 1 b88
b8d b8e b92 b96 b9a b9c b9d ba4
ba8 bac baf bb3 bb6 bba bbd bc0
bc1 bc6 bc7 bcc bd0 bd4 bd7 bdb
bde be2 be5 be8 be9 bee bef 1
bf4 bf9 bfa bfe c02 c03 c0a c0e
c11 c12 c17 c1b c1e c1f 1 c24
c29 c2a c30 c34 c35 c3a c3c c40
c44 c47 c49 c4d c51 c54 c58 c5c
c60 c62 c66 c6a c6d c70 c71 c76
c7b c7c c81 c83 c84 c89 c8d c91
c94 c97 c98 c9d ca2 ca3 ca8 caa
cab cb0 cb4 cb8 cbb cbe cbf cc4
cc9 cca ccf cd1 cd2 cd7 1 cdb
cdf ce2 ce5 ce6 ceb cf0 cf1 cf6
cf8 cf9 cfe d02 d06 d08 d14 d18
d1a d23 
3fa
2
0 :2 1 a 3 11 1c 11 :2 23
11 2b :3 3 11 1c 11 :2 23 11
2b :2 3 1 3 a 3 :2 1 :2 c
:3 1c c :2 3 c 15 14 c 1c
c :2 3 c 13 12 c 1a c
:2 3 c 13 12 c 1a c :2 3
c 13 12 c 19 c :2 3 c
13 12 c 19 c :a 3 a :3 e
18 :2 a :2 1c 20 25 2b 31 :2 2b
3b :2 25 :2 20 1c a e 18 :2 20
24 20 31 :2 18 :2 e 3f :3 a 43
45 :3 a 8 12 1b 8 3 8
9 10 12 :2 10 1f 2a :3 28 :2 9
34 3a 40 :2 3a 4a :2 34 51 53
:2 51 58 5e 64 :2 5e 6e :2 58 74
76 :2 74 :2 34 33 :2 9 :5 3 6 f
11 :2 f 5 b 5 13 :2 3 a
:3 e 18 :3 a :2 8 3 8 :2 9 12
21 2f 3d :2 9 4f 55 5b :2 4f
69 6b :2 69 :2 9 :5 3 6 f 11
:2 f 5 b 5 13 :3 3 e 15
1e 26 28 :2 1e :2 e 2b 2e 35
3e 41 :2 2e :2 e 3 a :3 e 18
:3 a 8 10 :2 12 10 1e 29 1e
19 1e 31 :2 33 3a 3c :2 3a 19
9 8 48 8 10 :2 12 10 1e
28 1e 19 1e 30 :2 32 39 3b
:2 39 19 9 8 47 8 3 8
9 :2 b 14 12 1e :2 20 28 50
:2 14 :2 12 :5 3 6 f 11 :2 f 5
b 5 13 :2 3 a :3 e 18 :3 a
20 2e 32 2e 29 2e 47 51
:3 4f 5a 67 69 :2 67 :2 47 29 :4 3
6 a 15 :2 6 18 1a :2 18 c
19 24 30 :2 32 :2 c 3a c 3f
a 12 :2 14 12 11 1d 11 20
24 20 33 20 c 11 12 :2 14
1e :3 1c 27 :2 29 32 30 :2 34 :2 30
:2 12 45 :2 47 :3 45 :2 12 5a :2 5c 65
:3 63 :2 12 c b 13 :2 15 13 11
1d 11 28 :2 2a 28 36 40 36
31 36 48 4e :2 50 :2 48 5c :3 5a
64 6d 70 :2 6d :2 48 31 21 20
73 20 c 11 12 :2 14 :3 12 27
:2 29 32 :3 30 :2 12 :3 c a 3e a
5 a :5 5 1c 8 10 13 :2 10
e 1b 26 32 :2 34 :2 e 3c e
41 c 14 :2 16 14 13 1f 13
22 26 22 35 22 e 13 14
:2 16 20 :3 1e 29 :2 2b 34 32 :2 36
:2 32 :2 14 47 :2 49 52 :3 50 :2 14 60
:2 62 6b :3 69 :2 14 e d 15 :2 17
15 13 1f 13 2a :2 2c 2a 38
42 38 33 38 4a 50 :2 52 :2 4a
5e :3 5c 66 6f 72 :2 6f :2 4a 33
23 22 75 22 e 13 14 :2 16
1f 1d :2 21 :2 1d 2c :2 2e 37 :3 35
:2 14 45 :2 47 50 :3 4e :2 14 :3 e c
5c c 7 c :5 7 15 e 1b
26 32 :2 e 3a e 3f c 14
:2 16 1e :2 20 2a 1e 31 :2 33 3d
31 14 1b :2 1d 1b 1a 26 1a
29 2d 29 3c 29 15 1a 1b
:2 1d 27 :3 25 30 :2 32 3b 39 :2 3d
:2 39 :2 1b 4e :2 50 59 :3 57 :2 1b 67
:2 69 72 :3 70 :2 1b 15 14 1c :2 1e
1c 1a 26 1a 31 :2 33 31 3f
49 3f 3a 3f 51 57 :2 59 :2 51
65 :3 63 6d 76 79 :2 76 :2 51 3a
2a 29 7c 29 15 1a 1b :2 1d
26 24 :2 28 :2 24 33 :2 35 3e :3 3c
:2 1b 4c :2 4e 57 :3 55 :2 1b :3 15 13
63 13 1b :2 1d 1b 29 33 29
24 29 3b :2 3d 46 44 4c 56
58 :2 4c :2 46 :2 44 61 :2 63 6c :3 6a
:2 3b 24 14 13 78 13 1b :2 1d
1b 1a 24 1a 27 31 27 15
1a 1b :2 1d 28 26 :2 2a :2 26 31
:2 33 :3 31 :2 1b 46 :2 48 51 :3 4f :2 1b
5f :2 61 6c :3 6a :2 1b 15 14 13
78 13 e 13 14 :2 16 1f 1d
:2 21 :3 1f :2 1d 2f :2 31 3a 38 :2 3c
:3 3a :2 38 :2 14 e d c 7 c
:4 d :4 22 :2 d :5 7 :4 5 :5 3 a 3
1 8 5 1d 1e :2 1d 25 :2 5
16 :2 3 8 5 1d 1e :2 1d 25
:2 5 15 :2 3 8 5 1d 1e :2 1d
25 :2 5 14 :2 3 :2 8 5 1d 1e
:2 1d 25 :2 5 f :2 3 1 5 :6 1

3fa
2
0 :3 1 :a 3 :a 4 2 :2 5 a :2 1
:7 a :8 c :8 d :8 e :8 f :8 10 :3 12 :3 13
:3 14 :15 17 :14 18 17 :3 19 :3 1a :29 1b 1a
:4 17 :5 1c :3 1d :3 1c :8 21 22 :3 23 :13 24
23 :4 21 :5 25 :3 26 :3 25 :14 2a :8 2b 2c
:15 2d :15 2e :2 2d :e 2f 2d :4 2b :5 30 :3 31
:3 30 :1f 35 :9 36 :b 37 38 :4 39 :a 3a :23 3b
3a 39 :4 3d :24 3e :f 3f 3e 3d 3c
39 3f :4 39 :4 37 36 :5 41 :b 42 43
:4 44 :a 45 :24 46 45 44 :4 48 :24 49 :1b 4a
49 48 47 44 4a :4 44 :4 42 41
:9 4c 4d :e 4e :4 4f :a 50 :24 51 50 4f
:4 53 :24 54 :1b 55 54 53 52 4f 55
4f :25 56 :4 57 :8 58 :23 59 58 :2 57 59
57 :2 4f :1a 5a 4f :4 4e :a 5b 4e :4 4c
:2 4b :2 41 :2 40 :2 36 :3 5e 15 61 :8 62
:3 61 63 :8 64 :3 63 65 :8 66 :3 65 :2 67
:8 68 :3 67 60 69 :3 1 69 :2 1 
d25
4
:3 0 1 :4 0 2
:a 0 3f6 1 :4 0
f 10 0 3
4 :3 0 5 :2 0
:2 5 6 0 6
:3 0 6 :2 0 1
7 9 :4 0 3
:7 0 c a b
:2 0 7 :2 0 5
4 :3 0 8 :2 0
5 6 :3 0 6
:2 0 1 11 13
:4 0 7 :7 0 16
14 15 :2 0 9
:3 0 a :3 0 e
:2 0 a 18 1a
0 3f6 3 1c
:2 0 a :3 0 1e
:7 0 a :4 0 20
21 :3 0 24 1f
22 3f4 b :6 0
12 :2 0 e d
:3 0 c 26 28
:6 0 f :4 0 2c
29 2a 3f4 c
:6 0 12 :2 0 12
11 :3 0 10 2e
30 :6 0 13 :2 0
34 31 32 3f4
10 :6 0 16 :2 0
16 11 :3 0 14
36 38 :6 0 13
:2 0 3c 39 3a
3f4 14 :6 0 16
:2 0 1a 11 :3 0
18 3e 40 :6 0
13 :2 0 44 41
42 3f4 15 :6 0
20 :2 0 1e 11
:3 0 1c 46 48
:6 0 13 :2 0 4c
49 4a 3f4 17
:6 0 18 :6 0 4e
0 3f4 19 :6 0
22 51 0 3f4
1a :6 0 24 54
0 3f4 1b :3 0
1c :3 0 59 :3 0
1c :2 0 13 :2 0
26 56 5b 1d
:3 0 1d :2 0 1e
:3 0 1f :3 0 20
:3 0 21 :3 0 29
61 63 22 :4 0
2b 60 66 2e
5f 68 5e 0
69 0 23 :3 0
24 :3 0 25 :3 0
1d :3 0 1d :2 0
26 :3 0 6f 0
70 0 27 :4 0
30 6d 73 33
6c 75 28 :2 0
23 :2 0 35 78
79 :3 0 29 :2 0
16 :2 0 38 7b
7d :3 0 3b 14
:3 0 15 :3 0 10
:3 0 2a :3 0 3f
84 ae 0 af
:3 0 2b :3 0 2c
:2 0 2d :4 0 43
87 89 :3 0 2e
:3 0 2f :3 0 2c
:2 0 48 8d 8e
:3 0 8a 90 8f
:2 0 1f :3 0 20
:3 0 21 :3 0 4b
93 95 22 :4 0
4d 92 98 30
:2 0 13 :2 0 52
9a 9c :3 0 1f
:3 0 20 :3 0 21
:3 0 55 9f a1
31 :4 0 57 9e
a4 30 :2 0 13
:2 0 5c a6 a8
:3 0 9d aa a9
:2 0 ab :2 0 91
ad ac :3 0 b1
b2 :5 0 7f 85
0 5f 0 b0
:2 0 3c0 14 :3 0
2c :2 0 13 :2 0
65 b5 b7 :3 0
32 :3 0 18 :3 0
ba 0 bc 68
bd b8 bc 0
be 6a 0 3c0
1b :3 0 1c :3 0
c2 :3 0 1c :2 0
13 :2 0 6c bf
c4 6f 14 :3 0
33 :3 0 71 c9
dd 0 de :3 0
34 :3 0 35 :4 0
36 :4 0 37 :4 0
2 :4 0 73 :3 0
cb cc d1 1f
:3 0 38 :3 0 39
:4 0 78 d3 d6
30 :2 0 13 :2 0
7d d8 da :3 0
d2 dc db :3 0
e0 e1 :5 0 c6
ca 0 80 0
df :2 0 3c0 14
:3 0 3a :2 0 3b
:2 0 84 e4 e6
:3 0 32 :3 0 19
:3 0 e9 0 eb
87 ec e7 eb
0 ed 89 0
3c0 c :3 0 3c
:3 0 c :3 0 10
:3 0 29 :2 0 16
:2 0 8b f2 f4
:3 0 8e ef f6
3d :2 0 3c :3 0
c :3 0 16 :2 0
10 :3 0 91 f9
fd 95 f8 ff
:3 0 ee 100 0
3c0 1b :3 0 1c
:3 0 105 :3 0 1c
:2 0 13 :2 0 98
102 107 9b 14
:3 0 3e :3 0 3f
:2 0 1 10b 10c
0 9d 39 :3 0
3e :3 0 10f 110
9f 112 11a 0
11b :3 0 3e :3 0
40 :2 0 1 114
115 0 2c :2 0
41 :4 0 a3 117
119 :5 0 10e 113
0 11c :3 0 3e
:3 0 11d 11e 42
:3 0 3f :2 0 1
120 121 0 a6
43 :3 0 42 :3 0
124 125 a8 127
12f 0 130 :3 0
42 :3 0 40 :2 0
1 129 12a 0
2c :2 0 41 :4 0
ac 12c 12e :5 0
123 128 0 131
:3 0 42 :3 0 132
133 af 135 144
0 145 :3 0 3e
:3 0 3f :2 0 1
137 138 0 44
:3 0 2c :2 0 42
:3 0 3f :2 0 1
13c 13d 0 45
:4 0 c :3 0 b2
13a 141 b8 13b
143 :4 0 147 148
:5 0 109 136 0
bb 0 146 :2 0
3c0 14 :3 0 2c
:2 0 13 :2 0 bf
14b 14d :3 0 32
:3 0 1a :3 0 150
0 152 c2 153
14e 152 0 154
c4 0 3c0 1b
:3 0 1c :3 0 158
:3 0 1c :2 0 13
:2 0 c6 155 15a
c9 17 :3 0 46
:3 0 47 :2 0 4
15e 15f 0 cb
161 16e 0 16f
:3 0 48 :3 0 2f
:3 0 2c :2 0 cf
165 166 :3 0 49
:3 0 2c :2 0 4a
:4 0 d4 169 16b
:3 0 167 16d 16c
:3 0 171 172 :5 0
15c 162 0 d7
0 170 :2 0 3c0
1b :3 0 3 :3 0
13 :2 0 d9 174
177 2c :2 0 13
:2 0 de 179 17b
:3 0 4b :3 0 3
:3 0 7 :3 0 4c
:3 0 4d :2 0 1
180 181 0 e1
17d 183 4e :3 0
e5 4f :3 0 b
:3 0 4c :3 0 4d
:2 0 1 189 18a
0 e7 50 :3 0
4c :3 0 18d 18e
46 :3 0 47 :2 0
4 190 191 0
42 :3 0 192 193
e9 195 1b9 0
1ba :3 0 42 :3 0
48 :3 0 197 198
0 2f :3 0 2c
:2 0 ee 19b 19c
:3 0 4c :3 0 51
:2 0 1 19e 19f
0 42 :3 0 2c
:2 0 49 :3 0 1a1
1a3 0 f3 1a2
1a5 :3 0 19d 1a7
1a6 :2 0 4c :3 0
5 :2 0 1 1a9
1aa 0 52 :2 0
f6 1ac 1ad :3 0
1a8 1af 1ae :2 0
4c :3 0 8 :2 0
1 1b1 1b2 0
7 :3 0 2c :2 0
fa 1b5 1b6 :3 0
1b0 1b8 1b7 :4 0
18c 196 0 53
:3 0 4d :2 0 1
1bc 1bd 0 fd
54 :3 0 53 :3 0
1c0 1c1 55 :3 0
56 :2 0 1 1c3
1c4 0 ff 57
:3 0 55 :3 0 1c7
1c8 101 1ca 1dc
0 1dd :3 0 20
:3 0 55 :3 0 58
:2 0 1 1cd 1ce
0 103 1cc 1d0
2f :3 0 2c :2 0
107 1d3 1d4 :3 0
17 :3 0 59 :2 0
13 :2 0 10c 1d7
1d9 :3 0 1d5 1db
1da :4 0 1c6 1cb
0 1de :3 0 55
:3 0 1df 1e0 10f
1e2 1f2 0 1f3
:3 0 53 :3 0 5
:2 0 1 1e4 1e5
0 52 :2 0 112
1e7 1e8 :3 0 53
:3 0 8 :2 0 1
1ea 1eb 0 7
:3 0 2c :2 0 116
1ee 1ef :3 0 1e9
1f1 1f0 :4 0 1bf
1e3 0 1bb 1
1f4 1f5 :3 0 4c
:3 0 1f6 1f7 119
1f9 :2 0 1fb :4 0
1fd 1fe :3 0 1
0 186 1fa 0
11b 0 1fc :2 0
200 11d 3bb 15
:3 0 59 :2 0 13
:2 0 121 202 204
:3 0 4b :3 0 3
:3 0 7 :3 0 4c
:3 0 4d :2 0 1
209 20a 0 124
206 20c 4e :3 0
128 4f :3 0 b
:3 0 4c :3 0 4d
:2 0 1 212 213
0 12a 50 :3 0
4c :3 0 216 217
46 :3 0 47 :2 0
4 219 21a 0
42 :3 0 21b 21c
12c 21e 243 0
244 :3 0 42 :3 0
48 :3 0 220 221
0 2f :3 0 2c
:2 0 131 224 225
:3 0 4c :3 0 51
:2 0 1 227 228
0 42 :3 0 2c
:2 0 49 :3 0 22a
22c 0 136 22b
22e :3 0 226 230
22f :2 0 4c :3 0
5 :2 0 1 232
233 0 3 :3 0
2c :2 0 13b 236
237 :3 0 231 239
238 :2 0 4c :3 0
8 :2 0 1 23b
23c 0 7 :3 0
2c :2 0 140 23f
240 :3 0 23a 242
241 :4 0 215 21f
0 53 :3 0 4d
:2 0 1 246 247
0 143 54 :3 0
53 :3 0 24a 24b
55 :3 0 56 :2 0
1 24d 24e 0
145 57 :3 0 55
:3 0 251 252 147
254 266 0 267
:3 0 20 :3 0 55
:3 0 58 :2 0 1
257 258 0 149
256 25a 2f :3 0
2c :2 0 14d 25d
25e :3 0 17 :3 0
59 :2 0 13 :2 0
152 261 263 :3 0
25f 265 264 :4 0
250 255 0 268
:3 0 55 :3 0 269
26a 155 26c 288
0 289 :3 0 53
:3 0 5 :2 0 1
26e 26f 0 55
:3 0 2c :2 0 56
:2 0 1 271 273
0 15a 272 275
:3 0 53 :3 0 5
:2 0 1 277 278
0 3 :3 0 2c
:2 0 15f 27b 27c
:3 0 276 27e 27d
:2 0 53 :3 0 8
:2 0 1 280 281
0 7 :3 0 2c
:2 0 164 284 285
:3 0 27f 287 286
:4 0 249 26d 0
245 1 28a 28b
:3 0 4c :3 0 28c
28d 167 28f :2 0
291 :4 0 293 294
:3 0 1 0 20f
290 0 169 0
292 :2 0 296 16b
3b7 4b :3 0 3
:3 0 7 :3 0 4d
:2 0 1 16d 297
29b 4e :3 0 171
4f :3 0 b :3 0
4c :3 0 4d :2 0
1 2a1 2a2 0
42 :3 0 4d :2 0
1 2a4 2a5 0
5a :3 0 2a6 2a7
5b :3 0 4d :2 0
1 2a9 2aa 0
5c :3 0 2ab 2ac
173 4c :3 0 4d
:2 0 1 2af 2b0
0 177 50 :3 0
4c :3 0 2b3 2b4
46 :3 0 47 :2 0
4 2b6 2b7 0
42 :3 0 2b8 2b9
179 2bb 2e0 0
2e1 :3 0 42 :3 0
48 :3 0 2bd 2be
0 2f :3 0 2c
:2 0 17e 2c1 2c2
:3 0 4c :3 0 51
:2 0 1 2c4 2c5
0 42 :3 0 2c
:2 0 49 :3 0 2c7
2c9 0 183 2c8
2cb :3 0 2c3 2cd
2cc :2 0 4c :3 0
5 :2 0 1 2cf
2d0 0 3 :3 0
2c :2 0 188 2d3
2d4 :3 0 2ce 2d6
2d5 :2 0 4c :3 0
8 :2 0 1 2d8
2d9 0 7 :3 0
2c :2 0 18d 2dc
2dd :3 0 2d7 2df
2de :4 0 2b2 2bc
0 53 :3 0 4d
:2 0 1 2e3 2e4
0 190 54 :3 0
53 :3 0 2e7 2e8
55 :3 0 56 :2 0
1 2ea 2eb 0
192 57 :3 0 55
:3 0 2ee 2ef 194
2f1 303 0 304
:3 0 20 :3 0 55
:3 0 58 :2 0 1
2f4 2f5 0 196
2f3 2f7 2f :3 0
2c :2 0 19a 2fa
2fb :3 0 17 :3 0
59 :2 0 13 :2 0
19f 2fe 300 :3 0
2fc 302 301 :4 0
2ed 2f2 0 305
:3 0 55 :3 0 306
307 1a2 309 325
0 326 :3 0 53
:3 0 5 :2 0 1
30b 30c 0 55
:3 0 2c :2 0 56
:2 0 1 30e 310
0 1a7 30f 312
:3 0 53 :3 0 5
:2 0 1 314 315
0 3 :3 0 2c
:2 0 1ac 318 319
:3 0 313 31b 31a
:2 0 53 :3 0 8
:2 0 1 31d 31e
0 7 :3 0 2c
:2 0 1b1 321 322
:3 0 31c 324 323
:4 0 2e6 30a 0
2e2 1 327 328
:3 0 4c :3 0 329
32a 42 :3 0 4d
:2 0 1 32c 32d
0 1b4 5d :3 0
42 :3 0 330 331
1b6 333 34b 0
34c :3 0 42 :3 0
5 :2 0 1 335
336 0 5e :3 0
2c :2 0 3 :3 0
5f :2 0 60 :2 0
1b8 33b 33d :3 0
1bb 338 33f 1bf
339 341 :3 0 42
:3 0 8 :2 0 1
343 344 0 7
:3 0 2c :2 0 1c4
347 348 :3 0 342
34a 349 :4 0 32f
334 0 34d :3 0
42 :3 0 34e 34f
5b :3 0 4d :2 0
1 351 352 0
1c7 61 :3 0 62
:3 0 355 356 63
:3 0 5b :3 0 358
359 1c9 35b 37f
0 380 :3 0 5b
:3 0 64 :2 0 1
35d 35e 0 62
:3 0 2c :2 0 65
:3 0 360 362 0
1ce 361 364 :3 0
62 :3 0 5 :2 0
1 366 367 0
52 :2 0 1d1 369
36a :3 0 365 36c
36b :2 0 5b :3 0
5 :2 0 1 36e
36f 0 3 :3 0
2c :2 0 1d5 372
373 :3 0 36d 375
374 :2 0 5b :3 0
66 :2 0 1 377
378 0 7 :3 0
2c :2 0 1da 37b
37c :3 0 376 37e
37d :4 0 354 35c
0 381 :3 0 5b
:3 0 382 383 1dd
385 3a0 0 3a1
:3 0 4c :3 0 4d
:2 0 1 387 388
0 42 :3 0 2c
:2 0 4d :2 0 1
38a 38c 0 67
:2 0 1e1 38e 38f
:3 0 1e5 38b 391
:3 0 4c :3 0 4d
:2 0 1 393 394
0 5b :3 0 2c
:2 0 4d :2 0 1
396 398 0 67
:2 0 1e8 39a 39b
:3 0 1ec 397 39d
:3 0 392 39f 39e
:4 0 2ae 386 0
3a2 :3 0 1ef 3a4
3af 0 3b0 :3 0
5a :3 0 68 :2 0
1f1 3a7 3a8 :3 0
5c :3 0 68 :2 0
1f3 3ab 3ac :3 0
3a9 3ae 3ad :3 0
3b2 3b3 :3 0 1
0 29e 3a5 0
1f5 0 3b1 :2 0
3b5 1f7 3b6 0
3b5 0 3b8 205
296 0 3b8 1f9
0 3b9 1fc 3ba
0 3b9 0 3bc
17c 200 0 3bc
1fe 0 3c0 9
:3 0 b :3 0 3be
:2 0 3c0 201 3f5
18 :3 0 69 :3 0
6a :2 0 6b :2 0
20c 3c3 3c5 :3 0
6c :4 0 20e 3c2
3c8 :2 0 3ca 211
3cc 213 3cb 3ca
:2 0 3f2 19 :3 0
69 :3 0 6a :2 0
6d :2 0 215 3cf
3d1 :3 0 6e :4 0
217 3ce 3d4 :2 0
3d6 21a 3d8 21c
3d7 3d6 :2 0 3f2
1a :3 0 69 :3 0
6a :2 0 6f :2 0
21e 3db 3dd :3 0
70 :4 0 220 3da
3e0 :2 0 3e2 223
3e4 225 3e3 3e2
:2 0 3f2 71 :3 0
69 :3 0 6a :2 0
72 :2 0 227 3e8
3ea :3 0 73 :4 0
229 3e7 3ed :2 0
3ef 23f 3f1 22e
3f0 3ef :2 0 3f2
230 :2 0 3f5 2
:3 0 235 3f5 3f4
3c0 3f2 :6 0 3f6
:2 0 3 1c 3f5
3f8 :2 0 2 3f6
3f9 :8 0 
242
4
:3 0 1 4 1
e 2 d 17
1 1b 1 27
1 25 1 2f
1 2d 1 37
1 35 1 3f
1 3d 1 47
1 45 1 4d
1 50 1 53
2 58 5a 1
62 2 64 65
1 67 2 71
72 1 74 2
76 77 2 7a
7c 3 5c 6a
7e 1 83 1
88 2 86 88
1 8c 2 8b
8c 1 94 2
96 97 1 9b
2 99 9b 1
a0 2 a2 a3
1 a7 2 a5
a7 3 80 81
82 1 b6 2
b4 b6 1 bb
1 bd 2 c1
c3 1 c5 1
c8 4 cd ce
cf d0 2 d4
d5 1 d9 2
d7 d9 1 c7
1 e5 2 e3
e5 1 ea 1
ec 2 f1 f3
2 f0 f5 3
fa fb fc 2
f7 fe 2 104
106 1 108 1
10d 1 111 1
118 2 116 118
1 122 1 126
1 12d 2 12b
12d 2 11f 134
3 13e 13f 140
1 142 2 139
142 1 10a 1
14c 2 14a 14c
1 151 1 153
2 157 159 1
15b 1 160 1
164 2 163 164
1 16a 2 168
16a 1 15d 2
175 176 1 17a
2 178 17a 3
17e 17f 182 1
184 1 18b 2
18f 194 1 19a
2 199 19a 1
1a4 2 1a0 1a4
1 1ab 1 1b4
2 1b3 1b4 1
1be 1 1c5 1
1c9 1 1cf 1
1d2 2 1d1 1d2
1 1d8 2 1d6
1d8 2 1c2 1e1
1 1e6 1 1ed
2 1ec 1ed 1
1f8 1 188 1
1ff 1 203 2
201 203 3 207
208 20b 1 20d
1 214 2 218
21d 1 223 2
222 223 1 22d
2 229 22d 1
235 2 234 235
1 23e 2 23d
23e 1 248 1
24f 1 253 1
259 1 25c 2
25b 25c 1 262
2 260 262 2
24c 26b 1 274
2 270 274 1
27a 2 279 27a
1 283 2 282
283 1 28e 1
211 1 295 3
298 299 29a 1
29c 3 2a3 2a8
2ad 1 2b1 2
2b5 2ba 1 2c0
2 2bf 2c0 1
2ca 2 2c6 2ca
1 2d2 2 2d1
2d2 1 2db 2
2da 2db 1 2e5
1 2ec 1 2f0
1 2f6 1 2f9
2 2f8 2f9 1
2ff 2 2fd 2ff
2 2e9 308 1
311 2 30d 311
1 317 2 316
317 1 320 2
31f 320 1 32e
1 332 2 33a
33c 1 33e 1
340 2 337 340
1 346 2 345
346 1 353 2
357 35a 1 363
2 35f 363 1
368 1 371 2
370 371 1 37a
2 379 37a 3
32b 350 384 1
38d 1 390 2
389 390 1 399
1 39c 2 395
39c 1 3a3 1
3a6 1 3aa 1
2a0 1 3b4 2
3b7 3b6 1 3b8
2 3bb 3ba a
b3 be e2 ed
101 149 154 173
3bc 3bf 1 3c4
2 3c6 3c7 1
3c9 1 3c1 1
3d0 2 3d2 3d3
1 3d5 1 3cd
1 3dc 2 3de
3df 1 3e1 1
3d9 1 3e9 2
3eb 3ec 1 3ee
1 3e6 4 3cc
3d8 3e4 3f1 9
23 2b 33 3b
43 4b 4f 52
55 2 3ee 3f7

1
4
0 
3f8
0
1
14
1
c
0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0
0 0 0 0 
2d 1 0
1b 1 0
50 1 0
e 1 0
25 1 0
45 1 0
35 1 0
4 1 0
3d 1 0
53 1 0
3 0 1
4d 1 0
0

/

CREATE OR REPLACE Function zltools.f_Reg_Menu
(
  Menu_Group_In  In zlMenus.组别%Type := Null, --本机选择的菜单组别
  System_List_In In Varchar2, --本次会话涉及的应用系统
  Part_List_In   In Varchar2 --以逗号分隔的本机可执行部件列表
) Return t_Menu_Rowset Is
  t_Return t_Menu_Rowset := t_Menu_Rowset();
  t_Middle t_Menu_Rowset := t_Menu_Rowset();

  v_Parts   Varchar2(32767);
  t_Parts   t_Reg_Rowset := t_Reg_Rowset();
  v_Systems Varchar2(32767);
  t_Systems t_Reg_Rowset := t_Reg_Rowset();

Begin

  --变量解析形成类型数组表
  v_Parts := Upper(Part_List_In) || ',';
  While v_Parts Is Not Null Loop
    t_Parts.Extend;
    t_Parts(t_Parts.Count) := t_Reg_Record(Null, Null, Substr(v_Parts, 1, Instr(v_Parts, ',') - 1));
    v_Parts := Trim(Substr(v_Parts, Instr(v_Parts, ',') + 1));
  End Loop;
  t_Parts.Extend;
  t_Parts(t_Parts.Count) := t_Reg_Record(Null, Null, 'ZL9REPORT');
  v_Systems := System_List_In || ',';
  While v_Systems Is Not Null Loop
    t_Systems.Extend;
    t_Systems(t_Systems.Count) := t_Reg_Record(Null, To_Number(Substr(v_Systems, 1, Instr(v_Systems, ',') - 1)), Null);
    v_Systems := Trim(Substr(v_Systems, Instr(v_Systems, ',') + 1));
  End Loop;
  t_Systems.Extend;
  t_Systems(t_Systems.Count) := t_Reg_Record(Null, 0, Null);

  --菜单数据获取：
  Select t_Menu_Record(m.层次, m.Id, m.上级id, m.标题, m.短标题, m.快键, m.说明, m.模块, m.系统, m.图标, p.部件, 0) Bulk Collect
  Into t_Middle
  From (Select Level As 层次, Id, 上级id, 标题, 短标题, 快键, 说明, 模块, 系统, 图标
         From zlMenus
         Where 组别 = Menu_Group_In
         Start With 上级id Is Null
         Connect By Prior Id = 上级id) m,
       (Select Distinct p.系统, p.序号, p.部件
         From zlPrograms p, zlProgFuncs f, zlRegFunc r, Table(Cast(t_Parts As t_Reg_Rowset)) c,
              Table(Cast(t_Systems As t_Reg_Rowset)) s,
              (Select 1 As 超级 From Sys.Dba_Role_Privs Where Granted_Role = 'DBA' And Grantee = User) a,
              (Select Decode(Count(*), 0, 0, Null, 0, 1) As 编号
                From zlSystems
                Where Upper(所有者) = User
                Union All
                Select 编号 From zlSystems Where Upper(所有者) = User) o,
              (Select Distinct g.系统, g.序号
                From zlRoleGrant g, Sys.Dba_Role_Privs r
                Where g.角色 = r.Granted_Role And r.Grantee = User) g
         Where Nvl(f.系统, 0) = Nvl(p.系统, 0) And f.序号 = p.序号 And Trunc(f.系统 / 100) = r.系统(+) And
               f.序号 = r.序号(+) And f.功能 = r.功能(+) And (r.功能 Is Null And f.系统 Is Null Or r.功能 Is Not Null) And
               Upper(p.部件) = c.Text And Nvl(p.系统, 0) = s.Prog And p.序号 = p.序号 * a.超级(+) And
               Nvl(p.系统, 1) = o.编号(+) And Nvl(p.系统, 0) = Nvl(g.系统(+), 0) And p.序号 = g.序号(+) And
               (a.超级 Is Not Null Or o.编号 Is Not Null Or g.序号 Is Not Null)) p
  Where Nvl(m.系统, 0) = Nvl(p.系统(+), 0) And m.模块 = p.序号(+) And
        (m.模块 Is Null Or m.模块 Is Not Null And p.序号 Is Not Null)
  Order By m.层次 Desc;

  --清理无下级可执行的菜单项目
  For n_Child In 1 .. t_Middle.Count Loop
    If t_Middle(n_Child).部件 Is Not Null Or t_Middle(n_Child).标记 = 1 Then
      t_Return.Extend;
      t_Return(t_Return.Count) := t_Middle(n_Child);
      If t_Middle(n_Child).上级id Is Not Null Then
        For n_Parent In n_Child + 1 .. t_Middle.Count Loop
          If t_Middle(n_Parent).标记 = 0 And t_Middle(n_Parent).Id = t_Middle(n_Child).上级id Then
            t_Middle(n_Parent).标记 := 1;
            Exit;
          End If;
        End Loop;
      End If;
    End If;
  End Loop;

  Return t_Return;
End f_Reg_Menu;
/

CREATE OR REPLACE Procedure zltools.Zl_Errorcenter
	(
		Err_Num In Number,
		Err_Msg In Varchar2
	) Is
		v_Outnum Number := 0;
		v_Outmsg Varchar2(1000) := '';
		v_Temp   Varchar2(1000) := '';

		Cursor Cur_Ind_Cols Is
			Select Table_Name, Column_Name From All_Ind_Columns Where Instr(Err_Msg, Index_Owner || '.' || Index_Name) > 0;

		Cursor Cur_Con_Cols Is
			Select Table_Name, Column_Name
			From All_Cons_Columns
			Where (Owner, Constraint_Name) =
						(Select r_Owner, r_Constraint_Name
						 From All_Constraints
						 Where Instr(Err_Msg, Owner || '.' || Constraint_Name) > 0 And Rownum < 2);
	Begin
		If Err_Num = -1 Then
			For Row_Cols In Cur_Ind_Cols Loop
				v_Temp   := Row_Cols.Table_Name;
				v_Outmsg := v_Outmsg || '、' || Row_Cols.Column_Name;
			End Loop;

			v_Outmsg := '[ZLSOFT]' || v_Temp || '的(' || Substr(v_Outmsg, 2) || ')出现重复！[ZLSOFT]';
			v_Outnum := -20000;
		Elsif Err_Num = -1000 Then
			v_Outmsg := '[ZLSOFT]打开的数据表太多，必要时请系统管理员修改数据库的Open_Cursors配置。';
			v_Outnum := -20001;
		Elsif Err_Num = -1400 Or Err_Num = -1407 Then
			Select Table_Name, Column_Name
			Into v_Temp, v_Outmsg
			From All_Tab_Columns
			Where Instr(Err_Msg, '"' || Owner || '"."' || Table_Name || '"."' || Column_Name || '"') > 0 And Rownum < 2;
			v_Outmsg := '[ZLSOFT]' || v_Temp || '的(' || v_Outmsg || ')必须输入！[ZLSOFT]';
			v_Outnum := -20002;
		Elsif Err_Num = -1401 Then
			v_Outmsg := '[ZLSOFT]由于赋予的值超过了列宽限制，导致增加或更新失败。[ZLSOFT]';
			v_Outnum := -20003;
		Elsif Err_Num = -2290 Then
			Select Table_Name, Search_Condition
			Into v_Temp, v_Outmsg
			From All_Constraints
			Where Instr(Err_Msg, Owner || '.' || Constraint_Name) > 1 And Rownum < 2;

			If Instr(v_Outmsg, 'IS NOT NULL') > 0 Then
				v_Outmsg := '[ZLSOFT]' || v_Temp || ' 的 ' || Replace(v_Outmsg, 'IS NOT NULL', '必须输入！') || '[ZLSOFT]';
				v_Outnum := -20004;
			Else
				v_Outmsg := Err_Msg;
				v_Outnum := -20999;
			End If;
		Elsif Err_Num = -2292 Then
			Select Table_Name
			Into v_Temp
			From All_Constraints
			Where Instr(Err_Msg, Owner || '.' || Constraint_Name) > 1 And Rownum < 2;

			For Row_Cols In Cur_Con_Cols Loop
				v_Outmsg := v_Outmsg || '、' || Row_Cols.Column_Name;
			End Loop;

			v_Outmsg := '[ZLSOFT]该记录在 ' || v_Temp || ' 中已经使用,' || Chr(13) || '不能删除或修改(' ||
									Substr(v_Outmsg, 2) || ')[ZLSOFT]';
			v_Outnum := -20005;
		Else
			v_Outmsg := Err_Msg;
			v_Outnum := -20999;
		End If;
		Raise_Application_Error(v_Outnum, Substr(v_Outmsg, 1, 100));
	End Zl_Errorcenter;
/

-------------------------------------------------------------------------------
-- 创建包
-------------------------------------------------------------------------------

CREATE OR REPLACE PACKAGE ZLTOOLS.b_Datamana IS
  -----------------------------------------------------------------------------
  -- 作者： 陈东
  -- 创始时间：2006-6-29
  -- 修改人：
  -- 修改时间：
  -- 描述：
  --         主要用于数据管理功能的过程
  -----------------------------------------------------------------------------

  TYPE t_Refcur IS REF CURSOR;

  -----------------------------------------------------------------------------
  -- 功能：取禁止约束的SQL
  -- 调用列表：
  -- frmLoadIn.cmdExecute_Click
  -----------------------------------------------------------------------------
  PROCEDURE Disable_Constraint_Sql
  (
    Cursor_Out   OUT t_Refcur,
    Tablename_In IN All_Constraints.Table_Name%TYPE
  );

  -----------------------------------------------------------------------------
  -- 功能：取启用约束的SQL
  -- 调用列表：
  -- frmLoadIn.cmdExecute_Click
  -----------------------------------------------------------------------------
  PROCEDURE Enable_Constraint_Sql(Cursor_Out OUT t_Refcur);

  -----------------------------------------------------------------------------
  -- 功能：取表的字段名称
  -- 调用列表：
  -- frmLoadOut.cmdExecute_Click、frmLoadOut.cmdSQL_Click、frmAppscript.cmdGen_click
  -----------------------------------------------------------------------------
  PROCEDURE Get_Table_Column
  (
    Cursor_Out    OUT t_Refcur,
    Table_Name_In IN All_Tab_Columns.Table_Name%TYPE,
    Owner_In      IN All_Tab_Columns.Owner%TYPE := NULL
  );

END b_Datamana;
/

CREATE OR REPLACE PACKAGE ZLTOOLS.b_Expert IS
  -----------------------------------------------------------------------------
  -- 作者： 陈东
  -- 创始时间：2006-6-29
  -- 修改人：
  -- 修改时间：
  -- 描述：
  --         主要用于专项工具的过程
  -----------------------------------------------------------------------------

  TYPE t_Refcur IS REF CURSOR;

  -----------------------------------------------------------------------------
  -- 取提醒数据
  -- 调用列表： frmNoticesEdit.ReadData、frmNoticeTools.cboSystem_Click
  -----------------------------------------------------------------------------
  PROCEDURE Get_Notices
  (
    Cursor_Out OUT t_Refcur,
    序号_In    IN Zlnotices.序号%TYPE,
    系统_In    IN Zlreports.系统%TYPE := NULL
  );

  -----------------------------------------------------------------------------
  -- 取提醒对象数据
  -- 调用列表： frmNoticesEdit.ReadData
  -----------------------------------------------------------------------------
  PROCEDURE Get_Noticeusr
  (
    Cursor_Out  OUT t_Refcur,
    提醒对象_In IN Zlnoticeusr.提醒对象%TYPE,
    提醒序号_In IN Zlnoticeusr.提醒序号%TYPE
  );

  -----------------------------------------------------------------------------
  -- 取可以选择的提醒报表
  -- 调用列表： frmNoticesEdit.cmdOpen_Click
  -----------------------------------------------------------------------------
  PROCEDURE Get_Noticereport
  (
    Cursor_Out OUT t_Refcur,
    系统_In    IN Zlreports.系统%TYPE
  );

  -----------------------------------------------------------------------------
  -- 在不同的系统间复制报表
  -- 调用列表：mdlMain.CopyReport
  -----------------------------------------------------------------------------
  PROCEDURE Copy_Report
  (
    系统_In   IN Zlreports.系统%TYPE,
    新系统_In IN Zlreports.系统%TYPE
  );

END b_Expert;
/

CREATE OR REPLACE PACKAGE ZLTOOLS.b_Loadandunload IS
  -----------------------------------------------------------------------------
  -- 作者： 陈东
  -- 创始时间：2006-6-29
  -- 修改人：
  -- 修改时间：
  -- 描述：
  --         主要用于装卸管理的过程
  -----------------------------------------------------------------------------

  TYPE t_Refcur IS REF CURSOR;

  -----------------------------------------------------------------------------
  -- 功能：取约束信息
  -- 调用列表：frmAppCheck.CheckConstraint、frmClearData.cmbSystem_Click、frmImp.cmdExecute_Click
  -----------------------------------------------------------------------------
  PROCEDURE Get_Constraint
  (
    Cursor_Out OUT t_Refcur,
    Owner_In   IN VARCHAR2 := NULL,
    Type_In    IN NUMBER := 0
  );

  -----------------------------------------------------------------------------
  -- 功能：取约束字段名称
  -- 调用列表：frmAppCheck.CheckConstraint
  -----------------------------------------------------------------------------
  PROCEDURE Get_Constraint_Column
  (
    Cursor_Out         OUT t_Refcur,
    Constraint_Name_In IN VARCHAR2,
    Owner_In           IN VARCHAR2 := NULL
  );

  -----------------------------------------------------------------------------
  -- 功能：取约束相关表名称
  -- 调用列表：frmAppScript.cmdGen_Click
  -----------------------------------------------------------------------------
  PROCEDURE Get_Constraint_Table
  (
    Cursor_Out    OUT t_Refcur,
    Table_Name_In IN All_Constraints.Table_Name%TYPE,
    Owner_In      IN All_Constraints.Owner%TYPE
  );

  -----------------------------------------------------------------------------
  -- 功能：取索引名称
  -- 调用列表：frmAppCheck.CheckIndex 、frmAppCheck.cmdFunction_Click
  -----------------------------------------------------------------------------
  PROCEDURE Get_Index_Status
  (
    Cursor_Out OUT t_Refcur,
    Owner_In   IN VARCHAR2 := NULL
  );

  -----------------------------------------------------------------------------
  -- 功能：取索引字段
  -- 调用列表：frmAppCheck.CheckIndex
  -----------------------------------------------------------------------------
  PROCEDURE Get_Index_Column
  (
    Cursor_Out     OUT t_Refcur,
    Index_Name_In  IN VARCHAR2,
    Index_Owner_In IN VARCHAR2 := NULL
  );

  -----------------------------------------------------------------------------
  -- 功能：取存储过程，函数名称
  -- 调用列表：frmAppCheck.CheckProgram
  -----------------------------------------------------------------------------
  PROCEDURE Get_Program
  (
    Cursor_Out OUT t_Refcur,
    Owner_In   IN VARCHAR2 := NULL
  );

  -----------------------------------------------------------------------------
  -- 功能：取序列名称
  -- 调用列表：frmAppCheck.CheckSequence、frmImp.cmdExecute_Click
  -----------------------------------------------------------------------------
  PROCEDURE Get_Sequence
  (
    Cursor_Out        OUT t_Refcur,
    Sequence_Owner_In IN VARCHAR2 := NULL
  );

  -----------------------------------------------------------------------------
  -- 功能：取表名称
  -- 调用列表：frmAppCheck.CheckTable、frmClearData.FillTable、frmAppUpgrade.check_table
  --           frmImp.cmdExecute_Click、frmAppScript.cmdGen_click、frmLoadIn.FillSystem、frmLoadOut.cmbSystem_Click
  -----------------------------------------------------------------------------
  PROCEDURE Get_Table
  (
    Cursor_Out OUT t_Refcur,
    Owner_In   IN VARCHAR2 := NULL
  );

  -----------------------------------------------------------------------------
  -- 功能：取CK表的字段名称
  -- 调用列表：frmAppCheck.CheckTable、frmAppupgrade.CheckTable
  -----------------------------------------------------------------------------
  PROCEDURE Get_Ck_Table_Column
  (
    Cursor_Out    OUT t_Refcur,
    Table_Name_In IN VARCHAR2,
    Owner_In      IN VARCHAR2 := NULL
  );

  -----------------------------------------------------------------------------
  -- 功能：取视图名称
  -- 调用列表：frmAppCheck.CheckView、frmImp.cmdExecute_Click
  -----------------------------------------------------------------------------
  PROCEDURE Get_View
  (
    Cursor_Out OUT t_Refcur,
    Owner_In   IN VARCHAR2 := NULL
  );

  -----------------------------------------------------------------------------
  -- 功能：取有序列的表名称
  -- 调用列表：mdlMain.AdjustSequence、frmAppCheck.cmdFunction_Click
  -----------------------------------------------------------------------------
  PROCEDURE Get_Sequence_Table
  (
    Cursor_Out OUT t_Refcur,
    Owner_In   IN All_Tab_Columns.Owner%TYPE
  );

  -----------------------------------------------------------------------------
  -- 功能：取删除外键，索引的语句
  -- 调用列表：frmAppCheck.cmdFunction_Click
  -----------------------------------------------------------------------------
  PROCEDURE Get_Dropindex_Sql
  (
    Cursor_Out OUT t_Refcur,
    Type_In    IN VARCHAR2
  );

  -----------------------------------------------------------------------------
  -- 功能：取有SysFiles表的文件名
  -- 调用列表：frmAppCheck.cmbSystem_Click、frmClearData.cmbSystem_Click、frmAppScript.cmbSystem_Click
  --           frmAppUpgrade.cmbSystem_Click
  -----------------------------------------------------------------------------
  PROCEDURE Get_Sysfile_Name
  (
    Cursor_Out OUT t_Refcur,
    系统_In    IN Zlsysfiles.系统%TYPE,
    操作_In    IN Zlsysfiles.操作%TYPE
  );

  -----------------------------------------------------------------------------
  -- 功能：取共享系统名称
  -- 调用列表： frmAppStart.cmdFunction_MouseUp
  -----------------------------------------------------------------------------
  PROCEDURE Get_Share_Name
  (
    Cursor_Out OUT t_Refcur,
    共享号_In  IN Zlsystems.编号%TYPE
  );

  -----------------------------------------------------------------------------
  -- 功能：取Oracle版本号
  -- 调用列表： frmAppStart.Form_Load、frmImp.Form_Load、frmLoadIn.Form_Load
  -----------------------------------------------------------------------------
  PROCEDURE Get_Oracle_Ver(Cursor_Out Out t_Refcur);

  -----------------------------------------------------------------------------
  -- 功能：取无效的对象
  -- 调用列表： frmCompileInvalid.cmdCheck_Click
  -----------------------------------------------------------------------------
  PROCEDURE Get_Invalid_Object(Cursor_Out OUT t_Refcur);

  -----------------------------------------------------------------------------
  -- 功能：取引用关系表
  -- 调用列表： frmCompileInvalid.cmdCompile_Click
  -----------------------------------------------------------------------------
  PROCEDURE Get_Dependencies(Cursor_Out OUT t_Refcur);

  -----------------------------------------------------------------------------
  -- 功能：取编译错误信息
  -- 调用列表： frmCompileInvalid.vsObj_AfterRowColChange
  -----------------------------------------------------------------------------
  PROCEDURE Get_Errinfo
  (
    Cursor_Out OUT t_Refcur,
    Owner_In   IN All_Errors.Owner%TYPE,
    Name_In    IN All_Errors.NAME%TYPE,
    Type_In    IN All_Errors.TYPE%TYPE
  );

END b_Loadandunload;
/

Create Or Replace Package zltools.b_Popedom Is

  -----------------------------------------------------------------------------
  -- 作者： 陈东
  -- 创始时间：2006-6-29
  -- 修改人：
  -- 修改时间：
  -- 描述：
  --         主要用于权限管理的过程
  -----------------------------------------------------------------------------
  Type t_Refcur Is Ref Cursor;

  -----------------------------------------------------------------------------
  -- 功能：CopyMenu
  -- 调用列表：mdlMain.CopyMenu
  -----------------------------------------------------------------------------
  Procedure Copy_Menu
  (
    系统_In   In zlMenus.系统%Type,
    新系统_In In zlMenus.系统%Type
  );

  -----------------------------------------------------------------------------
  -- 功能：取ZlMenu数据
  -- 调用列表： frmMenu.cmdExp_Click、frmMenu.FillMenu
  -----------------------------------------------------------------------------
  Procedure Get_Menu_Tree
  (
    Cursor_Out Out t_Refcur,
    组别_In    In zlMenus.组别%Type
  );

  -----------------------------------------------------------------------------
  -- 功能：取ZlMenu数据
  -- 调用列表： frmMenu.cmdNew_Click、frmMenu.FillMenuName
  -----------------------------------------------------------------------------
  Procedure Get_Menu_Group
  (
    Cursor_Out Out t_Refcur,
    组别_In    In zlMenus.组别%Type
  );

  -----------------------------------------------------------------------------
  -- 功能：核实权限
  -- 调用列表： frmProgPriv.cmdVerify_Click
  -----------------------------------------------------------------------------
  Procedure Verify_Impower
  (
    Cursor_Out Out t_Refcur,
    系统_In    In zlReports.系统%Type,
    Owner_In   In All_Objects.Owner%Type
  );

  -----------------------------------------------------------------------------
  -- 功能：取模块
  -- 调用列表： frmProgPriv.Fill模块
  -----------------------------------------------------------------------------
  Procedure Get_Module
  (
    Cursor_Out Out t_Refcur,
    系统_In    In zlComponent.系统%Type
  );

  -----------------------------------------------------------------------------
  -- 功能：取功能或排列，说明
  -- 调用列表： frmProgPriv.Fill功能、frmProgPriv.Fill表权限
  -----------------------------------------------------------------------------
  Procedure Get_Function
  (
    Cursor_Out Out t_Refcur,
    系统_In    In zlProgFuncs.系统%Type,
    序号_In    In zlProgFuncs.序号%Type,
    功能_In    In zlProgFuncs.功能%Type := Null
  );

  -----------------------------------------------------------------------------
  -- 功能：取表权限
  -- 调用列表： frmProgPriv.Fill表权限
  -----------------------------------------------------------------------------
  Procedure Get_Impower
  (
    Cursor_Out Out t_Refcur,
    系统_In    In zlProgPrivs.系统%Type,
    序号_In    In zlProgPrivs.序号%Type,
    功能_In    In zlProgPrivs.功能%Type
  );

  -----------------------------------------------------------------------------
  -- 功能：取objects
  -- 调用列表： frmProgPriv.ProgPriv
  -----------------------------------------------------------------------------
  Procedure Get_Objects
  (
    Cursor_Out Out t_Refcur,
    Owner_In   In All_Objects.Owner%Type
  );

  -----------------------------------------------------------------------------
  -- 功能：得到可以授权的所有者名称
  -- 调用列表： frmRole.cmdGrantAll_Click
  -----------------------------------------------------------------------------
  Procedure Get_All_Owner(Cursor_Out Out t_Refcur);

  -----------------------------------------------------------------------------
  -- 功能：得到角色能访问的基础表
  -- 调用列表： frmRole.FillModule
  -----------------------------------------------------------------------------
  Procedure Get_Role_Table
  (
    Cursor_Out Out t_Refcur,
    Grantee_In In All_Tab_Privs.Grantee%Type
  );

  -----------------------------------------------------------------------------
  -- 功能：得到角色能访问的函数
  -- 调用列表： frmRole.FillModule
  -----------------------------------------------------------------------------
  Procedure Get_Role_Function
  (
    Cursor_Out Out t_Refcur,
    Grantee_In In All_Tab_Privs.Grantee%Type
  );

  -----------------------------------------------------------------------------
  -- 功能：得到角色能访问的导航台工具
  -- 调用列表： frmRole.FillModule
  -----------------------------------------------------------------------------
  Procedure Get_Role_Tools
  (
    Cursor_Out Out t_Refcur,
    角色_In    In zlRoleGrant.角色%Type
  );

  -----------------------------------------------------------------------------
  -- 功能：得到角色能访问的模块
  -- 调用列表： frmRole.FillModule
  -----------------------------------------------------------------------------
  Procedure Get_Role_Module
  (
    Cursor_Out Out t_Refcur,
    角色_In    In zlRoleGrant.角色%Type,
    系统_In    In zlPrograms.系统%Type
  );

  -----------------------------------------------------------------------------
  -- 功能：得到以前的权限
  -- 调用列表： frmRoleGrant.cmdOK_Click
  -----------------------------------------------------------------------------
  Procedure Get_Role_Grant
  (
    Curgrand_Out    Out t_Refcur,
    Curprivs_Out    Out t_Refcur,
    Curfuncpars_Out Out t_Refcur,
    角色_In         In zlRoleGrant.角色%Type
  );

  -----------------------------------------------------------------------------
  -- 得到编码表原有授权
  -- 调用列表： frmRoleGrant.GrantToRole
  -----------------------------------------------------------------------------
  Procedure Get_Old_Impower
  (
    Cursor_Out Out t_Refcur,
    角色_In    In All_Tab_Privs.Grantee%Type
  );

  -----------------------------------------------------------------------------
  -- 功能：得到函数原有授权
  -- 调用列表： frmRoleGrant.GrantToRole
  -----------------------------------------------------------------------------
  Procedure Get_Old_Function
  (
    Cursor_Out Out t_Refcur,
    角色_In    In All_Tab_Privs.Grantee%Type
  );

  -----------------------------------------------------------------------------
  -- 功能：FillFunc
  -- 调用列表： frmRoleGrant.FillFunc
  -----------------------------------------------------------------------------
  Procedure Get_Zlprogfunc
  (
    Cursor_Out Out t_Refcur,
    系统_In    In zlProgFuncs.系统%Type,
    序号_In    In zlProgFuncs.序号%Type
  );

  -----------------------------------------------------------------------------
  -- 功能：所有可显示的系统
  -- 调用列表： frmRoleUser.FillSystem、frmUser.FillSystem、frmStatus.Form_Load
  -----------------------------------------------------------------------------
  Procedure Get_All_Systems(Cursor_Out Out t_Refcur);

  -----------------------------------------------------------------------------
  -- 功能：是否有指定的权限
  -- 调用列表： frmUser.FillSystem
  -----------------------------------------------------------------------------
  Procedure Get_Have_Impower
  (
    Cursor_Out   Out t_Refcur,
    Privilege_In In Varchar2
  );

  -----------------------------------------------------------------------------
  -- 功能：是所有角色对应的模块
  -- 调用列表： frmUserEdit.UserEdit
  -----------------------------------------------------------------------------
  Procedure Get_All_Module(Cursor_Out Out t_Refcur);

End b_Popedom;
/

Create Or Replace Package zltools.b_Public Is
  -----------------------------------------------------------------------------
  -- 作者： 陈东
  -- 创始时间：2006-6-29
  -- 修改人：
  -- 修改时间：
  -- 描述：
  --         公共过程
  -----------------------------------------------------------------------------

  Type t_Refcur Is Ref Cursor;

  -----------------------------------------------------------------------------
  -- 功能：取系统日期
  -- 调用列表：
  -- mdlMain.CurrentDate
  -- clsDatabase.CurrentDate
  -----------------------------------------------------------------------------
  Procedure Get_Current_Date(Cursor_Out Out t_Refcur);

  -----------------------------------------------------------------------------
  -- 功能：删除错误日志或运行日志
  -- 调用列表：
  -- mdlMain.DeleteAllLog
  -----------------------------------------------------------------------------
  Procedure Delete_All_Log(Runtimelog_In In Number := 0);

  -----------------------------------------------------------------------------
  -- 功能：删除当前运行日志
  -- 调用列表：
  -- mdlMain.DeleteCurLog
  -----------------------------------------------------------------------------
  Procedure Delete_Diarylog
  (
    会话号_In   Number,
    用户名_In   Varchar2,
    工作站_In   Varchar2,
    部件名_In   Varchar2,
    工作内容_In Varchar2,
    进入时间_In Date
  );

  -----------------------------------------------------------------------------
  -- 功能：删除当前错误日志
  -- 调用列表：
  -- mdlMain.DeleteCurLog
  -----------------------------------------------------------------------------
  Procedure Delete_Errorlog
  (
    会话号_In   Number,
    用户名_In   Varchar2,
    工作站_In   Varchar2,
    类型_In     Number,
    错误序号_In Number,
    时间_In     Date
  );

  -----------------------------------------------------------------------------
  -- 功能：取注册码
  -- 调用列表：
  -- mdlMain.Get注册码
  -----------------------------------------------------------------------------
  Procedure Get_Regcode(Cursor_Out Out t_Refcur);

  -----------------------------------------------------------------------------
  -- 功能：判断管理工具的版本
  -- 调用列表：
  -- mdlMain.JudgeManagerVer
  -----------------------------------------------------------------------------
  Procedure Judge_Managerver(Cursor_Out Out t_Refcur);

  -----------------------------------------------------------------------------
  -- 功能：取版本号
  -- 调用列表：
  -- mdlMain.UpgradeManager
  -----------------------------------------------------------------------------
  Procedure Get_Ver(Cursor_Out Out t_Refcur);

  -----------------------------------------------------------------------------
  -- 功能：更新版本号
  -- 调用列表：
  -- mdlMain.UpgradeManager
  -----------------------------------------------------------------------------
  Procedure Update_Ver(Verstring_In In Varchar2);

  -----------------------------------------------------------------------------
  -- 功能：取得系统所有者名称
  -- 调用列表：
  -- frmStatus.cmbsystem_Click、mdlMain.GetOwnerName、mdlMain.cmbSystem_Click
  -- frmAutoJobs.cmbSystem_Click、frmDataMove.cmbSystem_Click 、frmNoticeTools.cboSystem_Click
  -- frmProgPriv.ProgPriv、frmAppScript.cmbSystem_Click
  -----------------------------------------------------------------------------
  Procedure Get_Owner_Name
  (
    Cursor_Out Out t_Refcur,
    编号_In    In zlSystems.编号%Type := 0
  );

  -----------------------------------------------------------------------------
  -- 功能：取注册表中信息
  -- 调用列表：
  -- frmAbout.GetUnitInfo、frmAutoJobs.From_load、frmClientsUpgrade.InitInfor
  -- frmFilesSet.ShowEdit、frmRegist.From_load、frmAppScript.From_Load
  -- frmFilesSendToServer.InitInfo
  -----------------------------------------------------------------------------
  Procedure Get_Reginfo
  (
    Cursor_Out Out t_Refcur,
    项目_In    In zlRegInfo.项目%Type := Null
  );

  -----------------------------------------------------------------------------
  -- 功能：取zlGetSvrToolsg数据
  -- 调用列表：
  -- frmMDIMain.MDIForm_Load
  -----------------------------------------------------------------------------
  Procedure Get_Zlsvrtools(Cursor_Out Out t_Refcur);

  -----------------------------------------------------------------------------
  -- 功能：取失效过程
  -- 调用列表：
  -- mdlMain.ReCompileProcedure
  -----------------------------------------------------------------------------
  Procedure Get_Invalid_Procedure(Cursor_Out Out t_Refcur);

  -----------------------------------------------------------------------------
  -- 功能：取已安装系统清单
  -- 调用列表：
  -- frmAppCheck.Form_Load、frmClearData.Form_Load、frmDataMove.Form_Load
  -- frmImp.FillSystem、frmLoadIn.FillSystem、frmLoadOut.FillSystem
  -- frmMDIMain.mnuFileRemove_Click、frmNoticeTools.Form_Activate、frmRoleGrant.FillSystem
  -- frmAppUpgrade.Form_Load、frmAppScript.Form_Load、frmExp.FillSystem
  -- frmInputTools.from_activate、fromRole.FillSystem、frmAutoJobs.From_load
  -- frmAppstart.sysCreated
  -----------------------------------------------------------------------------
  Procedure Get_Zlsystems
  (
    Cursor_Out Out t_Refcur,
    所有者_In  In zlSystems.所有者%Type := Null
  );

End b_Public;
/

CREATE OR REPLACE PACKAGE ZLTOOLS.b_Runmana IS
  -----------------------------------------------------------------------------
  -- 作者： 陈东
  -- 创始时间：2006-6-29
  -- 修改人：
  -- 修改时间：
  -- 描述：
  --         主要用于运行管理功能的过程
  -----------------------------------------------------------------------------

  TYPE t_Refcur IS REF CURSOR;

  -----------------------------------------------------------------------------
  -- 功能：取ZlAutoJob序列号
  -- 调用列表：
  -- frmAutoJobset.cmdok_click
  -----------------------------------------------------------------------------
  PROCEDURE Get_Job_Number
  (
    cursor_out out t_Refcur,
    系统_In  IN NUMBER
  );

  -----------------------------------------------------------------------------
  -- 功能：取AutoJobs
  -- 调用列表：
  -- frmAutoJobs.cmbSystem_Click
  -----------------------------------------------------------------------------
  PROCEDURE Get_Zlautojobs
  (
    Cur_Out  OUT t_Refcur,
    系统_In  IN Zlautojobs.系统%TYPE,
    类型_In  IN Zlautojobs.类型%TYPE,
    Owner_In IN All_Jobs.Schema_User%TYPE := NULL
  );

  -----------------------------------------------------------------------------
  -- 功能：取ZlDataMove描述
  -- 调用列表：
  -- frmAutoJobset.cmdUpdate_Click
  -----------------------------------------------------------------------------
  PROCEDURE Get_Depict
  (
    Cursor_Out  OUT t_Refcur,
    系统_In      IN Zldatamove.系统%TYPE,
    组号_In      IN Zldatamove.组号%TYPE
  );

  -----------------------------------------------------------------------------
  -- 功能：取Zl开头的过程名
  -- 调用列表：
  -- frmAutoJobset.cmdWhat_Click
  -----------------------------------------------------------------------------
  PROCEDURE Get_Zlprocedure_Name
  (
    Cur_Out  OUT t_Refcur,
    系统_In  IN VARCHAR2 := '',
    Owner_In IN All_Objects.Owner%TYPE
  );

  -----------------------------------------------------------------------------
  -- 功能：取指定过程的源代码
  -- 调用列表：
  -- frmAutoJobset.mnuWhat_Click
  -----------------------------------------------------------------------------
  PROCEDURE Get_Source
  (
    Cur_Out  OUT t_Refcur,
    过程_In  IN VARCHAR2,
    Owner_In IN All_Objects.Owner%TYPE
  );

  -----------------------------------------------------------------------------
  -- 功能：取zlClients的MAX IP
  -- 调用列表： 
  -- frmClientsEdit.InitCard
  -----------------------------------------------------------------------------
  PROCEDURE Get_Client_Maxip(Cur_Out OUT t_Refcur);

  -----------------------------------------------------------------------------
  -- 功能：取zlClients的记录
  -- 调用列表： 
  -- frmClientsEdit.InitCard、frmClientsParas.LoadClientsInfor、frmClientsUpgrade.LoadClientsInfor
  -- frmFilesSendToServer.LoadClientsInfor
  -----------------------------------------------------------------------------
  PROCEDURE Get_Client
  (
    Cur_Out   OUT t_Refcur,
    工作站_In IN Zlclients.工作站%TYPE := NULL
  );

  -----------------------------------------------------------------------------
  -- 功能：取zlClients的站点
  -- 调用列表：
  -- frmClientsParasSet.InitCard
  -----------------------------------------------------------------------------
  PROCEDURE Get_Client_Station(Cur_Out OUT t_Refcur);

  -----------------------------------------------------------------------------
  -- 功能：取方案号
  -- 调用列表：
  -- frmClientsParasSet.InitCard
  -----------------------------------------------------------------------------
  PROCEDURE Get_Project_No(Cur_Out OUT t_Refcur);

  -----------------------------------------------------------------------------
  -- 功能：取方案
  -- 调用列表：
  -- frmClientsParasSet.InitCard
  -----------------------------------------------------------------------------
  PROCEDURE Get_Client_Scheme(Cur_Out OUT t_Refcur);

  -----------------------------------------------------------------------------
  -- 功能：取恢复信息
  -- 调用列表：
  -- frmClientsParasSet.Load恢复方案、frmClientsParasSet.LoadScremeSet
  -----------------------------------------------------------------------------
  PROCEDURE Get_Resile
  (
    Cur_Out   OUT t_Refcur,
    方案号_In IN Zlclientparaset.方案号%TYPE,
    类型_In   IN NUMBER := 0
  );

  -----------------------------------------------------------------------------
  -- 功能：取zldataMove数据
  -- 调用列表：
  -- frmDataMove.cmbSystem_Click
  -----------------------------------------------------------------------------
  PROCEDURE Get_Zldatamove
  (
    Cur_Out OUT t_Refcur,
    系统_In IN Zldatamove.系统%TYPE
  );

  -----------------------------------------------------------------------------
  -- 功能：取日志数据
  -- 调用列表：
  -- FrmErrLog.RefreshData、FrmRunLog.RefreshData
  -----------------------------------------------------------------------------
  PROCEDURE Get_Log
  (
    Cur_Out     OUT t_Refcur,
    日志类型_In IN VARCHAR2,
    Where_In    IN VARCHAR2
  );

  -----------------------------------------------------------------------------
  -- 功能：取日志记录数
  -- 调用列表：
  -- FrmErrLog.DeleteExtra、FrmRunLog.DeleteExtra
  -----------------------------------------------------------------------------
  PROCEDURE Get_Log_Count
  (
    Cur_Out     OUT t_Refcur,
    日志类型_In IN VARCHAR2
  );

  -----------------------------------------------------------------------------
  -- 功能：取zlfilesupgradeg数据
  -- 调用列表：
  -- frmFilesSet.intBillInfor
  -----------------------------------------------------------------------------
  PROCEDURE Get_Zlfilesupgrade(Cur_Out OUT t_Refcur);

  -----------------------------------------------------------------------------
  -- 功能：取非注册项目
  -- 调用列表：
  -- frmRegist.Form_Load
  -----------------------------------------------------------------------------
  PROCEDURE Get_Not_Regist(Cur_Out OUT t_Refcur);

  -----------------------------------------------------------------------------
  -- 功能：取参数值
  -- 调用列表：
  -- FrmRunOption.InitCons
  -- zlAppTool.frmAlert.ConnectServer  
  -----------------------------------------------------------------------------
  PROCEDURE Get_Zloption
  (
    Cur_Out   OUT t_Refcur,
    参数号_In IN Zloptions.参数号%TYPE
  );

END b_Runmana;
/

CREATE OR REPLACE PACKAGE BODY ZLTOOLS.b_Datamana IS

  -----------------------------------------------------------------------------
  -- 功能：取禁止约束的SQL
  -----------------------------------------------------------------------------
  PROCEDURE Disable_Constraint_Sql
  (
    Cursor_Out   OUT t_Refcur,
    Tablename_In IN All_Constraints.Table_Name%TYPE
  ) IS
  BEGIN
    OPEN Cursor_Out FOR
      SELECT 'ALTER TABLE ' || d.Table_Name || ' DISABLE CONSTRAINT ' || d.Constraint_Name
      FROM All_Constraints u, All_Constraints d
      WHERE u.Owner = USER AND d.Owner = USER AND u.Table_Name = Tablename_In AND u.Constraint_Type IN ('P', 'U') AND
            u.Constraint_Name = d.r_Constraint_Name;
  EXCEPTION
    WHEN OTHERS THEN
      Zl_Errorcenter(SQLCODE, SQLERRM);
  END Disable_Constraint_Sql;

  -----------------------------------------------------------------------------
  -- 功能：取启用约束的SQL
  -----------------------------------------------------------------------------
  PROCEDURE Enable_Constraint_Sql(Cursor_Out OUT t_Refcur) IS
  BEGIN
    OPEN Cursor_Out FOR
      SELECT 'ALTER TABLE ' || Table_Name || ' ENABLE CONSTRAINT ' || Constraint_Name, Constraint_Name
      FROM All_Constraints
      WHERE Owner = USER AND Status = 'DISABLED';
  EXCEPTION
    WHEN OTHERS THEN
      Zl_Errorcenter(SQLCODE, SQLERRM);
  END Enable_Constraint_Sql;

  -----------------------------------------------------------------------------
  -- 功能：取表的字段名称
  -----------------------------------------------------------------------------
  PROCEDURE Get_Table_Column
  (
    Cursor_Out    OUT t_Refcur,
    Table_Name_In IN All_Tab_Columns.Table_Name%TYPE,
    Owner_In      IN All_Tab_Columns.Owner%TYPE := NULL
  ) IS
  BEGIN
    OPEN Cursor_Out FOR
      SELECT n.Column_Name AS n_Name, n.Data_Type AS n_Type, n.Data_Length AS n_Nlength, n.Data_Precision AS n_Precision,
             n.Data_Scale AS n_Scale, n.Data_Default AS n_Default
      FROM All_Tab_Columns n
      WHERE Owner = Owner_In AND Table_Name = Table_Name_In
      ORDER BY n.Column_Id;
  EXCEPTION
    WHEN OTHERS THEN
      Zl_Errorcenter(SQLCODE, SQLERRM);
  END Get_Table_Column;

END b_Datamana;
/

CREATE OR REPLACE PACKAGE BODY ZLTOOLS.b_Expert IS

  -----------------------------------------------------------------------------
  -- 取提醒数据
  -----------------------------------------------------------------------------
  PROCEDURE Get_Notices
  (
    Cursor_Out OUT t_Refcur,
    序号_In    IN Zlnotices.序号%TYPE,
    系统_In    IN Zlreports.系统%TYPE := NULL
  ) IS
  BEGIN
    IF Nvl(序号_In, 0) <> 0 THEN
      -- frmNoticesEdit.ReadData 使用
      OPEN Cursor_Out FOR
        SELECT a.提醒内容, a.提醒条件, a.提醒报表, a.提醒声音, a.提醒窗口, a.开始时间, a.终止时间, a.检查周期,
               b.名称 AS 报表名称
        FROM Zlnotices a, Zlreports b
        WHERE a.提醒报表 = b.编号(+) AND a.序号 = 序号_In;
    ELSE
      -- cboSystem_Click 使用 
      IF Nvl(系统_In, 0) = 0 THEN
        OPEN Cursor_Out FOR
          SELECT a.序号, a.提醒内容, a.提醒条件, a.提醒报表, a.提醒声音, a.提醒窗口, a.开始时间, a.终止时间, a.检查周期,
                 a.提醒周期, b.名称 AS 报表名称
          FROM Zlnotices a, Zlreports b
          WHERE a.提醒报表 = b.编号(+) AND a.系统 IS NULL;
      ELSE
        OPEN Cursor_Out FOR
          SELECT a.序号, a.提醒内容, a.提醒条件, a.提醒报表, a.提醒声音, a.提醒窗口, a.开始时间, a.终止时间, a.检查周期,
                 a.提醒周期, b.名称 AS 报表名称
          FROM Zlnotices a, Zlreports b
          WHERE a.提醒报表 = b.编号(+) AND a.系统 = 系统_In;
      END IF;
    END IF;
  
  END Get_Notices;

  -----------------------------------------------------------------------------
  -- 取提醒对像数据
  -----------------------------------------------------------------------------
  PROCEDURE Get_Noticeusr
  (
    Cursor_Out  OUT t_Refcur,
    提醒对象_In IN Zlnoticeusr.提醒对象%TYPE,
    提醒序号_In IN Zlnoticeusr.提醒序号%TYPE
  ) IS
  BEGIN
    IF Nvl(提醒对象_In, 0) = 0 THEN
      OPEN Cursor_Out FOR
        SELECT 1 FROM Zlnoticeusr WHERE Rownum < 2 AND 提醒序号 = 提醒序号_In;
    ELSE
      OPEN Cursor_Out FOR
        SELECT 对象名称 FROM Zlnoticeusr WHERE 提醒对象 = 提醒对象_In AND 提醒序号 = 提醒序号_In;
    END IF;
  END Get_Noticeusr;

  -----------------------------------------------------------------------------
  -- 取可以选择的提醒报表
  -----------------------------------------------------------------------------
  PROCEDURE Get_Noticereport
  (
    Cursor_Out OUT t_Refcur,
    系统_In    IN Zlreports.系统%TYPE
  ) IS
  BEGIN
    IF Nvl(系统_In, 0) = 0 THEN
      OPEN Cursor_Out FOR
        SELECT Id, 编号, 名称, 说明
        FROM Zlreports
        WHERE 编号 LIKE 'ZL%_REPORT_%' AND
              NOT (发布时间 IS NULL OR Trunc(发布时间) = To_Date('3000-01-01', 'yyyy-mm-dd')) AND Nvl(系统, 0) = 0;
    ELSE
      OPEN Cursor_Out FOR
        SELECT Id, 编号, 名称, 说明
        FROM Zlreports
        WHERE 编号 LIKE 'ZL%_REPORT_%' AND
              NOT (发布时间 IS NULL OR Trunc(发布时间) = To_Date('3000-01-01', 'yyyy-mm-dd')) AND 系统 = 系统_In;
    END IF;
  END Get_Noticereport;

  -----------------------------------------------------------------------------
  -- 在不同的系统间复制报表
  -----------------------------------------------------------------------------
  PROCEDURE Copy_Report
  (
    系统_In   IN Zlreports.系统%TYPE,
    新系统_In IN Zlreports.系统%TYPE
  ) IS
    n_Grpid   NUMBER;
    n_Rptid   NUMBER;
    n_Dataid  NUMBER;
    n_Itemid  NUMBER;
    v_Olduser VARCHAR2(100);
    v_Newuser VARCHAR2(100);
  
    FUNCTION Sub_Owner_Name(Lngsys_In IN NUMBER := 0) RETURN VARCHAR2 IS
      v_Owner_Name VARCHAR2(30);
    BEGIN
      SELECT Upper(所有者) AS 所有者 INTO v_Owner_Name FROM Zlsystems WHERE 编号 = Lngsys_In;
      RETURN v_Owner_Name;
    END Sub_Owner_Name;
  
  BEGIN
    SELECT Nvl(MAX(Id), 0) INTO n_Grpid FROM Zlrptgroups;
    SELECT Nvl(MAX(Id), 0) INTO n_Rptid FROM Zlreports;
    SELECT Nvl(MAX(Id), 0) INTO n_Dataid FROM Zlrptdatas;
    SELECT Nvl(MAX(Id), 0) INTO n_Itemid FROM Zlrptitems;
    n_Grpid  := n_Grpid + 1;
    n_Rptid  := n_Rptid + 1;
    n_Dataid := n_Dataid + 1;
    n_Itemid := n_Itemid + 1;
  
    v_Olduser := Upper(Sub_Owner_Name(系统_In));
    v_Newuser := Upper(Sub_Owner_Name(新系统_In));
  
    INSERT INTO Zlrptgroups
      (Id, 编号, 名称, 说明, 系统, 程序id, 发布时间)
      SELECT Id + n_Grpid, 编号, 名称, 说明, 新系统_In, 程序id, 发布时间 FROM Zlrptgroups WHERE 系统 = 系统_In;
  
    INSERT INTO Zlreports
      (Id, 编号, 名称, 说明, 密码, w, h, 纸张, 纸向, 进纸, 打印机, 票据, 系统, 程序id, 功能, 修改时间, 发布时间)
      SELECT Id + n_Rptid, 编号, 名称, 说明, 密码, w, h, 纸张, 纸向, 进纸, 打印机, 票据, 新系统_In, 程序id, 功能,
             修改时间, 发布时间
      FROM Zlreports
      WHERE 系统 = 系统_In;
  
    -- 插入zlRPTSub
    INSERT INTO Zlrptsubs
      (组id, 报表id, 序号, 功能)
      SELECT a.组id + n_Grpid, a.报表id + n_Rptid, a.序号, a.功能
      FROM Zlrptsubs a, Zlrptgroups b
      WHERE a.组id = b.Id AND b.系统 = 系统_In;
  
    -- 插入zlRPTFMTs
    INSERT INTO Zlrptfmts
      (报表id, 序号, 说明, 图样)
      SELECT a.报表id + n_Rptid, a.序号, a.说明, a.图样
      FROM Zlrptfmts a, Zlreports b
      WHERE a.报表id = b.Id AND b.系统 = 系统_In;
  
    -- 插入zlRPTItems
    INSERT INTO Zlrptitems
      (Id, 报表id, 格式号, 名称, 类型, 上级id, 序号, 参照, 性质, 内容, 表头, x, y, w, h, 行高, 对齐, 自调, 字体, 字号,
       粗体, 斜体, 下线, 前景, 背景, 边框, 排序, 格式, 汇总, 分栏, 网格, 系统)
      SELECT a.Id + n_Itemid, a.报表id + n_Rptid, a.格式号, a.名称, a.类型, a.上级id + n_Itemid, a.序号, a.参照, a.性质,
             a.内容, a.表头, a.x, a.y, a.w, a.h, a.行高, a.对齐, a.自调, a.字体, a.字号, a.粗体, a.斜体, a.下线, a.前景,
             a.背景, a.边框, a.排序, a.格式, a.汇总, a.分栏, a.网格, a.系统
      FROM Zlrptitems a, Zlreports b
      WHERE a.报表id = b.Id AND b.系统 = 系统_In;
    -- 插入zlRptDatas
    INSERT INTO Zlrptdatas
      (Id, 报表id, 名称, 字段, 对象, 类型)
      SELECT a.Id + n_Dataid, a.报表id + n_Rptid, a.名称, a.字段, a.对象, a.类型
      FROM Zlrptdatas a, Zlreports b
      WHERE a.报表id = b.Id AND b.系统 = 系统_In;
    -- 插入zlRPTSqls
    INSERT INTO Zlrptsqls
      (源id, 行号, 内容)
      SELECT a.源id + n_Dataid, a.行号, a.内容
      FROM Zlrptsqls a, Zlrptdatas b, Zlreports c
      WHERE a.源id = b.Id AND b.报表id = c.Id AND c.系统 = 系统_In;
  
    -- 插入zlRPTPars
    INSERT INTO Zlrptpars
      (源id, 组名, 序号, 名称, 类型, 缺省值, 格式, 值列表, 分类sql, 明细sql, 分类字段, 明细字段, 对象)
      SELECT a.源id + n_Dataid, a.组名, a.序号, a.名称, a.类型, a.缺省值, a.格式, a.值列表, a.分类sql, a.明细sql,
             a.分类字段, a.明细字段, a.对象
      FROM Zlrptpars a, Zlrptdatas b, Zlreports c
      WHERE a.源id = b.Id AND b.报表id = c.Id AND c.系统 = 系统_In;
  
    -- zlFunctions数据
    INSERT INTO Zlfunctions
      (系统, 函数号, 函数名, 中文名, 说明)
      SELECT 新系统_In, 函数号, 函数名, 中文名, 说明 FROM Zlfunctions WHERE 系统 = 系统_In;
  
    -- zlFuncPars数据
    INSERT INTO Zlfuncpars
      (系统, 函数号, 参数号, 参数名, 中文名, 类型, 缺省值, 值列表, 分类sql, 明细sql, 分类字段, 明细字段, 对象, 组名,
       递增否)
      SELECT 新系统_In, 函数号, 参数号, 参数名, 中文名, 类型, 缺省值, 值列表, 分类sql, 明细sql, 分类字段, 明细字段, 对象,
             组名, 递增否
      FROM Zlfuncpars
      WHERE 系统 = 系统_In;
  
    -- 重新设置数据源对象
    UPDATE Zlrptdatas
    SET 对象 = REPLACE(对象, v_Olduser || '.', v_Newuser || '.')
    WHERE Id IN (SELECT a.Id FROM Zlrptdatas a, Zlreports b WHERE a.报表id = b.Id AND b.系统 = 新系统_In);
  
    UPDATE Zlrptpars
    SET 对象 = REPLACE(对象, v_Olduser || '.', v_Newuser || '.')
    WHERE 源id IN (SELECT a.Id FROM Zlrptdatas a, Zlreports b WHERE a.报表id = b.Id AND b.系统 = 新系统_In);
  
    UPDATE Zlfuncpars SET 对象 = REPLACE(对象, v_Olduser || '.', v_Newuser || '.') WHERE 系统 = 新系统_In;
  
    COMMIT;
  EXCEPTION
    WHEN OTHERS THEN
      Zl_Errorcenter(SQLCODE, SQLERRM);
  END Copy_Report;

END b_Expert;
/

CREATE OR REPLACE PACKAGE BODY ZLTOOLS.b_Loadandunload IS

  -----------------------------------------------------------------------------
  -- 功能：取约束信息
  -----------------------------------------------------------------------------
  PROCEDURE Get_Constraint
  (
    Cursor_Out OUT t_Refcur,
    Owner_In   IN VARCHAR2 := NULL,
    Type_In    IN NUMBER := 0
  ) IS
  BEGIN
    IF Type_In = 0 THEN
      -- frmAppCheck.CheckConstraint使用、frmImp.cmdExecute_Click使用
      OPEN Cursor_Out FOR
        SELECT a.Constraint_Type, a.Constraint_Name, a.Status, a.Validated, a.Bad, a.Table_Name
        FROM All_Constraints a
        WHERE a.Owner = Owner_In;
    ELSE
      -- frmClearData.cmbSystem_Click 
      OPEN Cursor_Out FOR
        SELECT a.Table_Name, b.Table_Name r_Table_Name, a.Delete_Rule
        FROM All_Constraints a, All_Constraints b
        WHERE a.Owner = Owner_In AND b.Owner = Owner_In AND a.r_Owner = b.Owner AND
              a.r_Constraint_Name = b.Constraint_Name;
    END IF;
  EXCEPTION
    WHEN OTHERS THEN
      Zl_Errorcenter(SQLCODE, SQLERRM);
  END Get_Constraint;

  -----------------------------------------------------------------------------
  -- 功能：取约束字段名称
  -----------------------------------------------------------------------------
  PROCEDURE Get_Constraint_Column
  (
    Cursor_Out         OUT t_Refcur,
    Constraint_Name_In IN VARCHAR2,
    Owner_In           IN VARCHAR2 := NULL
  ) IS
  BEGIN
    OPEN Cursor_Out FOR
      SELECT Column_Name
      FROM All_Cons_Columns
      WHERE Owner = Owner_In AND Constraint_Name = Constraint_Name_In
      ORDER BY Position;
  EXCEPTION
    WHEN OTHERS THEN
      Zl_Errorcenter(SQLCODE, SQLERRM);
  END Get_Constraint_Column;

  -----------------------------------------------------------------------------
  -- 功能：取约束相关表名称
  -----------------------------------------------------------------------------
  PROCEDURE Get_Constraint_Table
  (
    Cursor_Out    OUT t_Refcur,
    Table_Name_In IN All_Constraints.Table_Name%TYPE,
    Owner_In      IN All_Constraints.Owner%TYPE
  ) IS
  BEGIN
    OPEN Cursor_Out FOR
      SELECT Table_Name
      FROM (SELECT Table_Name, Constraint_Name
             FROM All_Constraints
             WHERE Owner = Owner_In AND Table_Name <> Table_Name_In) t,
           (SELECT DISTINCT r_Constraint_Name
             FROM All_Constraints
             WHERE Owner = Owner_In AND Constraint_Type = 'R' AND Table_Name = Table_Name_In) r
      WHERE t.Constraint_Name = r.r_Constraint_Name;
  EXCEPTION
    WHEN OTHERS THEN
      Zl_Errorcenter(SQLCODE, SQLERRM);
  END Get_Constraint_Table;

  -----------------------------------------------------------------------------
  -- 功能：取索引名称
  -----------------------------------------------------------------------------
  PROCEDURE Get_Index_Status
  (
    Cursor_Out OUT t_Refcur,
    Owner_In   IN VARCHAR2 := NULL
  ) IS
  BEGIN
    OPEN Cursor_Out FOR
      SELECT Index_Name, Status
      FROM All_Indexes
      WHERE Tablespace_Name IS NOT NULL AND Index_Type = 'NORMAL' AND Owner = Owner_In AND Table_Owner = Owner_In;
  
  EXCEPTION
    WHEN OTHERS THEN
      Zl_Errorcenter(SQLCODE, SQLERRM);
  END Get_Index_Status;

  -----------------------------------------------------------------------------
  -- 功能：取索引字段
  -----------------------------------------------------------------------------
  PROCEDURE Get_Index_Column
  (
    Cursor_Out     OUT t_Refcur,
    Index_Name_In  IN VARCHAR2,
    Index_Owner_In IN VARCHAR2 := NULL
  ) IS
  BEGIN
    OPEN Cursor_Out FOR
      SELECT Table_Name, Column_Name
      FROM All_Ind_Columns
      WHERE Index_Owner = Index_Owner_In AND Index_Name = Index_Name_In
      ORDER BY Column_Position;
  EXCEPTION
    WHEN OTHERS THEN
      Zl_Errorcenter(SQLCODE, SQLERRM);
  END Get_Index_Column;

  -----------------------------------------------------------------------------
  -- 功能：取存储过程，函数名称
  -----------------------------------------------------------------------------
  PROCEDURE Get_Program
  (
    Cursor_Out OUT t_Refcur,
    Owner_In   IN VARCHAR2 := NULL
  ) IS
  BEGIN
    OPEN Cursor_Out FOR
      SELECT Object_Type, Object_Name, Status
      FROM All_Objects
      WHERE Object_Type IN ('PROCEDURE', 'FUNCTION') AND Owner = Owner_In;
  EXCEPTION
    WHEN OTHERS THEN
      Zl_Errorcenter(SQLCODE, SQLERRM);
  END Get_Program;

  -----------------------------------------------------------------------------
  -- 功能：取序列名称
  -----------------------------------------------------------------------------
  PROCEDURE Get_Sequence
  (
    Cursor_Out        OUT t_Refcur,
    Sequence_Owner_In IN VARCHAR2 := NULL
  ) IS
  BEGIN
    OPEN Cursor_Out FOR
      SELECT Sequence_Name FROM All_Sequences WHERE Sequence_Owner = Sequence_Owner_In;
  EXCEPTION
    WHEN OTHERS THEN
      Zl_Errorcenter(SQLCODE, SQLERRM);
  END Get_Sequence;

  -----------------------------------------------------------------------------
  -- 功能：取表名称
  -----------------------------------------------------------------------------
  PROCEDURE Get_Table
  (
    Cursor_Out OUT t_Refcur,
    Owner_In   IN VARCHAR2 := NULL
  ) IS
  BEGIN
    OPEN Cursor_Out FOR
      SELECT Table_Name FROM All_Tables WHERE Owner = Upper(Owner_In) ORDER BY Table_Name;
  EXCEPTION
    WHEN OTHERS THEN
      Zl_Errorcenter(SQLCODE, SQLERRM);
  END Get_Table;

  -----------------------------------------------------------------------------
  -- 功能：取CK表的字段名称  
  -----------------------------------------------------------------------------
  PROCEDURE Get_Ck_Table_Column
  (
    Cursor_Out    OUT t_Refcur,
    Table_Name_In IN VARCHAR2,
    Owner_In      IN VARCHAR2 := NULL
  ) IS
  BEGIN
    OPEN Cursor_Out FOR
      SELECT n.Column_Name AS n_Name, n.Data_Type AS n_Type, n.Data_Length AS n_Nlength, n.Data_Precision AS n_Precision,
             n.Data_Scale AS n_Scale, n.Data_Default AS n_Default, o.Column_Name AS o_Name, o.Data_Type AS o_Type,
             o.Data_Length AS o_Nlength, o.Data_Precision AS o_Precision, o.Data_Scale AS o_Scale,
             o.Data_Default AS o_Default
      FROM (SELECT Column_Name, Data_Type, Data_Length, Data_Precision, Data_Scale, Data_Default, Column_Id
             FROM All_Tab_Columns
             WHERE Owner = Owner_In AND Table_Name = 'CK' || Table_Name_In) n,
           (SELECT Column_Name, Data_Type, Data_Length, Data_Precision, Data_Scale, Data_Default
             FROM All_Tab_Columns
             WHERE Owner = Owner_In AND Table_Name = Table_Name_In) o
      WHERE n.Column_Name = o.Column_Name(+) AND n.Data_Type = o.Data_Type(+)
      ORDER BY n.Column_Id;
  EXCEPTION
    WHEN OTHERS THEN
      Zl_Errorcenter(SQLCODE, SQLERRM);
  END Get_Ck_Table_Column;

  -----------------------------------------------------------------------------
  -- 功能：取视图名称
  -----------------------------------------------------------------------------
  PROCEDURE Get_View
  (
    Cursor_Out OUT t_Refcur,
    Owner_In   IN VARCHAR2 := NULL
  ) IS
  BEGIN
    OPEN Cursor_Out FOR
      SELECT View_Name FROM All_Views WHERE Owner = Owner_In;
  EXCEPTION
    WHEN OTHERS THEN
      Zl_Errorcenter(SQLCODE, SQLERRM);
  END Get_View;

  -----------------------------------------------------------------------------
  -- 功能：取有序列的表名称
  -----------------------------------------------------------------------------
  PROCEDURE Get_Sequence_Table
  (
    Cursor_Out OUT t_Refcur,
    Owner_In   IN All_Tab_Columns.Owner%TYPE
  ) IS
  BEGIN
    OPEN Cursor_Out FOR
      SELECT c.Owner, c.Table_Name
      FROM (SELECT Owner, Table_Name, Column_Name
             FROM All_Tab_Columns
             WHERE Upper(Owner) = Upper(Owner_In) AND Column_Name = 'ID') c, All_Sequences s
      WHERE c.Owner = s.Sequence_Owner AND c.Table_Name || '_ID' = s.Sequence_Name;
  EXCEPTION
    WHEN OTHERS THEN
      Zl_Errorcenter(SQLCODE, SQLERRM);
  END Get_Sequence_Table;

  -----------------------------------------------------------------------------
  -- 功能：取删除外键，索引的语句
  -----------------------------------------------------------------------------
  PROCEDURE Get_Dropindex_Sql
  (
    Cursor_Out OUT t_Refcur,
    Type_In    IN VARCHAR2
  ) IS
  BEGIN
    IF Type_In = '外键' THEN
      OPEN Cursor_Out FOR
        SELECT 'alter table ' || Table_Name || ' drop constraint ' || Constraint_Name
        FROM All_Constraints
        WHERE Owner = USER AND Constraint_Type IN ('R', 'C');
    END IF;
    IF Type_In = '主键' THEN
      OPEN Cursor_Out FOR
        SELECT 'alter table ' || Table_Name || ' drop constraint ' || Constraint_Name
        FROM All_Constraints
        WHERE Owner = USER;
    END IF;
    IF Type_In = '索引' THEN
      OPEN Cursor_Out FOR
        SELECT 'drop Index ' || Index_Name FROM All_Indexes WHERE Owner = USER;
    END IF;
  EXCEPTION
    WHEN OTHERS THEN
      Zl_Errorcenter(SQLCODE, SQLERRM);
  END Get_Dropindex_Sql;

  -----------------------------------------------------------------------------
  -- 功能：取有SysFiles表的文件名
  -----------------------------------------------------------------------------
  PROCEDURE Get_Sysfile_Name
  (
    Cursor_Out OUT t_Refcur,
    系统_In    IN Zlsysfiles.系统%TYPE,
    操作_In    IN Zlsysfiles.操作%TYPE
  ) IS
  BEGIN
    OPEN Cursor_Out FOR
      SELECT 文件名 FROM Zlsysfiles WHERE 系统 = 系统_In AND 操作 = 操作_In;
  EXCEPTION
    WHEN OTHERS THEN
      Zl_Errorcenter(SQLCODE, SQLERRM);
  END Get_Sysfile_Name;

  -----------------------------------------------------------------------------
  -- 功能：取共享系统名称
  -----------------------------------------------------------------------------
  PROCEDURE Get_Share_Name
  (
    Cursor_Out OUT t_Refcur,
    共享号_In  IN Zlsystems.编号%TYPE
  ) IS
  BEGIN
    OPEN Cursor_Out FOR
      SELECT 名称 FROM Zlsystems START WITH 共享号 = 共享号_In CONNECT BY PRIOR 编号 = 共享号;
  EXCEPTION
    WHEN OTHERS THEN
      Zl_Errorcenter(SQLCODE, SQLERRM);
  END Get_Share_Name;

  -----------------------------------------------------------------------------
  -- 功能：取Oracle版本号
  -----------------------------------------------------------------------------
  PROCEDURE Get_Oracle_Ver(Cursor_Out Out t_Refcur) IS
  BEGIN
    Open cursor_out For 
    SELECT To_Number(replace(Substr(Banner, 6, 4),'.','')) As OracleVer FROM V$version WHERE Substr(Banner, 1, 4) = 'CORE';
  EXCEPTION
    WHEN OTHERS THEN
      Zl_Errorcenter(SQLCODE, SQLERRM);
  END Get_Oracle_Ver;

  -----------------------------------------------------------------------------
  -- 功能：取无效的对象
  -----------------------------------------------------------------------------
  PROCEDURE Get_Invalid_Object(Cursor_Out OUT t_Refcur) IS
  BEGIN
    OPEN Cursor_Out FOR
      SELECT Owner, Object_Name, Object_Type, Created, Last_Ddl_Time
      FROM All_Objects
      WHERE Object_Type IN ('PROCEDURE', 'FUNCTION', 'VIEW', 'MATERIALIZED VIEW', 'TRIGGER', 'PACKAGE', 'PACKAGE BODY',
             'TYPE', 'TYPE BODY') AND Object_Name NOT LIKE 'BIN$%' AND Status = 'INVALID'
      ORDER BY Object_Type, Decode(Owner, USER, 0, 1), Owner, Object_Name;
  EXCEPTION
    WHEN OTHERS THEN
      Zl_Errorcenter(SQLCODE, SQLERRM);
  END Get_Invalid_Object;

  -----------------------------------------------------------------------------
  -- 功能：取引用关系表
  -----------------------------------------------------------------------------
  PROCEDURE Get_Dependencies(Cursor_Out OUT t_Refcur) IS
  BEGIN
    OPEN Cursor_Out FOR
      SELECT Owner, NAME, TYPE, Referenced_Owner, Referenced_Name, Referenced_Type
      FROM All_Dependencies
      WHERE TYPE IN ('PROCEDURE', 'FUNCTION', 'VIEW', 'MATERIALIZED VIEW', 'TRIGGER', 'PACKAGE', 'PACKAGE BODY', 'TYPE',
             'TYPE BODY') AND Referenced_Type IN ('PROCEDURE', 'FUNCTION', 'VIEW', 'MATERIALIZED VIEW', 'TRIGGER',
             'PACKAGE', 'PACKAGE BODY', 'TYPE', 'TYPE BODY') AND NAME NOT LIKE 'BIN$%' AND
            Referenced_Name NOT LIKE 'BIN$%';
  EXCEPTION
    WHEN OTHERS THEN
      Zl_Errorcenter(SQLCODE, SQLERRM);
  END Get_Dependencies;

  -----------------------------------------------------------------------------
  -- 功能：取编译错误信息
  -----------------------------------------------------------------------------
  PROCEDURE Get_Errinfo
  (
    Cursor_Out OUT t_Refcur,
    Owner_In   IN All_Errors.Owner%TYPE,
    Name_In    IN All_Errors.NAME%TYPE,
    Type_In    IN All_Errors.TYPE%TYPE
  ) IS
  BEGIN
    OPEN Cursor_Out FOR
      SELECT Owner, NAME, TYPE, Sequence, Line, Text
      FROM All_Errors
      WHERE Owner = Owner_In AND NAME = Name_In AND TYPE = Type_In
      ORDER BY Sequence;
  EXCEPTION
    WHEN OTHERS THEN
      Zl_Errorcenter(SQLCODE, SQLERRM);
  END Get_Errinfo;

END b_Loadandunload;
/

Create Or Replace Package Body zltools.b_Popedom Is

  -----------------------------------------------------------------------------
  -- 功能：CopyMenu
  -----------------------------------------------------------------------------
  Procedure Copy_Menu
  (
    系统_In   In zlMenus.系统%Type,
    新系统_In In zlMenus.系统%Type
  ) Is
    n_Menuid zlMenus.ID%Type;
  Begin
    Select Max(ID) Into n_Menuid From zlMenus;
    n_Menuid := Nvl(n_Menuid, 0) + 1;
    Insert Into zlMenus
      (组别, ID, 上级id, 标题, 短标题, 快键, 图标, 说明, 模块, 系统)
      Select 组别, ID + n_Menuid, 上级id + n_Menuid, 标题, 短标题, 快键, 图标, 说明, 模块, 新系统_In
      From zlMenus
      Where 系统 = 系统_In;
    Commit;
  Exception
    When Others Then
      Zl_Errorcenter(Sqlcode, Sqlerrm);
  End Copy_Menu;

  -----------------------------------------------------------------------------
  -- 功能：取ZlMenu数据
  -----------------------------------------------------------------------------
  Procedure Get_Menu_Tree
  (
    Cursor_Out Out t_Refcur,
    组别_In    In zlMenus.组别%Type
  ) Is
  Begin
    Open Cursor_Out For
      Select ID, 上级id, 标题, 快键, 说明, 系统, 模块, 短标题, 图标, Level As 级数
      From zlMenus
      Start With 上级id Is Null And 组别 = 组别_In
      Connect By Prior ID = 上级id And 组别 = 组别_In
      Order By Level, ID;
  End Get_Menu_Tree;

  -----------------------------------------------------------------------------
  -- 功能：取ZlMenu数据
  -----------------------------------------------------------------------------
  Procedure Get_Menu_Group
  (
    Cursor_Out Out t_Refcur,
    组别_In    In zlMenus.组别%Type
  ) Is
  Begin
    If 组别_In Is Null Then
      -- frmMenu.FillMenuName
      Open Cursor_Out For
        Select Distinct 组别 From zlMenus;
    Else
      -- frmMenu.cmdNew_Click
      Open Cursor_Out For
        Select Count(*) As 数量 From zlMenus Where 组别 = 组别_In;
    End If;
  End Get_Menu_Group;

  -----------------------------------------------------------------------------
  -- 功能：核实权限
  -----------------------------------------------------------------------------
  Procedure Verify_Impower
  (
    Cursor_Out Out t_Refcur,
    系统_In    In zlReports.系统%Type,
    Owner_In   In All_Objects.Owner%Type
  ) Is
  Begin
    Open Cursor_Out For
      Select L.序号, L.标题, L.系统, P.功能, P.对象, P.所有者, P.权限
      From zlPrograms L, zlProgPrivs P,
           (Select Table_Schema As 所有者, Table_Name As 对象, Privilege As 权限
             From All_Tab_Privs
             Where Grantable = 'YES'
             Union
             Select Owner, Object_Name, 'ALTER'
             From All_Objects
             Where Owner = Owner_In And Object_Type In ('TABLE', 'SEQUENCE')
             Union
             Select Owner, Object_Name, 'DELETE'
             From All_Objects
             Where Owner = Owner_In And Object_Type In ('TABLE', 'VIEW')
             Union
             Select Owner, Object_Name, 'EXECUTE'
             From All_Objects
             Where Owner = Owner_In And Object_Type In ('PACKAGE', 'PROCEDURE', 'FUNCTION', 'TYPE')
             Union
             Select Owner, Object_Name, 'INDEX'
             From All_Objects
             Where Owner = Owner_In And Object_Type = 'TABLE'
             Union
             Select Owner, Object_Name, 'INSERT'
             From All_Objects
             Where Owner = Owner_In And Object_Type In ('TABLE', 'VIEW')
             Union
             Select Owner, Object_Name, 'REFERENCES'
             From All_Objects
             Where Owner = Owner_In And Object_Type = 'TABLE'
             Union
             Select Owner, Object_Name, 'SELECT'
             From All_Objects
             Where Owner = Owner_In And Object_Type In ('TABLE', 'VIEW', 'SEQUENCE')
             Union
             Select Owner, Object_Name, 'UPDATE'
             From All_Objects
             Where Owner = Owner_In And Object_Type In ('TABLE', 'VIEW')) R
      Where Nvl(L.系统, 0) = Nvl(P.系统, 0) And L.序号 = P.序号 And Upper(P.对象) = R.对象(+) And
            Upper(P.所有者) = R.所有者(+) And Upper(P.权限) = R.权限(+) And R.对象 Is Null And Nvl(L.系统, 0) = 系统_In;
  End Verify_Impower;

  -----------------------------------------------------------------------------
  -- 功能：取模块
  -----------------------------------------------------------------------------
  Procedure Get_Module
  (
    Cursor_Out Out t_Refcur,
    系统_In    In zlComponent.系统%Type
  ) Is
  Begin
    Open Cursor_Out For
      Select P.序号, P.标题, C.名称 As 部件
      From zlPrograms P, zlComponent C
      Where Upper(P.部件) = Upper(C.部件) And C.系统 = 系统_In And P.系统 = 系统_In
      Order By C.名称, P.序号;
  End Get_Module;

  -----------------------------------------------------------------------------
  -- 功能：取功能或排列，说明
  -----------------------------------------------------------------------------
  Procedure Get_Function
  (
    Cursor_Out Out t_Refcur,
    系统_In    In zlProgFuncs.系统%Type,
    序号_In    In zlProgFuncs.序号%Type,
    功能_In    In zlProgFuncs.功能%Type := Null
  ) Is
  Begin
    If Nvl(功能_In, '空') = '空' Then
      Open Cursor_Out For
        Select 功能 From zlProgFuncs Where 系统 = 系统_In And 序号 = 序号_In Order By Nvl(排列, 0);
    Else
      Open Cursor_Out For
        Select 排列, 说明 From zlProgFuncs Where 系统 = 系统_In And 序号 = 序号_In And 功能 = 功能_In;
    End If;
  End Get_Function;

  -----------------------------------------------------------------------------
  -- 功能：取表权限
  -----------------------------------------------------------------------------
  Procedure Get_Impower
  (
    Cursor_Out Out t_Refcur,
    系统_In    In zlProgPrivs.系统%Type,
    序号_In    In zlProgPrivs.序号%Type,
    功能_In    In zlProgPrivs.功能%Type
  ) Is
  Begin
    Open Cursor_Out For
      Select 对象, Sum(Decode(权限, 'SELECT', 1, 0)) As "SELECT", Sum(Decode(权限, 'UPDATE', 1, 0)) As "UPDATE",
             Sum(Decode(权限, 'INSERT', 1, 0)) As "INSERT", Sum(Decode(权限, 'DELETE', 1, 0)) As "DELETE",
             Sum(Decode(权限, 'EXECUTE', 1, 0)) As "EXECUTE"
      From zlProgPrivs
      Where 系统 = 系统_In And 序号 = 序号_In And 功能 = 功能_In
      Group By 对象
      Order By 对象;
  End Get_Impower;

  -----------------------------------------------------------------------------
  -- 功能：取objects
  -----------------------------------------------------------------------------
  Procedure Get_Objects
  (
    Cursor_Out Out t_Refcur,
    Owner_In   In All_Objects.Owner%Type
  ) Is
  Begin
    Open Cursor_Out For
      Select Distinct Object_Name, Object_Type
      From All_Objects
      Where Owner = Owner_In And
            Object_Type In ('FUNCTION', 'PACKAGE', 'PROCEDURE', 'TYPE', 'SEQUENCE', 'TABLE', 'VIEW');
  End Get_Objects;

  -----------------------------------------------------------------------------
  -- 功能：得到可以授权的所有者名称
  -----------------------------------------------------------------------------
  Procedure Get_All_Owner(Cursor_Out Out t_Refcur) Is
  Begin
    Open Cursor_Out For
      Select S.所有者 From All_Tables T, zlSystems S Where T.Table_Name = '部门表' And T.Owner = S.所有者;
  End Get_All_Owner;

  -----------------------------------------------------------------------------
  -- 功能：得到角色能访问的基础表
  -----------------------------------------------------------------------------
  Procedure Get_Role_Table
  (
    Cursor_Out Out t_Refcur,
    Grantee_In In All_Tab_Privs.Grantee%Type
  ) Is
  Begin
    Open Cursor_Out For
      Select T.系统, T.表名, T.说明
      From (Select S.名称 || '（' || S.编号 || '）' As 系统, S.所有者, B.表名, B.说明
             From zlSystems S, zlBaseCode B
             Where B.系统 = S.编号) T,
           (Select Grantor As Owner, Grantee, Table_Name, Privilege From All_Tab_Privs Where Grantor = User) R
      Where T.所有者 = R.Owner And T.表名 = R.Table_Name And R.Grantee = Grantee_In And
            R.Privilege In ('SELECT', 'INSERT', 'UPDATE', 'DELETE')
      Group By T.系统, T.表名, T.说明
      Having Count(R.Privilege) = 4;
  End Get_Role_Table;

  -----------------------------------------------------------------------------
  -- 功能：得到角色能访问的函数
  -----------------------------------------------------------------------------
  Procedure Get_Role_Function
  (
    Cursor_Out Out t_Refcur,
    Grantee_In In All_Tab_Privs.Grantee%Type
  ) Is
  Begin
    Open Cursor_Out For
      Select S.名称 || '（' || S.编号 || '）' As 系统, S.所有者, F.函数名, F.中文名, F.说明
      From zlSystems S, zlFunctions F,
           (Select Grantor As Owner, Grantee, Table_Name, Privilege From All_Tab_Privs Where Grantor = User) R
      Where F.系统 = S.编号 And S.所有者 = R.Owner And Upper(F.函数名) = R.Table_Name And R.Grantee = Grantee_In And
            R.Privilege = 'EXECUTE';
  End Get_Role_Function;

  -----------------------------------------------------------------------------
  -- 功能：得到角色能访问的导航台工具
  -----------------------------------------------------------------------------
  Procedure Get_Role_Tools
  (
    Cursor_Out Out t_Refcur,
    角色_In    In zlRoleGrant.角色%Type
  ) Is
  Begin
    Open Cursor_Out For
      Select P.序号, P.标题, P.说明, R.功能
      From zlRoleGrant R, zlPrograms P
      Where R.系统 Is Null And P.序号 = R.序号 And R.角色 = 角色_In And P.系统 Is Null And P.序号 < 100 And
            P.部件 Is Null
      Order By P.序号;
  End Get_Role_Tools;

  -----------------------------------------------------------------------------
  -- 功能：得到角色能访问的模块
  -----------------------------------------------------------------------------
  Procedure Get_Role_Module
  (
    Cursor_Out Out t_Refcur,
    角色_In    In zlRoleGrant.角色%Type,
    系统_In    In zlPrograms.系统%Type
  ) Is
  Begin
    If Nvl(系统_In, 0) = 0 Then
      Open Cursor_Out For
        Select P.序号, P.标题, P.说明, R.功能
        From zlRoleGrant R, zlPrograms P
        Where Nvl(R.系统, 0) = Nvl(P.系统, 0) And P.序号 = R.序号 And P.序号 >= 100 And R.角色 = 角色_In And
              P.系统 Is Null
        Order By P.序号;
    Else
      Open Cursor_Out For
        Select P.序号, P.标题, P.说明, R.功能
        From zlRoleGrant R, zlPrograms P
        Where Nvl(R.系统, 0) = Nvl(P.系统, 0) And P.序号 = R.序号 And P.序号 >= 100 And R.角色 = 角色_In And
              P.系统 = 系统_In
        Order By P.序号;
    End If;
  End Get_Role_Module;

  -----------------------------------------------------------------------------
  -- 功能：得到以前的权限
  -----------------------------------------------------------------------------
  Procedure Get_Role_Grant
  (
    Curgrand_Out    Out t_Refcur,
    Curprivs_Out    Out t_Refcur,
    Curfuncpars_Out Out t_Refcur,
    角色_In         In zlRoleGrant.角色%Type
  ) Is
  Begin
    Open Curgrand_Out For
      Select Nvl(系统, 0) As 系统, 序号, 功能 From zlRoleGrant Where 角色 = 角色_In;
    Open Curprivs_Out For
      Select Nvl(系统, 0) As 系统, 序号, 功能, 所有者, 权限, 对象 From zlProgPrivs;
    Open Curfuncpars_Out For
      Select P.系统, F.函数名, P.对象
      From zlFuncPars P, zlFunctions F
      Where P.系统 = F.系统 And P.函数号 = F.函数号 And P.对象 Is Not Null;
  End Get_Role_Grant;

  -----------------------------------------------------------------------------
  -- 功能：得到编码表原有授权
  -----------------------------------------------------------------------------
  Procedure Get_Old_Impower
  (
    Cursor_Out Out t_Refcur,
    角色_In    In All_Tab_Privs.Grantee%Type
  ) Is
  Begin
    Open Cursor_Out For
      Select T.系统, T.所有者, T.表名, R.Table_Name
      From (Select S.名称 || '（' || S.编号 || '）' As 系统, S.所有者, B.表名, B.说明
             From zlSystems S, zlBaseCode B
             Where B.系统 = S.编号) T,
           (Select 所有者, 对象
             From (Select Table_Schema As 所有者, Table_Name As 对象, Privilege As 权限
                    From All_Tab_Privs
                    Where Privilege In ('SELECT', 'INSERT', 'UPDATE', 'DELETE') And Grantable = 'YES'
                    Union
                    Select Owner, Object_Name, 'DELETE'
                    From All_Objects
                    Where Owner = User And Object_Type = 'TABLE'
                    Union
                    Select Owner, Object_Name, 'INSERT'
                    From All_Objects
                    Where Owner = User And Object_Type = 'TABLE'
                    Union
                    Select Owner, Object_Name, 'SELECT'
                    From All_Objects
                    Where Owner = User And Object_Type = 'TABLE'
                    Union
                    Select Owner, Object_Name, 'UPDATE' From All_Objects Where Owner = User And Object_Type = 'TABLE')
             Group By 所有者, 对象
             Having Count(权限) = 4) G,
           (Select Grantor As Owner, Table_Name
             From All_Tab_Privs
             Where Grantor = User And Grantee = 角色_In And Privilege In ('SELECT', 'INSERT', 'UPDATE', 'DELETE')
             Group By Grantor, Table_Name
             Having Count(Privilege) = 4) R
      Where T.所有者 = G.所有者 And T.表名 = G.对象 And T.所有者 = R.Owner(+) And T.表名 = R.Table_Name(+);
  End Get_Old_Impower;

  -----------------------------------------------------------------------------
  -- 功能：得到函数原有授权
  -----------------------------------------------------------------------------
  Procedure Get_Old_Function
  (
    Cursor_Out Out t_Refcur,
    角色_In    In All_Tab_Privs.Grantee%Type
  ) Is
  Begin
    Open Cursor_Out For
      Select S.名称 || '（' || S.编号 || '）' As 系统, S.编号, S.所有者, Upper(F.函数名) As 函数名, F.中文名,
             U.Table_Name
      From zlSystems S, zlFunctions F,
           (Select Table_Schema As Owner, Grantee, Table_Name From All_Tab_Privs Where Table_Schema = User) U,
           (Select Table_Schema As 所有者, Table_Name As 函数, Privilege As 权限
             From All_Tab_Privs
             Where Privilege = 'EXECUTE' And Grantable = 'YES'
             Union
             Select Owner, Object_Name, 'EXECUTE' From All_Objects Where Owner = User And Object_Type = 'FUNCTION') R
      Where F.系统 = S.编号 And S.所有者 = R.所有者 And Upper(F.函数名) = R.函数 And U.Grantee(+) = 角色_In And
            U.Owner(+) = R.所有者 And U.Table_Name(+) = R.函数;
  End Get_Old_Function;

  -----------------------------------------------------------------------------
  -- 功能：FillFunc
  -----------------------------------------------------------------------------
  Procedure Get_Zlprogfunc
  (
    Cursor_Out Out t_Refcur,
    系统_In    In zlProgFuncs.系统%Type,
    序号_In    In zlProgFuncs.序号%Type
  ) Is
  Begin
    If Nvl(系统_In, 0) = 0 Then
      Open Cursor_Out For
        Select 功能, 排列, 说明 From zlProgFuncs Where 系统 Is Null And 序号 = 序号_In And 功能 <> '基本';
    Else
      Open Cursor_Out For
        Select a.功能, a.排列, a.说明
        From zlProgFuncs A, Zlregfunc B
        Where (A.系统 / 100) = B.系统 And A.序号 = B.序号 And A.功能 = B.功能 And A.系统 = 系统_In And A.序号 = 序号_In And
              A.功能 <> '基本';
    End If;
  End Get_Zlprogfunc;

  -----------------------------------------------------------------------------
  -- 功能：所有可显示的系统
  -----------------------------------------------------------------------------
  Procedure Get_All_Systems(Cursor_Out Out t_Refcur) Is
  Begin
    Open Cursor_Out For
      Select A.编号, A.名称, A.所有者, A.版本号
      From zlSystems A,
           (Select Owner
             From All_Tables
             Where Table_Name In ('部门表', '人员表', '部门人员', '上机人员表')
             Group By Owner
             Having Count(Owner) = 4) B
      Where A.所有者 = B.Owner
      Order By A.编号;
  End Get_All_Systems;

  -----------------------------------------------------------------------------
  -- 功能：是否有指定的权限
  -----------------------------------------------------------------------------
  Procedure Get_Have_Impower
  (
    Cursor_Out   Out t_Refcur,
    Privilege_In In Varchar2
  ) Is
  Begin
    If Upper(Privilege_In) = 'CREATE USER' Then
      Open Cursor_Out For
        Select 1
        From User_Sys_Privs
        Where Privilege = 'CREATE USER'
        Union All
        Select 1 From Role_Sys_Privs Where Privilege = 'CREATE USER';
    End If;
    -- 今后可以扩充判断是否具备其他权限
  End Get_Have_Impower;

  -----------------------------------------------------------------------------
  -- 功能：是所有角色对应的模块
  -----------------------------------------------------------------------------
  Procedure Get_All_Module(Cursor_Out Out t_Refcur) Is
  Begin
    Open Cursor_Out For
      Select A.角色, A.序号, A.功能, B.标题, B.说明
      From zlRoleGrant A, zlPrograms B
      Where A.序号 = B.序号 And Nvl(A.系统, 0) = Nvl(B.系统, 0)
      Order By A.角色, A.序号;
  End Get_All_Module;

End b_Popedom;
/

Create Or Replace Package Body zltools.b_Public Is

  -----------------------------------------------------------------------------
  -- 功能：取系统日期
  -----------------------------------------------------------------------------
  Procedure Get_Current_Date(Cursor_Out Out t_Refcur) Is
  Begin
    Open Cursor_Out For
      Select Sysdate As 日期 From Dual;
  End Get_Current_Date;

  -----------------------------------------------------------------------------
  -- 功能：删除错误日志或运行日志
  -----------------------------------------------------------------------------
  Procedure Delete_All_Log(Runtimelog_In In Number := 0) Is
    n_Count Number;
    n_Loop  Number;
  Begin
    If Runtimelog_In = 1 Then
      Select Count(进入时间) Into n_Count From zlDiaryLog;
      If n_Count > 1000 Then
        For n_Loop In 1 .. Ceil(n_Count - 1000) Loop
          Delete zlDiaryLog Where Rownum < 10001;
          Commit;
        End Loop;
      Else
        If n_Count > 0 Then
          Delete zlDiaryLog;
          Commit;
        End If;
      End If;
    Else
      Select Count(时间) Into n_Count From zlErrorLog;
      If n_Count > 1000 Then
        For n_Loop In 1 .. Ceil(n_Count - 1000) Loop
          Delete zlErrorLog Where Rownum < 10001;
          Commit;
        End Loop;
      Else
        If n_Count > 0 Then
          Delete zlErrorLog;
          Commit;
        End If;
      End If;
    End If;
  Exception
    When Others Then
      Zl_Errorcenter(Sqlcode, Sqlerrm);
  End Delete_All_Log;

  -----------------------------------------------------------------------------
  -- 功能：删除当前运行日志
  -----------------------------------------------------------------------------
  Procedure Delete_Diarylog
  (
    会话号_In   Number,
    用户名_In   Varchar2,
    工作站_In   Varchar2,
    部件名_In   Varchar2,
    工作内容_In Varchar2,
    进入时间_In Date
  ) Is
  Begin
    Delete zlDiaryLog
    Where 会话号 = 会话号_In And 用户名 = 用户名_In And 工作站 = 工作站_In And 部件名 = 部件名_In And
          工作内容 = 工作内容_In And 进入时间 = 进入时间_In;
    Commit;
  Exception
    When Others Then
      Zl_Errorcenter(Sqlcode, Sqlerrm);
  End Delete_Diarylog;

  -----------------------------------------------------------------------------
  -- 功能：删除当前错误日志
  -----------------------------------------------------------------------------
  Procedure Delete_Errorlog
  (
    会话号_In   Number,
    用户名_In   Varchar2,
    工作站_In   Varchar2,
    类型_In     Number,
    错误序号_In Number,
    时间_In     Date
  ) Is
  Begin
    Delete zlErrorLog
    Where 会话号 = 会话号_In And 用户名 = 用户名_In And 工作站 = 工作站_In And 类型 = 类型_In And
          错误序号 = 错误序号_In And 时间 = 时间_In;
    Commit;
  
  Exception
    When Others Then
      Zl_Errorcenter(Sqlcode, Sqlerrm);
  End Delete_Errorlog;

  -----------------------------------------------------------------------------
  -- 功能：取注册码
  -----------------------------------------------------------------------------
  Procedure Get_Regcode(Cursor_Out Out t_Refcur) Is
  Begin
    Open Cursor_Out For
      Select 内容 From zlRegInfo Where 项目 = '注册码' Or 项目 = '授权证章' Order By 行号;
  Exception
    When Others Then
      Zl_Errorcenter(Sqlcode, Sqlerrm);
  End Get_Regcode;

  -----------------------------------------------------------------------------
  -- 功能：判断管理工具的版本
  -----------------------------------------------------------------------------
  Procedure Judge_Managerver(Cursor_Out Out t_Refcur) Is
    v_编号      Varchar2(10);
    v_Constname Varchar2(30);
  Begin
    Select 编号 Into v_编号 From zlSvrTools Where 编号 = '0502';
    If v_编号 Is Null Then
      -- 那是最早的，版本为9.0.0
      Open Cursor_Out For
        Select 9 * Power(10, 8) As 版本 From Dual;
    Else
      Select Constraint_Name
      Into v_Constname
      From All_Constraints C
      Where C.Constraint_Name = 'ZLOPTIONS_PK' And C.Owner = 'ZLTOOLS' And C.Table_Name = 'ZLOPTIONS';
      If v_Constname Is Null Then
        -- 如果不存在zloptions_Pk约束，说明没有执行第二个升级脚本，版本为9.1.0
        Open Cursor_Out For
          Select 9 * Power(10, 8) + 1 * Power(10, 4) As 版本 From Dual;
      Else
        Select Tname Into v_Constname From Tab C Where C.Tname = 'ZLCLIENTS';
        If v_Constname Is Null Then
          -- 如果不存在ZLCLIENTS 说明没有执行第三个升级脚本，版本为9.2.0
          Open Cursor_Out For
            Select 9 * Power(10, 8) + 2 * Power(10, 4) As 版本 From Dual;
        Else

          Select 名称
          Into v_Constname
          From zlAutoJobs C
          Where 系统 Is Null And 类型 = 1 And 序号 = 1 And 名称 = '日志数据自动处理';
          If v_Constname Is Null Then
            Open Cursor_Out For
              Select 9 * Power(10, 8) + 3 * Power(10, 4) As 版本 From Dual;
          Else
            --- 9.18
            Open Cursor_Out For
              Select 9 * Power(10, 8) + 18 * Power(10, 4) As 版本 From Dual;
          End If;
        End If;
      End If;
    
    End If;
  Exception
    When Others Then
      Zl_Errorcenter(Sqlcode, Sqlerrm);
  End Judge_Managerver;

  -----------------------------------------------------------------------------
  -- 功能：取版本号
  -----------------------------------------------------------------------------
  Procedure Get_Ver(Cursor_Out Out t_Refcur) Is
  Begin
    Open Cursor_Out For
      Select 内容 From zlRegInfo Where 项目 = '版本号';
  Exception
    When Others Then
      Zl_Errorcenter(Sqlcode, Sqlerrm);
  End Get_Ver;

  -----------------------------------------------------------------------------
  -- 功能：更新版本号
  -----------------------------------------------------------------------------
  Procedure Update_Ver(Verstring_In In Varchar2) Is
  Begin
    Update zlRegInfo Set 内容 = Verstring_In Where 项目 = '版本号';
    If Sql%NotFound Then
      Insert Into zlRegInfo (项目, 行号, 内容) Values ('版本号', 1, Verstring_In);
    End If;
  Exception
    When Others Then
      Zl_Errorcenter(Sqlcode, Sqlerrm);
  End Update_Ver;

  -----------------------------------------------------------------------------
  -- 功能：取得系统所有者名称
  -----------------------------------------------------------------------------
  Procedure Get_Owner_Name
  (
    Cursor_Out Out t_Refcur,
    编号_In    In zlSystems.编号%Type := 0
  ) Is
  Begin
    Open Cursor_Out For
      Select Upper(所有者) As 所有者 From zlSystems Where 编号 = 编号_In;
  End Get_Owner_Name;

  -----------------------------------------------------------------------------
  -- 功能：取注册表中信息
  -----------------------------------------------------------------------------
  Procedure Get_Reginfo
  (
    Cursor_Out Out t_Refcur,
    项目_In    In zlRegInfo.项目%Type := Null
  ) Is
  Begin
    If Trim(Nvl(项目_In, '空')) = '空' Then
      Open Cursor_Out For
        Select * From zlRegInfo;
    Else
      Open Cursor_Out For
        Select 内容 From zlRegInfo Where 项目 = 项目_In Order By 行号;
    End If;
  Exception
    When Others Then
      Zl_Errorcenter(Sqlcode, Sqlerrm);
  End Get_Reginfo;

  -----------------------------------------------------------------------------
  -- 功能：取zlGetSvrToolsg数据
  -----------------------------------------------------------------------------
  Procedure Get_Zlsvrtools(Cursor_Out Out t_Refcur) Is
  Begin
    Open Cursor_Out For
      Select * From zlSvrTools Start With 上级 Is Null Connect By Prior 编号 = 上级 Order By Level, 编号;
  End Get_Zlsvrtools;

  -----------------------------------------------------------------------------
  -- 功能：取失效过程
  -----------------------------------------------------------------------------
  Procedure Get_Invalid_Procedure(Cursor_Out Out t_Refcur) Is
  Begin
    Open Cursor_Out For
      Select Object_Name From All_Objects Where Owner = User And Object_Type = 'PROCEDURE' And Status = 'INVALID';
  End Get_Invalid_Procedure;

  -----------------------------------------------------------------------------
  -- 功能：取已安装系统清单
  -----------------------------------------------------------------------------
  Procedure Get_Zlsystems
  (
    Cursor_Out Out t_Refcur,
    所有者_In  In zlSystems.所有者%Type := Null
  ) Is
  Begin
    If Nvl(所有者_In, '空') = '空' Then
      Open Cursor_Out For
        Select * From zlSystems Order By 编号;
    Else
      Open Cursor_Out For
        Select * From zlSystems Where Upper(所有者) = Upper(所有者_In) Order By 编号;
    End If;
  Exception
    When Others Then
      Zl_Errorcenter(Sqlcode, Sqlerrm);
  End Get_Zlsystems;

End b_Public;
/

CREATE OR REPLACE PACKAGE BODY ZLTOOLS.b_Runmana IS
  -----------------------------------------------------------------------------
  -- 功能：取ZlAutoJob序列号
  -----------------------------------------------------------------------------
  PROCEDURE Get_Job_Number
  (
    Cursor_Out Out t_refcur,
    系统_In  IN NUMBER
  ) IS
  BEGIN
    Open cursor_out For
    SELECT 序号 + 1 As 序号
    FROM Zlautojobs
    WHERE Nvl(系统, 0) = 系统_In AND 类型 = 3 AND
          序号 + 1 NOT IN (SELECT 序号 FROM Zlautojobs WHERE Nvl(系统, 0) = 系统_In AND 类型 = 3);
  END Get_Job_Number;

  -----------------------------------------------------------------------------
  -- 功能：取AutoJobs
  -----------------------------------------------------------------------------
  PROCEDURE Get_Zlautojobs
  (
    Cur_Out  OUT t_Refcur,
    系统_In  IN Zlautojobs.系统%TYPE,
    类型_In  IN Zlautojobs.类型%TYPE,
    Owner_In IN All_Jobs.Schema_User%TYPE := NULL
  ) IS
  BEGIN
    IF Nvl(Owner_In, '空') = '空' THEN
      OPEN Cur_Out FOR
        SELECT 序号, 说明, 参数, 内容, 作业号, 名称, Decode(作业号, 0, '否', NULL, '否', '是') AS 自动执行,
               Decode(j.Broken, NULL, '未知', 'Y', '无效', '有效') AS 状态, To_Char(执行时间, 'HH24:MI:SS') AS 执行时间,
               间隔时间 || '天' AS 间隔时间
        FROM Zlautojobs z, All_Jobs j
        WHERE z.作业号 = j.Job(+) AND Nvl(z.系统, 0) = 系统_In AND 类型 = 类型_In;
    
    ELSE
      OPEN Cur_Out FOR
        SELECT 序号, 说明, 参数, 内容, 作业号, 名称, Decode(作业号, 0, '否', NULL, '否', '是') AS 自动执行,
               Decode(j.Broken, NULL, '未知', 'Y', '无效', '有效') AS 状态, To_Char(执行时间, 'HH24:MI:SS') AS 执行时间,
               间隔时间 || '天' AS 间隔时间
        FROM Zlautojobs z, (SELECT Job, Broken FROM All_Jobs WHERE Schema_User = Upper(Owner_In)) j
        WHERE z.作业号 = j.Job(+) AND Nvl(z.系统, 0) = 系统_In AND 类型 = 类型_In;
    END IF;
  END Get_Zlautojobs;

  -----------------------------------------------------------------------------
  -- 功能：取ZlDataMove描述
  -----------------------------------------------------------------------------
  PROCEDURE Get_Depict
  (
    cursor_out   Out t_Refcur,
    系统_In      IN Zldatamove.系统%TYPE,
    组号_In      IN Zldatamove.组号%Type
  ) IS
  Begin
    Open cursor_out For
    SELECT 转出描述 FROM Zldatamove WHERE Nvl(系统, 0) = 系统_In AND 组号 = 组号_In;
  END Get_Depict;

  -----------------------------------------------------------------------------
  -- 功能：取Zl开头的过程名
  -----------------------------------------------------------------------------
  PROCEDURE Get_Zlprocedure_Name
  (
    Cur_Out  OUT t_Refcur,
    系统_In  IN VARCHAR2 := '',
    Owner_In IN All_Objects.Owner%TYPE
  ) IS
  BEGIN
    OPEN Cur_Out FOR
      SELECT Object_Name
      FROM All_Objects
      WHERE Object_Type = 'PROCEDURE' AND Object_Name LIKE 'ZL' || 系统_In || '_USERJOB%' AND Status = 'VALID' AND
            Owner = Owner_In;
  END Get_Zlprocedure_Name;

  -----------------------------------------------------------------------------
  -- 功能：取指定过程的源代码
  -----------------------------------------------------------------------------
  PROCEDURE Get_Source
  (
    Cur_Out  OUT t_Refcur,
    过程_In  IN VARCHAR2,
    Owner_In IN All_Objects.Owner%TYPE
  ) IS
  BEGIN
    OPEN Cur_Out FOR
      SELECT Rtrim(Ltrim(Upper(Text))) FROM All_Source WHERE NAME = 过程_In AND Owner = Owner_In;
  END Get_Source;

  -----------------------------------------------------------------------------
  -- 功能：取zlClients的MAX IP
  -----------------------------------------------------------------------------
  PROCEDURE Get_Client_Maxip(Cur_Out OUT t_Refcur) IS
  BEGIN
    OPEN Cur_Out FOR
      SELECT MAX(Ip) AS Ip FROM Zlclients;
  END Get_Client_Maxip;

  -----------------------------------------------------------------------------
  -- 功能：取zlClients的记录
  -----------------------------------------------------------------------------
  PROCEDURE Get_Client
  (
    Cur_Out   OUT t_Refcur,
    工作站_In IN Zlclients.工作站%TYPE := NULL
  ) IS
    v_Sql VARCHAR2(1000);
  BEGIN
    IF Nvl(工作站_In, '空') = '空' THEN
      v_Sql := 'Select a.Ip, a.工作站, a.Cpu, a.内存, a.硬盘, a.操作系统, a.部门, a.用途, a.说明, a.升级标志, a.禁止使用,
							 a.连接数, Decode(b.Terminal, Null, 0, 1) As 状态, a.收集标志
				From Zlclients a, (Select Distinct Terminal From V$session) b
				Where Upper(a.工作站) = Upper(b.Terminal(+))
				Order By a.Ip';
      OPEN Cur_Out FOR v_Sql;
    ELSE
      OPEN Cur_Out FOR
        SELECT Ip, 工作站, Cpu, 内存, 硬盘, 操作系统, 部门, 用途, 说明, 升级标志, 禁止使用, 连接数
        FROM Zlclients
        WHERE Upper(工作站) = 工作站_In;
    END IF;
  END Get_Client;

  -----------------------------------------------------------------------------
  -- 功能：取zlClients的站点
  -----------------------------------------------------------------------------
  PROCEDURE Get_Client_Station(Cur_Out OUT t_Refcur) IS
  BEGIN
    OPEN Cur_Out FOR
      SELECT DISTINCT Upper(工作站) || '[' || Ip || ']' AS 站点, Upper(工作站) 工作站 FROM Zlclients;
  END Get_Client_Station;

  -----------------------------------------------------------------------------
  -- 功能：取方案号
  -----------------------------------------------------------------------------
  PROCEDURE Get_Project_No(Cur_Out OUT t_Refcur) IS
  BEGIN
    OPEN Cur_Out FOR
      SELECT 方案号 FROM Zlclientparaset WHERE Rownum = 1;
  END Get_Project_No;

  -----------------------------------------------------------------------------
  -- 功能：取方案
  -----------------------------------------------------------------------------
  PROCEDURE Get_Client_Scheme(Cur_Out OUT t_Refcur) IS
  BEGIN
    OPEN Cur_Out FOR
      SELECT 方案号, 方案号 || '-' || 方案名称 AS 方案名称, 方案描述, 工作站, 用户名 FROM Zlclientscheme;
  END Get_Client_Scheme;

  -----------------------------------------------------------------------------
  -- 功能：取恢复信息
  -----------------------------------------------------------------------------
  PROCEDURE Get_Resile
  (
    Cur_Out   OUT t_Refcur,
    方案号_In IN Zlclientparaset.方案号%TYPE,
    类型_In   IN NUMBER := 0
  ) IS
  BEGIN
    IF 类型_In = 0 THEN
      OPEN Cur_Out FOR
        SELECT DISTINCT a.工作站 || Decode(m.工作站, NULL, ' ', '[' || m.Ip || ']') AS 工作站, a.用户名, a.恢复标志,
                        '[' || b.方案号 || ']' || b.方案名称 AS 方案名称
        FROM Zlclientparaset a, Zlclientscheme b, Zlclients m
        WHERE a.方案号 = b.方案号 AND a.工作站 = m.工作站(+) AND a.方案号 = 方案号_In;
    END IF;
  
    IF 类型_In = 1 THEN
      OPEN Cur_Out FOR
        SELECT DISTINCT Upper(工作站) 工作站, MIN(恢复标志) 恢复标志
        FROM Zlclientparaset a
        WHERE a.方案号 = 方案号_In
        GROUP BY 工作站;
    END IF;
  
    IF 类型_In = 2 THEN
      OPEN Cur_Out FOR
        SELECT DISTINCT Upper(用户名) 用户名, MAX(工作站) 工作站, MIN(Decode(恢复标志, 2, 0, 恢复标志)) 恢复标志
        FROM Zlclientparaset a
        WHERE a.方案号 = 方案号_In
        GROUP BY 用户名
        ORDER BY 用户名;
    END IF;
  
  END Get_Resile;

  -----------------------------------------------------------------------------
  -- 功能：取zldataMove数据
  -----------------------------------------------------------------------------
  PROCEDURE Get_Zldatamove
  (
    Cur_Out OUT t_Refcur,
    系统_In IN Zldatamove.系统%TYPE
  ) IS
  BEGIN
    OPEN Cur_Out FOR
      SELECT 组号, 组名, 说明, 日期字段, 转出描述, 上次日期 FROM Zldatamove WHERE 系统 = 系统_In ORDER BY 组号;
  END Get_Zldatamove;

  -----------------------------------------------------------------------------
  -- 功能：取日志数据
  -----------------------------------------------------------------------------
  PROCEDURE Get_Log
  (
    Cur_Out     OUT t_Refcur,
    日志类型_In IN VARCHAR2,
    Where_In    IN VARCHAR2
  ) IS
    v_Sql VARCHAR2(1000);
  BEGIN
    IF 日志类型_In = '错误日志' THEN
      v_Sql := 'Select 会话号,工作站,用户名,错误序号,错误信息,To_char(时间,''yyyy-MM-dd hh24:mi:ss'') 时间
					 ,Decode(类型,1,''存储过程错误'',2,''数据联结层错误'',''应用程序层错误'') 错误类型
						From ZlErrorLog Where ' || Where_In;
      OPEN Cur_Out FOR v_Sql;
    END IF;
    IF 日志类型_In = '运行日志' THEN
      v_Sql := 'Select 会话号,工作站,用户名,部件名,工作内容,To_char(进入时间,''yyyy-MM-dd hh24:mi:ss'') 进入时间
								 ,To_char(退出时间,''yyyy-MM-dd hh24:mi:ss'') 退出时间,Decode(退出原因,1,''正常退出'',''异常退出'') 退出原因
									From ZlDiaryLog Where ' || Where_In;
      OPEN Cur_Out FOR v_Sql;
    END IF;
  END Get_Log;

  -----------------------------------------------------------------------------
  -- 功能：取日志记录数
  -----------------------------------------------------------------------------
  PROCEDURE Get_Log_Count
  (
    Cur_Out     OUT t_Refcur,
    日志类型_In IN VARCHAR2
  ) IS
  BEGIN
    IF 日志类型_In = '错误日志' THEN
      OPEN Cur_Out FOR
        SELECT COUNT(*) 数量
        FROM Zlerrorlog
        UNION ALL
        SELECT Nvl(To_Number(参数值), 0) FROM Zloptions WHERE 参数号 = 4;
    END IF;
    IF 日志类型_In = '运行日志' THEN
      OPEN Cur_Out FOR
        SELECT COUNT(*) 数量
        FROM Zldiarylog
        UNION ALL
        SELECT Nvl(To_Number(参数值), 0) FROM Zloptions WHERE 参数号 = 2;
    
    END IF;
  END Get_Log_Count;

  -----------------------------------------------------------------------------
  -- 功能：取zlfilesupgradeg数据
  -----------------------------------------------------------------------------
  PROCEDURE Get_Zlfilesupgrade(Cur_Out OUT t_Refcur) IS
  BEGIN
    OPEN Cur_Out FOR
      SELECT a.序号, a.文件名, a.版本号, a.修改日期, b.名称 AS 说明
      FROM Zlfilesupgrade a, Zlcomponent b
      WHERE Upper(a.文件名) = Upper(b.部件(+))
      ORDER BY a.序号;
  END Get_Zlfilesupgrade;

  -----------------------------------------------------------------------------
  -- 功能：取非注册项目
  -----------------------------------------------------------------------------
  PROCEDURE Get_Not_Regist(Cur_Out OUT t_Refcur) IS
  BEGIN
    OPEN Cur_Out FOR
      SELECT 项目, 内容
      FROM Zlreginfo
      WHERE 项目 NOT IN ('发行码', '版本号', '服务器目录', '访问用户', '访问密码', '收集目录', '收集类型', '注册码',
             '授权证章', '授权工具', '授权邮戳');
  END Get_Not_Regist;

  -----------------------------------------------------------------------------
  -- 功能：取参数值
  -----------------------------------------------------------------------------
  PROCEDURE Get_Zloption
  (
    Cur_Out   OUT t_Refcur,
    参数号_In IN Zloptions.参数号%TYPE
  ) IS
  BEGIN
    OPEN Cur_Out FOR
      SELECT Nvl(参数值, 缺省值) Option_Value FROM Zloptions WHERE 参数号 = 参数号_In;
  END Get_Zloption;

END b_Runmana;
/

--------------------------------------------------------------------------
-- 创建同义词
--------------------------------------------------------------------------
Create Public Synonym zlRegFunc For zlTools.zlRegFunc
/
Create Public Synonym zlRegFile For zlTools.zlRegFile
/
Create Public Synonym zlRegAudit For zlTools.zlRegAudit
/

--------------------------------------------------------------------------
-- 权限处理
--------------------------------------------------------------------------
Grant Select On zlTools.zlRegFunc To Public
/
Grant Select On zlTools.zlRegFile To Public
/
Grant Select On zlTools.zlRegAudit To Public
/
grant execute on zltools.t_reg_record to public
/
grant execute on zltools.t_reg_Rowset to public
/
grant execute on zltools.t_Menu_Record to public
/
grant execute on zltools.t_Menu_Rowset to public
/
grant execute on zltools.f_Reg_Audit to public
/
grant execute on zltools.f_Reg_Func to public
/
grant execute on zltools.f_Reg_Info to public
/
grant execute on zltools.f_Reg_Tool to public
/
grant execute on zltools.f_Reg_Menu to public
/
grant execute on zltools.p_Reg_Apply to public
/
grant execute on zltools.b_LoadAndUnload To Public
/
grant execute on zltools.b_datamana To Public
/
grant execute on zltools.b_expert To Public
/
grant execute on zltools.b_popedom To Public
/
grant execute on zltools.b_public To Public
/
grant execute on zltools.b_runmana To Public
/

DECLARE
  CURSOR c_Data IS
    SELECT 所有者 FROM zlsystems a;
  v_Sql varchar2(1000);
BEGIN
  FOR r IN c_Data LOOP
    v_sql :='Grant insert,delete,update on zltools.zlRegFunc to '||r.所有者;
    execute immediate v_sql;
    v_sql :='Grant insert,delete,update on zltools.zlregfile to '||r.所有者;
    execute immediate v_sql;
    v_sql :='Grant insert,delete,update on zltools.zlRegAudit to '||r.所有者;
    execute immediate v_sql;
  END LOOP;
END;
/
----------------------------------------------------------------------
-- 数据调整
----------------------------------------------------------------------
Update zltools.zlsvrtools Set 编号='0105',上级='01' Where 编号='010301'
/
Update zltools.zlReginfo Set 内容='9.25.0' Where 项目='版本号'
/
Commit
/
